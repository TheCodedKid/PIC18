

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Aug  9 22:05:09 2022

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    57  0000                     
    58                           ; Version 2.20
    59                           ; Generated 12/02/2020 GMT
    60                           ; 
    61                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F4321 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     
    93                           	psect	nvCOMRAM
    94  000068                     __pnvCOMRAM:
    95                           	callstack 0
    96  000068                     _signalPORT:
    97                           	callstack 0
    98  000068                     	ds	2
    99  00006A                     __displayfunction:
   100                           	callstack 0
   101  00006A                     	ds	1
   102                           
   103                           	psect	nvBANK0
   104  0000B0                     __pnvBANK0:
   105                           	callstack 0
   106  0000B0                     _dataPORT:
   107                           	callstack 0
   108  0000B0                     	ds	2
   109  0000                     _TMR0	set	4054
   110  0000                     _PORTBbits	set	3969
   111  0000                     _CCPR2L	set	4027
   112  0000                     _ADRESL	set	4035
   113  0000                     _ADRESH	set	4036
   114  0000                     _T0CONbits	set	4053
   115  0000                     _RCONbits	set	4048
   116  0000                     _IPR1bits	set	3999
   117  0000                     _PIE1bits	set	3997
   118  0000                     _PIR1bits	set	3998
   119  0000                     _INTCON2bits	set	4081
   120  0000                     _INTCONbits	set	4082
   121  0000                     _ADCON0bits	set	4034
   122  0000                     _ADCON2bits	set	4032
   123  0000                     _CCP2CONbits	set	4026
   124  0000                     _TRISCbits	set	3988
   125  0000                     _T2CONbits	set	4042
   126  0000                     _PR2	set	4043
   127  0000                     _TRISB	set	3987
   128  0000                     _TRISD	set	3989
   129  0000                     _TRISA	set	3986
   130  0000                     _ADCON1	set	4033
   131  0000                     _PORTD	set	3971
   132  0000                     _PORTA	set	3968
   133                           
   134                           	psect	smallconst
   135  000200                     __psmallconst:
   136                           	callstack 0
   137  000200  00                 	db	0
   138  000201                     STR_4:
   139  000201  20                 	db	32
   140  000202  20                 	db	32
   141  000203  20                 	db	32
   142  000204  53                 	db	83	;'S'
   143  000205  54                 	db	84	;'T'
   144  000206  4F                 	db	79	;'O'
   145  000207  50                 	db	80	;'P'
   146  000208  50                 	db	80	;'P'
   147  000209  45                 	db	69	;'E'
   148  00020A  44                 	db	68	;'D'
   149  00020B  21                 	db	33
   150  00020C  21                 	db	33
   151  00020D  21                 	db	33
   152  00020E  00                 	db	0
   153  00020F                     STR_2:
   154  00020F  4D                 	db	77	;'M'
   155  000210  61                 	db	97	;'a'
   156  000211  78                 	db	120	;'x'
   157  000212  20                 	db	32
   158  000213  53                 	db	83	;'S'
   159  000214  70                 	db	112	;'p'
   160  000215  65                 	db	101	;'e'
   161  000216  65                 	db	101	;'e'
   162  000217  64                 	db	100	;'d'
   163  000218  3A                 	db	58	;':'
   164  000219  20                 	db	32
   165  00021A  00                 	db	0
   166  00021B                     STR_3:
   167  00021B  44                 	db	68	;'D'
   168  00021C  65                 	db	101	;'e'
   169  00021D  6C                 	db	108	;'l'
   170  00021E  61                 	db	97	;'a'
   171  00021F  79                 	db	121	;'y'
   172  000220  3A                 	db	58	;':'
   173  000221  20                 	db	32
   174  000222  00                 	db	0
   175  000223                     STR_1:
   176  000223  25                 	db	37
   177  000224  64                 	db	100	;'d'
   178  000225  00                 	db	0
   179  000226  00                 	db	0	; dummy byte at the end
   180  0000                     
   181                           ; #config settings
   182                           
   183                           	psect	cinit
   184  001038                     __pcinit:
   185                           	callstack 0
   186  001038                     start_initialization:
   187                           	callstack 0
   188  001038                     __initialization:
   189                           	callstack 0
   190                           
   191                           ; Clear objects allocated to BANK1 (32 bytes)
   192  001038  EE01  F050         	lfsr	0,__pbssBANK1
   193  00103C  0E20               	movlw	32
   194  00103E                     clear_0:
   195  00103E  6AEE               	clrf	postinc0,c
   196  001040  06E8               	decf	wreg,f,c
   197  001042  E1FD               	bnz	clear_0
   198                           
   199                           ; Clear objects allocated to BANK0 (8 bytes)
   200  001044  EE00  F0A8         	lfsr	0,__pbssBANK0
   201  001048  0E08               	movlw	8
   202  00104A                     clear_1:
   203  00104A  6AEE               	clrf	postinc0,c
   204  00104C  06E8               	decf	wreg,f,c
   205  00104E  E1FD               	bnz	clear_1
   206                           
   207                           ; Clear objects allocated to COMRAM (18 bytes)
   208  001050  EE00  F056         	lfsr	0,__pbssCOMRAM
   209  001054  0E12               	movlw	18
   210  001056                     clear_2:
   211  001056  6AEE               	clrf	postinc0,c
   212  001058  06E8               	decf	wreg,f,c
   213  00105A  E1FD               	bnz	clear_2
   214  00105C                     end_of_initialization:
   215                           	callstack 0
   216  00105C                     __end_of__initialization:
   217                           	callstack 0
   218  00105C  906B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   219  00105E  926B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   220  001060  0E00               	movlw	low (__Lmediumconst shr (0+16))
   221  001062  6EF8               	movwf	tblptru,c
   222  001064  0100               	movlb	0
   223  001066  EFD4  F004         	goto	_main	;jump to C main() function
   224                           
   225                           	psect	bssCOMRAM
   226  000056                     __pbssCOMRAM:
   227                           	callstack 0
   228  000056                     _prec:
   229                           	callstack 0
   230  000056                     	ds	2
   231  000058                     _flags:
   232                           	callstack 0
   233  000058                     	ds	2
   234  00005A                     _waitvalue:
   235                           	callstack 0
   236  00005A                     	ds	2
   237  00005C                     _delay:
   238                           	callstack 0
   239  00005C                     	ds	2
   240  00005E                     _counter:
   241                           	callstack 0
   242  00005E                     	ds	2
   243  000060                     _Pot2:
   244                           	callstack 0
   245  000060                     	ds	2
   246  000062                     _Pot1:
   247                           	callstack 0
   248  000062                     	ds	2
   249  000064                     _flip:
   250                           	callstack 0
   251  000064                     	ds	1
   252  000065                     __numlines:
   253                           	callstack 0
   254  000065                     	ds	1
   255  000066                     __displaymode:
   256                           	callstack 0
   257  000066                     	ds	1
   258  000067                     __displaycontrol:
   259                           	callstack 0
   260  000067                     	ds	1
   261                           
   262                           	psect	bssBANK0
   263  0000A8                     __pbssBANK0:
   264                           	callstack 0
   265  0000A8                     __rowOffsets:
   266                           	callstack 0
   267  0000A8                     	ds	4
   268  0000AC                     _nout:
   269                           	callstack 0
   270  0000AC                     	ds	2
   271  0000AE                     _width:
   272                           	callstack 0
   273  0000AE                     	ds	2
   274                           
   275                           	psect	bssBANK1
   276  000150                     __pbssBANK1:
   277                           	callstack 0
   278  000150                     _dbuf:
   279                           	callstack 0
   280  000150                     	ds	32
   281                           
   282                           	psect	cstackBANK1
   283  000100                     __pcstackBANK1:
   284                           	callstack 0
   285  000100                     print_int@s_num:
   286                           	callstack 0
   287                           
   288                           ; 80 bytes @ 0x0
   289  000100                     	ds	80
   290                           
   291                           	psect	cstackBANK0
   292  000080                     __pcstackBANK0:
   293                           	callstack 0
   294  000080                     ?_vfpfcnvrt:
   295                           	callstack 0
   296  000080                     vfpfcnvrt@fp:
   297                           	callstack 0
   298                           
   299                           ; 2 bytes @ 0x0
   300  000080                     	ds	2
   301  000082                     vfpfcnvrt@fmt:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0x2
   305  000082                     	ds	2
   306  000084                     vfpfcnvrt@ap:
   307                           	callstack 0
   308                           
   309                           ; 2 bytes @ 0x4
   310  000084                     	ds	2
   311  000086                     vfpfcnvrt@ll:
   312                           	callstack 0
   313                           
   314                           ; 8 bytes @ 0x6
   315  000086                     	ds	8
   316  00008E                     ?_vfprintf:
   317                           	callstack 0
   318  00008E                     vfprintf@fp:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0xE
   322  00008E                     	ds	2
   323  000090                     vfprintf@fmt:
   324                           	callstack 0
   325                           
   326                           ; 2 bytes @ 0x10
   327  000090                     	ds	2
   328  000092                     vfprintf@ap:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0x12
   332  000092                     	ds	2
   333  000094                     vfprintf@cfmt:
   334                           	callstack 0
   335                           
   336                           ; 2 bytes @ 0x14
   337  000094                     	ds	2
   338  000096                     ?_sprintf:
   339                           	callstack 0
   340  000096                     sprintf@s:
   341                           	callstack 0
   342                           
   343                           ; 2 bytes @ 0x16
   344  000096                     	ds	2
   345  000098                     sprintf@fmt:
   346                           	callstack 0
   347                           
   348                           ; 2 bytes @ 0x18
   349  000098                     	ds	6
   350  00009E                     sprintf@ap:
   351                           	callstack 0
   352                           
   353                           ; 2 bytes @ 0x1E
   354  00009E                     	ds	2
   355  0000A0                     sprintf@f:
   356                           	callstack 0
   357                           
   358                           ; 6 bytes @ 0x20
   359  0000A0                     	ds	6
   360  0000A6                     print_int@num:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0x26
   364  0000A6                     	ds	2
   365                           
   366                           	psect	cstackCOMRAM
   367  000001                     __pcstackCOMRAM:
   368                           	callstack 0
   369  000001                     i2write8bits@value:
   370                           	callstack 0
   371                           
   372                           ; 1 bytes @ 0x0
   373  000001                     	ds	1
   374  000002                     i2send@mode:
   375                           	callstack 0
   376                           
   377                           ; 1 bytes @ 0x1
   378  000002                     	ds	1
   379  000003                     i2send@value:
   380                           	callstack 0
   381                           
   382                           ; 1 bytes @ 0x2
   383  000003                     	ds	1
   384  000004                     i2sendData@value:
   385                           	callstack 0
   386                           
   387                           ; 1 bytes @ 0x3
   388  000004                     	ds	1
   389  000005                     i2write@chr:
   390                           	callstack 0
   391                           
   392                           ; 1 bytes @ 0x4
   393  000005                     	ds	1
   394  000006                     i2print@chr:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0x5
   398  000006                     	ds	2
   399  000008                     ??_shutoff:
   400  000008                     
   401                           ; 1 bytes @ 0x7
   402  000008                     	ds	8
   403  000010                     ??_adc_sample:
   404                           
   405                           ; 1 bytes @ 0xF
   406  000010                     	ds	5
   407  000015                     ?_strlen:
   408                           	callstack 0
   409  000015                     ?___aodiv:
   410                           	callstack 0
   411  000015                     ?___aomod:
   412                           	callstack 0
   413  000015                     setRowOffsets@row1:
   414                           	callstack 0
   415  000015                     write8bits@value:
   416                           	callstack 0
   417  000015                     pin_setup@dp:
   418                           	callstack 0
   419  000015                     fputc@c:
   420                           	callstack 0
   421  000015                     strlen@s:
   422                           	callstack 0
   423  000015                     ___aodiv@dividend:
   424                           	callstack 0
   425  000015                     ___aomod@dividend:
   426                           	callstack 0
   427                           
   428                           ; 8 bytes @ 0x14
   429  000015                     	ds	1
   430  000016                     setRowOffsets@row2:
   431                           	callstack 0
   432  000016                     send@mode:
   433                           	callstack 0
   434                           
   435                           ; 1 bytes @ 0x15
   436  000016                     	ds	1
   437  000017                     setRowOffsets@row3:
   438                           	callstack 0
   439  000017                     send@value:
   440                           	callstack 0
   441  000017                     pin_setup@sp:
   442                           	callstack 0
   443  000017                     fputc@fp:
   444                           	callstack 0
   445  000017                     strlen@a:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x16
   449  000017                     	ds	1
   450  000018                     setRowOffsets@row0:
   451                           	callstack 0
   452  000018                     sendData@value:
   453                           	callstack 0
   454  000018                     sendCommand@value:
   455                           	callstack 0
   456                           
   457                           ; 1 bytes @ 0x17
   458  000018                     	ds	1
   459  000019                     ??_fputc:
   460  000019                     begin@lines:
   461                           	callstack 0
   462  000019                     write@chr:
   463                           	callstack 0
   464  000019                     setCursor@row:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x18
   468  000019                     	ds	1
   469  00001A                     begin@dotsize:
   470                           	callstack 0
   471  00001A                     print@chr:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x19
   475  00001A                     	ds	1
   476  00001B                     ??_begin:
   477  00001B                     ??_setCursor:
   478                           
   479                           ; 1 bytes @ 0x1A
   480  00001B                     	ds	1
   481  00001C                     begin@cols:
   482                           	callstack 0
   483                           
   484                           ; 1 bytes @ 0x1B
   485  00001C                     	ds	1
   486  00001D                     setCursor@col:
   487                           	callstack 0
   488  00001D                     ___aodiv@divisor:
   489                           	callstack 0
   490  00001D                     ___aomod@divisor:
   491                           	callstack 0
   492                           
   493                           ; 8 bytes @ 0x1C
   494  00001D                     	ds	1
   495  00001E                     fputs@s:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x1D
   499  00001E                     	ds	2
   500  000020                     fputs@fp:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x1F
   504  000020                     	ds	2
   505  000022                     fputs@c:
   506                           	callstack 0
   507                           
   508                           ; 1 bytes @ 0x21
   509  000022                     	ds	1
   510  000023                     fputs@i:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x22
   514  000023                     	ds	2
   515  000025                     ?_pad:
   516                           	callstack 0
   517  000025                     ___aodiv@counter:
   518                           	callstack 0
   519  000025                     ___aomod@counter:
   520                           	callstack 0
   521  000025                     pad@fp:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0x24
   525  000025                     	ds	1
   526  000026                     ___aodiv@sign:
   527                           	callstack 0
   528  000026                     ___aomod@sign:
   529                           	callstack 0
   530                           
   531                           ; 1 bytes @ 0x25
   532  000026                     	ds	1
   533  000027                     ?_abs:
   534                           	callstack 0
   535  000027                     pad@buf:
   536                           	callstack 0
   537  000027                     abs@a:
   538                           	callstack 0
   539  000027                     ___aodiv@quotient:
   540                           	callstack 0
   541                           
   542                           ; 8 bytes @ 0x26
   543  000027                     	ds	2
   544  000029                     ??_abs:
   545  000029                     pad@p:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x28
   549  000029                     	ds	2
   550  00002B                     ??_pad:
   551                           
   552                           ; 1 bytes @ 0x2A
   553  00002B                     	ds	1
   554  00002C                     pad@i:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x2B
   558  00002C                     	ds	2
   559  00002E                     pad@w:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x2D
   563  00002E                     	ds	2
   564  000030                     ?_dtoa:
   565                           	callstack 0
   566  000030                     dtoa@fp:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0x2F
   570  000030                     	ds	2
   571  000032                     dtoa@d:
   572                           	callstack 0
   573                           
   574                           ; 8 bytes @ 0x31
   575  000032                     	ds	8
   576  00003A                     ??_dtoa:
   577                           
   578                           ; 1 bytes @ 0x39
   579  00003A                     	ds	8
   580  000042                     _dtoa$1403:
   581                           	callstack 0
   582                           
   583                           ; 2 bytes @ 0x41
   584  000042                     	ds	2
   585  000044                     dtoa@p:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0x43
   589  000044                     	ds	2
   590  000046                     dtoa@w:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x45
   594  000046                     	ds	2
   595  000048                     dtoa@s:
   596                           	callstack 0
   597                           
   598                           ; 2 bytes @ 0x47
   599  000048                     	ds	2
   600  00004A                     dtoa@n:
   601                           	callstack 0
   602                           
   603                           ; 8 bytes @ 0x49
   604  00004A                     	ds	8
   605  000052                     dtoa@i:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x51
   609  000052                     	ds	2
   610  000054                     ??_vfpfcnvrt:
   611                           
   612                           ; 1 bytes @ 0x53
   613  000054                     	ds	2
   614  000056                     
   615                           ; 1 bytes @ 0x55
   616 ;;
   617 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   618 ;;
   619 ;; *************** function _main *****************
   620 ;; Defined at:
   621 ;;		line 22 in file "emerstop2.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;		None
   624 ;; Auto vars:     Size  Location     Type
   625 ;;		None
   626 ;; Return value:  Size  Location     Type
   627 ;;                  2  213[None  ] int 
   628 ;; Registers used:
   629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMRAM   BANK0   BANK1
   635 ;;      Params:         0       0       0
   636 ;;      Locals:         0       0       0
   637 ;;      Temps:          0       0       0
   638 ;;      Totals:         0       0       0
   639 ;;Total ram usage:        0 bytes
   640 ;; Hardware stack levels required when called:   17
   641 ;; This function calls:
   642 ;;		_begin
   643 ;;		_home
   644 ;;		_pin_setup
   645 ;;		_print
   646 ;;		_print_int
   647 ;;		_setCursor
   648 ;; This function is called by:
   649 ;;		Startup code after reset
   650 ;; This function uses a non-reentrant model
   651 ;;
   652                           
   653                           	psect	text0
   654  0009A8                     __ptext0:
   655                           	callstack 0
   656  0009A8                     _main:
   657                           	callstack 14
   658  0009A8                     
   659                           ;emerstop2.c: 24:     ADCON1 = 0x07;
   660  0009A8  0E07               	movlw	7
   661  0009AA  6EC1               	movwf	193,c	;volatile
   662                           
   663                           ;emerstop2.c: 27:     TRISA = 0x00;
   664  0009AC  0E00               	movlw	0
   665  0009AE  6E92               	movwf	146,c	;volatile
   666                           
   667                           ;emerstop2.c: 32:     TRISD = 0x00;
   668  0009B0  0E00               	movlw	0
   669  0009B2  6E95               	movwf	149,c	;volatile
   670                           
   671                           ;emerstop2.c: 34:     TRISB = 0x01;
   672  0009B4  0E01               	movlw	1
   673  0009B6  6E93               	movwf	147,c	;volatile
   674                           
   675                           ;emerstop2.c: 40:     PR2 = 249;
   676  0009B8  0EF9               	movlw	249
   677  0009BA  6ECB               	movwf	203,c	;volatile
   678                           
   679                           ;emerstop2.c: 44:     T2CONbits.T2CKPS = 0b00;
   680  0009BC  0EFC               	movlw	-4
   681  0009BE  16CA               	andwf	202,f,c	;volatile
   682  0009C0                     
   683                           ;emerstop2.c: 45:     T2CONbits.TMR2ON = 1;
   684  0009C0  84CA               	bsf	202,2,c	;volatile
   685  0009C2                     
   686                           ;emerstop2.c: 49:     TRISCbits.RC1 = 0;
   687  0009C2  9294               	bcf	148,1,c	;volatile
   688                           
   689                           ;emerstop2.c: 50:     CCP2CONbits.CCP2M = 0b1100;
   690  0009C4  50BA               	movf	186,w,c	;volatile
   691  0009C6  0BF0               	andlw	-16
   692  0009C8  090C               	iorlw	12
   693  0009CA  6EBA               	movwf	186,c	;volatile
   694  0009CC                     
   695                           ;emerstop2.c: 58:     pin_setup(&PORTA, &PORTD);
   696  0009CC  0E80               	movlw	128
   697  0009CE  6E15               	movwf	pin_setup@dp^0,c
   698  0009D0  0E0F               	movlw	15
   699  0009D2  6E16               	movwf	(pin_setup@dp+1)^0,c
   700  0009D4  0E83               	movlw	131
   701  0009D6  6E17               	movwf	pin_setup@sp^0,c
   702  0009D8  0E0F               	movlw	15
   703  0009DA  6E18               	movwf	(pin_setup@sp+1)^0,c
   704  0009DC  EC91  F008         	call	_pin_setup	;wreg free
   705  0009E0                     
   706                           ;emerstop2.c: 61:     begin(16, 2, 0x00);
   707  0009E0  0E02               	movlw	2
   708  0009E2  6E19               	movwf	begin@lines^0,c
   709  0009E4  0E00               	movlw	0
   710  0009E6  6E1A               	movwf	begin@dotsize^0,c
   711  0009E8  0E10               	movlw	16
   712  0009EA  EC06  F006         	call	_begin
   713  0009EE                     
   714                           ;emerstop2.c: 74:     ADCON2bits.ADCS = 0;
   715  0009EE  0EF8               	movlw	-8
   716  0009F0  16C0               	andwf	192,f,c	;volatile
   717  0009F2                     
   718                           ;emerstop2.c: 75:     ADCON2bits.ACQT = 1;
   719  0009F2  50C0               	movf	192,w,c	;volatile
   720  0009F4  0BC7               	andlw	-57
   721  0009F6  0908               	iorlw	8
   722  0009F8  6EC0               	movwf	192,c	;volatile
   723  0009FA                     
   724                           ;emerstop2.c: 76:     ADCON2bits.ADFM = 1;
   725  0009FA  8EC0               	bsf	192,7,c	;volatile
   726  0009FC                     
   727                           ;emerstop2.c: 79:     ADCON0bits.CHS = 5;
   728  0009FC  50C2               	movf	194,w,c	;volatile
   729  0009FE  0BC3               	andlw	-61
   730  000A00  0914               	iorlw	20
   731  000A02  6EC2               	movwf	194,c	;volatile
   732  000A04                     
   733                           ;emerstop2.c: 82:     ADCON0bits.ADON = 1;
   734  000A04  80C2               	bsf	194,0,c	;volatile
   735  000A06                     
   736                           ;emerstop2.c: 85:     INTCONbits.INT0E = 1;
   737  000A06  88F2               	bsf	242,4,c	;volatile
   738  000A08                     
   739                           ;emerstop2.c: 86:     INTCONbits.INT0IF = 0;
   740  000A08  92F2               	bcf	242,1,c	;volatile
   741  000A0A                     
   742                           ;emerstop2.c: 87:     INTCON2bits.INTEDG0 = 0;
   743  000A0A  9CF1               	bcf	241,6,c	;volatile
   744  000A0C                     
   745                           ;emerstop2.c: 96:     PIR1bits.ADIF = 0;
   746  000A0C  9C9E               	bcf	158,6,c	;volatile
   747  000A0E                     
   748                           ;emerstop2.c: 97:     PIE1bits.ADIE = 1;
   749  000A0E  8C9D               	bsf	157,6,c	;volatile
   750  000A10                     
   751                           ;emerstop2.c: 98:     IPR1bits.ADIP = 0;
   752  000A10  9C9F               	bcf	159,6,c	;volatile
   753  000A12                     
   754                           ;emerstop2.c: 99:     RCONbits.IPEN = 1;
   755  000A12  8ED0               	bsf	208,7,c	;volatile
   756  000A14                     
   757                           ;emerstop2.c: 100:     INTCONbits.PEIE = 1;
   758  000A14  8CF2               	bsf	242,6,c	;volatile
   759  000A16                     
   760                           ;emerstop2.c: 101:     INTCONbits.GIE = 1;
   761  000A16  8EF2               	bsf	242,7,c	;volatile
   762  000A18                     
   763                           ;emerstop2.c: 104:     T0CONbits.PSA = 0;
   764  000A18  96D5               	bcf	213,3,c	;volatile
   765  000A1A                     
   766                           ;emerstop2.c: 105:     T0CONbits.T0PS = 0x00;
   767  000A1A  0EF8               	movlw	-8
   768  000A1C  16D5               	andwf	213,f,c	;volatile
   769  000A1E                     
   770                           ;emerstop2.c: 106:     T0CONbits.T0CS = 0;
   771  000A1E  9AD5               	bcf	213,5,c	;volatile
   772  000A20                     
   773                           ;emerstop2.c: 107:     T0CONbits.T08BIT = 0;
   774  000A20  9CD5               	bcf	213,6,c	;volatile
   775  000A22                     
   776                           ;emerstop2.c: 108:     T0CONbits.TMR0ON = 1;
   777  000A22  8ED5               	bsf	213,7,c	;volatile
   778  000A24                     
   779                           ;emerstop2.c: 109:     TMR0 = 64287;
   780  000A24  0EFB               	movlw	251
   781  000A26  6ED7               	movwf	215,c	;volatile
   782  000A28  0E1F               	movlw	31
   783  000A2A  6ED6               	movwf	214,c	;volatile
   784  000A2C                     
   785                           ;emerstop2.c: 111:     INTCONbits.TMR0IE = 1;
   786  000A2C  8AF2               	bsf	242,5,c	;volatile
   787  000A2E                     
   788                           ;emerstop2.c: 112:     INTCONbits.TMR0IF = 0;
   789  000A2E  94F2               	bcf	242,2,c	;volatile
   790  000A30                     
   791                           ;emerstop2.c: 114:     INTCONbits.GIEH = 1;
   792  000A30  8EF2               	bsf	242,7,c	;volatile
   793  000A32                     
   794                           ;emerstop2.c: 115:     INTCONbits.GIEL = 1;
   795  000A32  8CF2               	bsf	242,6,c	;volatile
   796  000A34                     l2614:
   797                           
   798                           ;emerstop2.c: 120:     {;emerstop2.c: 122:         ADCON0bits.GO = 1;
   799  000A34  82C2               	bsf	194,1,c	;volatile
   800  000A36                     
   801                           ;emerstop2.c: 124:         home();
   802  000A36  EC9A  F008         	call	_home	;wreg free
   803  000A3A                     
   804                           ;emerstop2.c: 125:         print("Max Speed: ");
   805  000A3A  0E0F               	movlw	low STR_2
   806  000A3C  6E1A               	movwf	print@chr^0,c
   807  000A3E  0E02               	movlw	high STR_2
   808  000A40  6E1B               	movwf	(print@chr+1)^0,c
   809  000A42  ECCD  F006         	call	_print	;wreg free
   810  000A46                     
   811                           ;emerstop2.c: 126:         print_int(Pot1);
   812  000A46  C062  F0A6         	movff	_Pot1,print_int@num	;volatile
   813  000A4A  C063  F0A7         	movff	_Pot1+1,print_int@num+1	;volatile
   814  000A4E  EC35  F008         	call	_print_int	;wreg free
   815  000A52                     
   816                           ;emerstop2.c: 128:         setCursor(0,1);
   817  000A52  0E00               	movlw	0
   818  000A54  6E1A               	movwf	(setCursor@row+1)^0,c
   819  000A56  0E01               	movlw	1
   820  000A58  6E19               	movwf	setCursor@row^0,c
   821  000A5A  0E00               	movlw	0
   822  000A5C  ECC0  F007         	call	_setCursor
   823  000A60                     
   824                           ;emerstop2.c: 129:         print("Delay: ");
   825  000A60  0E1B               	movlw	low STR_3
   826  000A62  6E1A               	movwf	print@chr^0,c
   827  000A64  0E02               	movlw	high STR_3
   828  000A66  6E1B               	movwf	(print@chr+1)^0,c
   829  000A68  ECCD  F006         	call	_print	;wreg free
   830  000A6C                     
   831                           ;emerstop2.c: 130:         print_int(Pot2);
   832  000A6C  C060  F0A6         	movff	_Pot2,print_int@num	;volatile
   833  000A70  C061  F0A7         	movff	_Pot2+1,print_int@num+1	;volatile
   834  000A74  EC35  F008         	call	_print_int	;wreg free
   835  000A78  EF1A  F005         	goto	l2614
   836  000A7C  EFB9  F000         	goto	start
   837  000A80                     __end_of_main:
   838                           	callstack 0
   839                           
   840 ;; *************** function _setCursor *****************
   841 ;; Defined at:
   842 ;;		line 258 in file "LiquidCrystal.c"
   843 ;; Parameters:    Size  Location     Type
   844 ;;  col             1    wreg     unsigned char 
   845 ;;  row             2   24[COMRAM] unsigned int 
   846 ;; Auto vars:     Size  Location     Type
   847 ;;  col             1   28[COMRAM] unsigned char 
   848 ;; Return value:  Size  Location     Type
   849 ;;                  1    wreg      void 
   850 ;; Registers used:
   851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   852 ;; Tracked objects:
   853 ;;		On entry : 0/0
   854 ;;		On exit  : 0/0
   855 ;;		Unchanged: 0/0
   856 ;; Data sizes:     COMRAM   BANK0   BANK1
   857 ;;      Params:         2       0       0
   858 ;;      Locals:         1       0       0
   859 ;;      Temps:          2       0       0
   860 ;;      Totals:         5       0       0
   861 ;;Total ram usage:        5 bytes
   862 ;; Hardware stack levels used:    1
   863 ;; Hardware stack levels required when called:   12
   864 ;; This function calls:
   865 ;;		_sendCommand
   866 ;; This function is called by:
   867 ;;		_main
   868 ;; This function uses a non-reentrant model
   869 ;;
   870                           
   871                           	psect	text1
   872  000F80                     __ptext1:
   873                           	callstack 0
   874  000F80                     _setCursor:
   875                           	callstack 18
   876                           
   877                           ;incstack = 0
   878                           ;setCursor@col stored from wreg
   879  000F80  6E1D               	movwf	setCursor@col^0,c
   880  000F82                     
   881                           ;LiquidCrystal.c: 258:     void setCursor(unsigned char col, unsigned row);LiquidCrystal
      +                          .c: 259:     {;LiquidCrystal.c: 262:         if (row >= _numlines)
   882  000F82  5065               	movf	__numlines^0,w,c
   883  000F84  6E1B               	movwf	??_setCursor^0,c
   884  000F86  6A1C               	clrf	(??_setCursor+1)^0,c
   885  000F88  501B               	movf	??_setCursor^0,w,c
   886  000F8A  5C19               	subwf	setCursor@row^0,w,c
   887  000F8C  501C               	movf	(??_setCursor+1)^0,w,c
   888  000F8E  581A               	subwfb	(setCursor@row+1)^0,w,c
   889  000F90  A0D8               	btfss	status,0,c
   890  000F92  EFCD  F007         	goto	u1861
   891  000F96  EFCF  F007         	goto	u1860
   892  000F9A                     u1861:
   893  000F9A  EFD5  F007         	goto	l2506
   894  000F9E                     u1860:
   895  000F9E                     
   896                           ;LiquidCrystal.c: 263:             row = _numlines - 1;
   897  000F9E  0EFF               	movlw	255
   898  000FA0  2465               	addwf	__numlines^0,w,c
   899  000FA2  6E19               	movwf	setCursor@row^0,c
   900  000FA4  6A1A               	clrf	(setCursor@row+1)^0,c
   901  000FA6  0EFF               	movlw	255
   902  000FA8  221A               	addwfc	(setCursor@row+1)^0,f,c
   903  000FAA                     l2506:
   904                           
   905                           ;LiquidCrystal.c: 265:         sendCommand(0x80 | (col + _rowOffsets[row]));
   906  000FAA  0EA8               	movlw	low __rowOffsets
   907  000FAC  2419               	addwf	setCursor@row^0,w,c
   908  000FAE  6ED9               	movwf	fsr2l,c
   909  000FB0  0E00               	movlw	high __rowOffsets
   910  000FB2  201A               	addwfc	(setCursor@row+1)^0,w,c
   911  000FB4  6EDA               	movwf	fsr2h,c
   912  000FB6  50DF               	movf	indf2,w,c
   913  000FB8  241D               	addwf	setCursor@col^0,w,c
   914  000FBA  0980               	iorlw	128
   915  000FBC  ECB1  F008         	call	_sendCommand
   916  000FC0  0012               	return		;funcret
   917  000FC2                     __end_of_setCursor:
   918                           	callstack 0
   919                           
   920 ;; *************** function _print_int *****************
   921 ;; Defined at:
   922 ;;		line 148 in file "LiquidCrystal.c"
   923 ;; Parameters:    Size  Location     Type
   924 ;;  num             2   38[BANK0 ] int 
   925 ;; Auto vars:     Size  Location     Type
   926 ;;  s_num          80    0[BANK1 ] unsigned char [80]
   927 ;; Return value:  Size  Location     Type
   928 ;;                  1    wreg      void 
   929 ;; Registers used:
   930 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   931 ;; Tracked objects:
   932 ;;		On entry : 0/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMRAM   BANK0   BANK1
   936 ;;      Params:         0       2       0
   937 ;;      Locals:         0       0      80
   938 ;;      Temps:          0       0       0
   939 ;;      Totals:         0       2      80
   940 ;;Total ram usage:       82 bytes
   941 ;; Hardware stack levels used:    1
   942 ;; Hardware stack levels required when called:   16
   943 ;; This function calls:
   944 ;;		_print
   945 ;;		_sprintf
   946 ;; This function is called by:
   947 ;;		_main
   948 ;; This function uses a non-reentrant model
   949 ;;
   950                           
   951                           	psect	text2
   952  00106A                     __ptext2:
   953                           	callstack 0
   954  00106A                     _print_int:
   955                           	callstack 14
   956  00106A                     
   957                           ;LiquidCrystal.c: 148:     void print_int(int num);LiquidCrystal.c: 149:     {;LiquidCry
      +                          stal.c: 150:         char s_num[80];;LiquidCrystal.c: 151:         sprintf(s_num, "%d", 
      +                          num);
   958  00106A  0E00               	movlw	low print_int@s_num
   959  00106C  0100               	movlb	0	; () banked
   960  00106E  6F96               	movwf	sprintf@s& (0+255),b
   961  001070  0E01               	movlw	high print_int@s_num
   962  001072  6F97               	movwf	(sprintf@s+1)& (0+255),b
   963  001074  0E23               	movlw	low STR_1
   964  001076  6F98               	movwf	sprintf@fmt& (0+255),b
   965  001078  0E02               	movlw	high STR_1
   966  00107A  6F99               	movwf	(sprintf@fmt+1)& (0+255),b
   967  00107C  C0A6  F09A         	movff	print_int@num,?_sprintf+4
   968  001080  C0A7  F09B         	movff	print_int@num+1,?_sprintf+5
   969  001084  EC2B  F007         	call	_sprintf	;wreg free
   970                           
   971                           ;LiquidCrystal.c: 153:         print(s_num);
   972  001088  0E00               	movlw	low print_int@s_num
   973  00108A  6E1A               	movwf	print@chr^0,c
   974  00108C  0E01               	movlw	high print_int@s_num
   975  00108E  6E1B               	movwf	(print@chr+1)^0,c
   976  001090  ECCD  F006         	call	_print	;wreg free
   977  001094  0012               	return		;funcret
   978  001096                     __end_of_print_int:
   979                           	callstack 0
   980                           
   981 ;; *************** function _sprintf *****************
   982 ;; Defined at:
   983 ;;		line 9 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/nf_sprintf.c"
   984 ;; Parameters:    Size  Location     Type
   985 ;;  s               2   22[BANK0 ] PTR unsigned char 
   986 ;;		 -> print_int@s_num(80), 
   987 ;;  fmt             2   24[BANK0 ] PTR const unsigned char 
   988 ;;		 -> STR_1(3), 
   989 ;; Auto vars:     Size  Location     Type
   990 ;;  f               6   32[BANK0 ] struct _IO_FILE
   991 ;;  ap              2   30[BANK0 ] PTR void [1]
   992 ;;		 -> ?_sprintf(2), 
   993 ;;  ret             2    0        int 
   994 ;; Return value:  Size  Location     Type
   995 ;;                  2   22[BANK0 ] int 
   996 ;; Registers used:
   997 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   998 ;; Tracked objects:
   999 ;;		On entry : 0/0
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMRAM   BANK0   BANK1
  1003 ;;      Params:         0       6       0
  1004 ;;      Locals:         0      10       0
  1005 ;;      Temps:          0       0       0
  1006 ;;      Totals:         0      16       0
  1007 ;;Total ram usage:       16 bytes
  1008 ;; Hardware stack levels used:    1
  1009 ;; Hardware stack levels required when called:   15
  1010 ;; This function calls:
  1011 ;;		_vfprintf
  1012 ;; This function is called by:
  1013 ;;		_print_int
  1014 ;; This function uses a non-reentrant model
  1015 ;;
  1016                           
  1017                           	psect	text3
  1018  000E56                     __ptext3:
  1019                           	callstack 0
  1020  000E56                     _sprintf:
  1021                           	callstack 14
  1022  000E56  0E9A               	movlw	low (?_sprintf+4)
  1023  000E58  0100               	movlb	0	; () banked
  1024  000E5A  6F9E               	movwf	sprintf@ap& (0+255),b
  1025  000E5C  0E00               	movlw	high (?_sprintf+4)
  1026  000E5E  6F9F               	movwf	(sprintf@ap+1)& (0+255),b
  1027  000E60  C096  F0A0         	movff	sprintf@s,sprintf@f
  1028  000E64  C097  F0A1         	movff	sprintf@s+1,sprintf@f+1
  1029  000E68                     
  1030                           ; BSR set to: 0
  1031  000E68  0E00               	movlw	0
  1032  000E6A  6FA3               	movwf	(sprintf@f+3)& (0+255),b
  1033  000E6C  0E00               	movlw	0
  1034  000E6E  6FA2               	movwf	(sprintf@f+2)& (0+255),b
  1035  000E70                     
  1036                           ; BSR set to: 0
  1037  000E70  0E00               	movlw	0
  1038  000E72  6FA5               	movwf	(sprintf@f+5)& (0+255),b
  1039  000E74  0E00               	movlw	0
  1040  000E76  6FA4               	movwf	(sprintf@f+4)& (0+255),b
  1041  000E78                     
  1042                           ; BSR set to: 0
  1043  000E78  0EA0               	movlw	low sprintf@f
  1044  000E7A  6F8E               	movwf	vfprintf@fp& (0+255),b
  1045  000E7C  0E00               	movlw	high sprintf@f
  1046  000E7E  6F8F               	movwf	(vfprintf@fp+1)& (0+255),b
  1047  000E80  C098  F090         	movff	sprintf@fmt,vfprintf@fmt
  1048  000E84  C099  F091         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1049  000E88  0E9E               	movlw	low sprintf@ap
  1050  000E8A  6F92               	movwf	vfprintf@ap& (0+255),b
  1051  000E8C  0E00               	movlw	high sprintf@ap
  1052  000E8E  6F93               	movwf	(vfprintf@ap+1)& (0+255),b
  1053  000E90  EC9C  F006         	call	_vfprintf	;wreg free
  1054  000E94  0100               	movlb	0	; () banked
  1055  000E96  51A2               	movf	(sprintf@f+2)& (0+255),w,b
  1056  000E98  2596               	addwf	sprintf@s& (0+255),w,b
  1057  000E9A  6ED9               	movwf	fsr2l,c
  1058  000E9C  51A3               	movf	(sprintf@f+3)& (0+255),w,b
  1059  000E9E  2197               	addwfc	(sprintf@s+1)& (0+255),w,b
  1060  000EA0  6EDA               	movwf	fsr2h,c
  1061  000EA2  0E00               	movlw	0
  1062  000EA4  6EDF               	movwf	indf2,c
  1063  000EA6                     
  1064                           ; BSR set to: 0
  1065  000EA6  0012               	return		;funcret
  1066  000EA8                     __end_of_sprintf:
  1067                           	callstack 0
  1068                           
  1069 ;; *************** function _vfprintf *****************
  1070 ;; Defined at:
  1071 ;;		line 1368 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c"
  1072 ;; Parameters:    Size  Location     Type
  1073 ;;  fp              2   14[BANK0 ] PTR struct _IO_FILE
  1074 ;;		 -> sprintf@f(6), 
  1075 ;;  fmt             2   16[BANK0 ] PTR const unsigned char 
  1076 ;;		 -> STR_1(3), 
  1077 ;;  ap              2   18[BANK0 ] PTR PTR void 
  1078 ;;		 -> sprintf@ap(2), 
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;  cfmt            2   20[BANK0 ] PTR unsigned char 
  1081 ;;		 -> STR_1(3), 
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  2   14[BANK0 ] int 
  1084 ;; Registers used:
  1085 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMRAM   BANK0   BANK1
  1091 ;;      Params:         0       6       0
  1092 ;;      Locals:         0       2       0
  1093 ;;      Temps:          0       0       0
  1094 ;;      Totals:         0       8       0
  1095 ;;Total ram usage:        8 bytes
  1096 ;; Hardware stack levels used:    1
  1097 ;; Hardware stack levels required when called:   14
  1098 ;; This function calls:
  1099 ;;		_vfpfcnvrt
  1100 ;; This function is called by:
  1101 ;;		_sprintf
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           	psect	text4
  1106  000D38                     __ptext4:
  1107                           	callstack 0
  1108  000D38                     _vfprintf:
  1109                           	callstack 14
  1110  000D38                     
  1111                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.20/pic/sources/c99/
      +                          common/doprnt.c: 1369: {;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt
      +                          .c: 1371:     char *cfmt;;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprn
      +                          t.c: 1373:     cfmt = (char *)fmt;
  1112  000D38  C090  F094         	movff	vfprintf@fmt,vfprintf@cfmt
  1113  000D3C  C091  F095         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1114  000D40                     
  1115                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  1116  000D40  0E00               	movlw	0
  1117  000D42  0100               	movlb	0	; () banked
  1118  000D44  6FAD               	movwf	(_nout+1)& (0+255),b
  1119  000D46  0E00               	movlw	0
  1120  000D48  6FAC               	movwf	_nout& (0+255),b
  1121                           
  1122                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
  1123  000D4A  EFBA  F006         	goto	l2422
  1124  000D4E                     l2420:
  1125                           
  1126                           ; BSR set to: 0
  1127                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1376:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
  1128  000D4E  C08E  F080         	movff	vfprintf@fp,vfpfcnvrt@fp
  1129  000D52  C08F  F081         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1130  000D56  0E94               	movlw	low vfprintf@cfmt
  1131  000D58  6F82               	movwf	vfpfcnvrt@fmt& (0+255),b
  1132  000D5A  0E00               	movlw	high vfprintf@cfmt
  1133  000D5C  6F83               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1134  000D5E  C092  F084         	movff	vfprintf@ap,vfpfcnvrt@ap
  1135  000D62  C093  F085         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1136  000D66  EC83  F002         	call	_vfpfcnvrt	;wreg free
  1137  000D6A  0100               	movlb	0	; () banked
  1138  000D6C  5180               	movf	?_vfpfcnvrt& (0+255),w,b
  1139  000D6E  27AC               	addwf	_nout& (0+255),f,b
  1140  000D70  5181               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1141  000D72  23AD               	addwfc	(_nout+1)& (0+255),f,b
  1142  000D74                     l2422:
  1143                           
  1144                           ; BSR set to: 0
  1145                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
  1146  000D74  C094  FFF6         	movff	vfprintf@cfmt,tblptrl
  1147  000D78  C095  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1148  000D7C                     	if	0	;tblptru may be non-zero
  1149  000D7C                     	endif
  1150  000D7C                     	if	0	;tblptru may be non-zero
  1151  000D7C                     	endif
  1152  000D7C  0008               	tblrd		*
  1153  000D7E  50F5               	movf	tablat,w,c
  1154  000D80  0900               	iorlw	0
  1155  000D82  A4D8               	btfss	status,2,c
  1156  000D84  EFC6  F006         	goto	u1801
  1157  000D88  EFC8  F006         	goto	u1800
  1158  000D8C                     u1801:
  1159  000D8C  EFA7  F006         	goto	l2420
  1160  000D90                     u1800:
  1161  000D90                     
  1162                           ; BSR set to: 0
  1163                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1378:     return nou
      +                          t;
  1164  000D90  C0AC  F08E         	movff	_nout,?_vfprintf
  1165  000D94  C0AD  F08F         	movff	_nout+1,?_vfprintf+1
  1166  000D98                     
  1167                           ; BSR set to: 0
  1168  000D98  0012               	return		;funcret
  1169  000D9A                     __end_of_vfprintf:
  1170                           	callstack 0
  1171                           
  1172 ;; *************** function _vfpfcnvrt *****************
  1173 ;; Defined at:
  1174 ;;		line 670 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  1177 ;;		 -> sprintf@f(6), 
  1178 ;;  fmt             2    2[BANK0 ] PTR PTR unsigned char 
  1179 ;;		 -> vfprintf@cfmt(2), 
  1180 ;;  ap              2    4[BANK0 ] PTR PTR void 
  1181 ;;		 -> sprintf@ap(2), 
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;  ll              8    6[BANK0 ] long long 
  1184 ;;  llu             8    0        unsigned long long 
  1185 ;;  f               4    0        unsigned long long 
  1186 ;;  vp              3    0        PTR void 
  1187 ;;  ct              3    0        unsigned char [3]
  1188 ;;  cp              3    0        PTR unsigned char 
  1189 ;;  i               2    0        int 
  1190 ;;  done            2    0        int 
  1191 ;;  c               1    0        unsigned char 
  1192 ;; Return value:  Size  Location     Type
  1193 ;;                  2    0[BANK0 ] int 
  1194 ;; Registers used:
  1195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1196 ;; Tracked objects:
  1197 ;;		On entry : 0/0
  1198 ;;		On exit  : 0/0
  1199 ;;		Unchanged: 0/0
  1200 ;; Data sizes:     COMRAM   BANK0   BANK1
  1201 ;;      Params:         0       6       0
  1202 ;;      Locals:         0       8       0
  1203 ;;      Temps:          2       0       0
  1204 ;;      Totals:         2      14       0
  1205 ;;Total ram usage:       16 bytes
  1206 ;; Hardware stack levels used:    1
  1207 ;; Hardware stack levels required when called:   13
  1208 ;; This function calls:
  1209 ;;		_dtoa
  1210 ;;		_fputc
  1211 ;; This function is called by:
  1212 ;;		_vfprintf
  1213 ;; This function uses a non-reentrant model
  1214 ;;
  1215                           
  1216                           	psect	text5
  1217  000506                     __ptext5:
  1218                           	callstack 0
  1219  000506                     _vfpfcnvrt:
  1220                           	callstack 14
  1221  000506                     
  1222                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 670: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.20/pic/sources/c
      +                          99/common/doprnt.c: 671: {;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/dopr
      +                          nt.c: 672:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.20/pic/sources/c99/com
      +                          mon/doprnt.c: 673:     int done, i;;/Applications/microchip/xc8/v2.20/pic/sources/c99/co
      +                          mmon/doprnt.c: 674:     long long ll;;/Applications/microchip/xc8/v2.20/pic/sources/c99/
      +                          common/doprnt.c: 675:     unsigned long long llu;
  1223  000506  C082  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1224  00050A  C083  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1225  00050E  CFDE FFF6          	movff	postinc2,tblptrl
  1226  000512  CFDD FFF7          	movff	postdec2,tblptrh
  1227  000516                     	if	0	;tblptru may be non-zero
  1228  000516                     	endif
  1229  000516                     	if	0	;tblptru may be non-zero
  1230  000516                     	endif
  1231  000516  0008               	tblrd		*
  1232  000518  50F5               	movf	tablat,w,c
  1233  00051A  0A25               	xorlw	37
  1234  00051C  A4D8               	btfss	status,2,c
  1235  00051E  EF93  F002         	goto	u1741
  1236  000522  EF95  F002         	goto	u1740
  1237  000526                     u1741:
  1238  000526  EF42  F003         	goto	l2394
  1239  00052A                     u1740:
  1240  00052A                     
  1241                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  1242  00052A  C082  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1243  00052E  C083  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1244  000532  2ADE               	incf	postinc2,f,c
  1245  000534  0E00               	movlw	0
  1246  000536  22DD               	addwfc	postdec2,f,c
  1247  000538                     
  1248                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 683:         flags =
      +                           width = 0;
  1249  000538  0E00               	movlw	0
  1250  00053A  0100               	movlb	0	; () banked
  1251  00053C  6FAF               	movwf	(_width+1)& (0+255),b
  1252  00053E  0E00               	movlw	0
  1253  000540  6FAE               	movwf	_width& (0+255),b
  1254  000542  C0AE  F058         	movff	_width,_flags
  1255  000546  C0AF  F059         	movff	_width+1,_flags+1
  1256  00054A                     
  1257                           ; BSR set to: 0
  1258                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 684:         prec = 
      +                          -1;
  1259  00054A  6856               	setf	_prec^0,c
  1260  00054C  6857               	setf	(_prec+1)^0,c
  1261  00054E                     
  1262                           ; BSR set to: 0
  1263                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 825:         if ((*f
      +                          mt[0] == 'd') || (*fmt[0] == 'i')) {
  1264  00054E  C082  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1265  000552  C083  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1266  000556  CFDE FFF6          	movff	postinc2,tblptrl
  1267  00055A  CFDD FFF7          	movff	postdec2,tblptrh
  1268  00055E                     	if	0	;tblptru may be non-zero
  1269  00055E                     	endif
  1270  00055E                     	if	0	;tblptru may be non-zero
  1271  00055E                     	endif
  1272  00055E  0008               	tblrd		*
  1273  000560  50F5               	movf	tablat,w,c
  1274  000562  0A64               	xorlw	100
  1275  000564  B4D8               	btfsc	status,2,c
  1276  000566  EFB7  F002         	goto	u1751
  1277  00056A  EFB9  F002         	goto	u1750
  1278  00056E                     u1751:
  1279  00056E  EFCB  F002         	goto	l2372
  1280  000572                     u1750:
  1281  000572                     
  1282                           ; BSR set to: 0
  1283  000572  C082  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1284  000576  C083  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1285  00057A  CFDE FFF6          	movff	postinc2,tblptrl
  1286  00057E  CFDD FFF7          	movff	postdec2,tblptrh
  1287  000582                     	if	0	;tblptru may be non-zero
  1288  000582                     	endif
  1289  000582                     	if	0	;tblptru may be non-zero
  1290  000582                     	endif
  1291  000582  0008               	tblrd		*
  1292  000584  50F5               	movf	tablat,w,c
  1293  000586  0A69               	xorlw	105
  1294  000588  A4D8               	btfss	status,2,c
  1295  00058A  EFC9  F002         	goto	u1761
  1296  00058E  EFCB  F002         	goto	u1760
  1297  000592                     u1761:
  1298  000592  EF0B  F003         	goto	l2378
  1299  000596                     u1760:
  1300  000596                     l2372:
  1301                           
  1302                           ; BSR set to: 0
  1303                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 827:             ++*
      +                          fmt;
  1304  000596  C082  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1305  00059A  C083  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1306  00059E  2ADE               	incf	postinc2,f,c
  1307  0005A0  0E00               	movlw	0
  1308  0005A2  22DD               	addwfc	postdec2,f,c
  1309                           
  1310                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 828:             ll 
      +                          = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1311  0005A4  C084  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1312  0005A8  C085  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1313  0005AC  CFDF F054          	movff	indf2,??_vfpfcnvrt
  1314  0005B0  0E02               	movlw	2
  1315  0005B2  26DE               	addwf	postinc2,f,c
  1316  0005B4  CFDF F055          	movff	indf2,??_vfpfcnvrt+1
  1317  0005B8  0E00               	movlw	0
  1318  0005BA  22DD               	addwfc	postdec2,f,c
  1319  0005BC  C054  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1320  0005C0  C055  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1321  0005C4  CFDE F086          	movff	postinc2,vfpfcnvrt@ll
  1322  0005C8  CFDD F087          	movff	postdec2,vfpfcnvrt@ll+1
  1323  0005CC  0E00               	movlw	0
  1324  0005CE  BF87               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  1325  0005D0  0EFF               	movlw	-1
  1326  0005D2  6F88               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  1327  0005D4  6F89               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  1328  0005D6  6F8A               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  1329  0005D8  6F8B               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  1330  0005DA  6F8C               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  1331  0005DC  6F8D               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  1332  0005DE                     
  1333                           ; BSR set to: 0
  1334                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 830:             ret
      +                          urn dtoa(fp, ll);
  1335  0005DE  C080  F030         	movff	vfpfcnvrt@fp,dtoa@fp
  1336  0005E2  C081  F031         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1337  0005E6  C086  F032         	movff	vfpfcnvrt@ll,dtoa@d
  1338  0005EA  C087  F033         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1339  0005EE  C088  F034         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1340  0005F2  C089  F035         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1341  0005F6  C08A  F036         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1342  0005FA  C08B  F037         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1343  0005FE  C08C  F038         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1344  000602  C08D  F039         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1345  000606  EC14  F001         	call	_dtoa	;wreg free
  1346  00060A  C030  F080         	movff	?_dtoa,?_vfpfcnvrt
  1347  00060E  C031  F081         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1348  000612  EF5D  F003         	goto	l981
  1349  000616                     l2378:
  1350                           
  1351                           ; BSR set to: 0
  1352                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1350:         if ((*
      +                          fmt)[0] == '%') {
  1353  000616  C082  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1354  00061A  C083  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1355  00061E  CFDE FFF6          	movff	postinc2,tblptrl
  1356  000622  CFDD FFF7          	movff	postdec2,tblptrh
  1357  000626                     	if	0	;tblptru may be non-zero
  1358  000626                     	endif
  1359  000626                     	if	0	;tblptru may be non-zero
  1360  000626                     	endif
  1361  000626  0008               	tblrd		*
  1362  000628  50F5               	movf	tablat,w,c
  1363  00062A  0A25               	xorlw	37
  1364  00062C  A4D8               	btfss	status,2,c
  1365  00062E  EF1B  F003         	goto	u1771
  1366  000632  EF1D  F003         	goto	u1770
  1367  000636                     u1771:
  1368  000636  EF35  F003         	goto	l2388
  1369  00063A                     u1770:
  1370  00063A                     
  1371                           ; BSR set to: 0
  1372                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1351:             ++
      +                          *fmt;
  1373  00063A  C082  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1374  00063E  C083  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1375  000642  2ADE               	incf	postinc2,f,c
  1376  000644  0E00               	movlw	0
  1377  000646  22DD               	addwfc	postdec2,f,c
  1378  000648                     
  1379                           ; BSR set to: 0
  1380                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1352:             fp
      +                          utc((int)'%', fp);
  1381  000648  0E00               	movlw	0
  1382  00064A  6E16               	movwf	(fputc@c+1)^0,c
  1383  00064C  0E25               	movlw	37
  1384  00064E  6E15               	movwf	fputc@c^0,c
  1385  000650  C080  F017         	movff	vfpfcnvrt@fp,fputc@fp
  1386  000654  C081  F018         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1387  000658  EC40  F005         	call	_fputc	;wreg free
  1388  00065C                     l2384:
  1389                           
  1390                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1353:             re
      +                          turn 1;
  1391  00065C  0E00               	movlw	0
  1392  00065E  0100               	movlb	0	; () banked
  1393  000660  6F81               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1394  000662  0E01               	movlw	1
  1395  000664  6F80               	movwf	?_vfpfcnvrt& (0+255),b
  1396  000666  EF5D  F003         	goto	l981
  1397  00066A                     l2388:
  1398                           
  1399                           ; BSR set to: 0
  1400                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt
      +                          ;
  1401  00066A  C082  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1402  00066E  C083  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1403  000672  2ADE               	incf	postinc2,f,c
  1404  000674  0E00               	movlw	0
  1405  000676  22DD               	addwfc	postdec2,f,c
  1406  000678                     
  1407                           ; BSR set to: 0
  1408                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1358:         return
      +                           0;
  1409  000678  0E00               	movlw	0
  1410  00067A  6F81               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1411  00067C  0E00               	movlw	0
  1412  00067E  6F80               	movwf	?_vfpfcnvrt& (0+255),b
  1413  000680  EF5D  F003         	goto	l981
  1414  000684                     l2394:
  1415                           
  1416                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1362:     fputc((int
      +                          )(*fmt)[0], fp);
  1417  000684  C082  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1418  000688  C083  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1419  00068C  CFDE FFF6          	movff	postinc2,tblptrl
  1420  000690  CFDD FFF7          	movff	postdec2,tblptrh
  1421  000694                     	if	0	;tblptru may be non-zero
  1422  000694                     	endif
  1423  000694                     	if	0	;tblptru may be non-zero
  1424  000694                     	endif
  1425  000694  0008               	tblrd		*
  1426  000696  50F5               	movf	tablat,w,c
  1427  000698  6E15               	movwf	fputc@c^0,c
  1428  00069A  6A16               	clrf	(fputc@c+1)^0,c
  1429  00069C  C080  F017         	movff	vfpfcnvrt@fp,fputc@fp
  1430  0006A0  C081  F018         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1431  0006A4  EC40  F005         	call	_fputc	;wreg free
  1432  0006A8                     
  1433                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  1434  0006A8  C082  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1435  0006AC  C083  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1436  0006B0  2ADE               	incf	postinc2,f,c
  1437  0006B2  0E00               	movlw	0
  1438  0006B4  22DD               	addwfc	postdec2,f,c
  1439  0006B6  EF2E  F003         	goto	l2384
  1440  0006BA                     l981:
  1441  0006BA  0012               	return		;funcret
  1442  0006BC                     __end_of_vfpfcnvrt:
  1443                           	callstack 0
  1444                           
  1445 ;; *************** function _dtoa *****************
  1446 ;; Defined at:
  1447 ;;		line 274 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;  fp              2   47[COMRAM] PTR struct _IO_FILE
  1450 ;;		 -> sprintf@f(6), 
  1451 ;;  d               8   49[COMRAM] long long 
  1452 ;; Auto vars:     Size  Location     Type
  1453 ;;  n               8   73[COMRAM] long long 
  1454 ;;  i               2   81[COMRAM] int 
  1455 ;;  s               2   71[COMRAM] int 
  1456 ;;  w               2   69[COMRAM] int 
  1457 ;;  p               2   67[COMRAM] int 
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  2   47[COMRAM] int 
  1460 ;; Registers used:
  1461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMRAM   BANK0   BANK1
  1467 ;;      Params:        10       0       0
  1468 ;;      Locals:        18       0       0
  1469 ;;      Temps:          8       0       0
  1470 ;;      Totals:        36       0       0
  1471 ;;Total ram usage:       36 bytes
  1472 ;; Hardware stack levels used:    1
  1473 ;; Hardware stack levels required when called:   12
  1474 ;; This function calls:
  1475 ;;		___aodiv
  1476 ;;		___aomod
  1477 ;;		_abs
  1478 ;;		_pad
  1479 ;; This function is called by:
  1480 ;;		_vfpfcnvrt
  1481 ;; This function uses a non-reentrant model
  1482 ;;
  1483                           
  1484                           	psect	text6
  1485  000228                     __ptext6:
  1486                           	callstack 0
  1487  000228                     _dtoa:
  1488                           	callstack 14
  1489  000228                     
  1490                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 274: static int dtoa
      +                          (FILE *fp, long long d);/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.
      +                          c: 275: {;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 276:     in
      +                          t i, p, s, w;;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 277:   
      +                            long long n;;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 280:  
      +                             n = d;
  1491  000228  C032  F04A         	movff	dtoa@d,dtoa@n
  1492  00022C  C033  F04B         	movff	dtoa@d+1,dtoa@n+1
  1493  000230  C034  F04C         	movff	dtoa@d+2,dtoa@n+2
  1494  000234  C035  F04D         	movff	dtoa@d+3,dtoa@n+3
  1495  000238  C036  F04E         	movff	dtoa@d+4,dtoa@n+4
  1496  00023C  C037  F04F         	movff	dtoa@d+5,dtoa@n+5
  1497  000240  C038  F050         	movff	dtoa@d+6,dtoa@n+6
  1498  000244  C039  F051         	movff	dtoa@d+7,dtoa@n+7
  1499  000248                     
  1500                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ?
      +                           1 : 0;
  1501  000248  BE51               	btfsc	(dtoa@n+7)^0,7,c
  1502  00024A  EF29  F001         	goto	u1591
  1503  00024E  EF2C  F001         	goto	u1590
  1504  000252                     u1591:
  1505  000252  0E01               	movlw	1
  1506  000254  EF2D  F001         	goto	u1600
  1507  000258                     u1590:
  1508  000258  0E00               	movlw	0
  1509  00025A                     u1600:
  1510  00025A  6E48               	movwf	dtoa@s^0,c
  1511  00025C  6A49               	clrf	(dtoa@s+1)^0,c
  1512                           
  1513                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  1514  00025E  5048               	movf	dtoa@s^0,w,c
  1515  000260  1049               	iorwf	(dtoa@s+1)^0,w,c
  1516  000262  B4D8               	btfsc	status,2,c
  1517  000264  EF36  F001         	goto	u1611
  1518  000268  EF38  F001         	goto	u1610
  1519  00026C                     u1611:
  1520  00026C  EF48  F001         	goto	l2298
  1521  000270                     u1610:
  1522  000270                     
  1523                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  1524  000270  1E51               	comf	(dtoa@n+7)^0,f,c
  1525  000272  1E50               	comf	(dtoa@n+6)^0,f,c
  1526  000274  1E4F               	comf	(dtoa@n+5)^0,f,c
  1527  000276  1E4E               	comf	(dtoa@n+4)^0,f,c
  1528  000278  1E4D               	comf	(dtoa@n+3)^0,f,c
  1529  00027A  1E4C               	comf	(dtoa@n+2)^0,f,c
  1530  00027C  1E4B               	comf	(dtoa@n+1)^0,f,c
  1531  00027E  6C4A               	negf	dtoa@n^0,c
  1532  000280  0E00               	movlw	0
  1533  000282  224B               	addwfc	(dtoa@n+1)^0,f,c
  1534  000284  224C               	addwfc	(dtoa@n+2)^0,f,c
  1535  000286  224D               	addwfc	(dtoa@n+3)^0,f,c
  1536  000288  224E               	addwfc	(dtoa@n+4)^0,f,c
  1537  00028A  224F               	addwfc	(dtoa@n+5)^0,f,c
  1538  00028C  2250               	addwfc	(dtoa@n+6)^0,f,c
  1539  00028E  2251               	addwfc	(dtoa@n+7)^0,f,c
  1540  000290                     l2298:
  1541                           
  1542                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 287:     if (!(prec 
      +                          < 0)) {
  1543  000290  BE57               	btfsc	(_prec+1)^0,7,c
  1544  000292  EF4D  F001         	goto	u1621
  1545  000296  EF4F  F001         	goto	u1620
  1546  00029A                     u1621:
  1547  00029A  EF50  F001         	goto	l2302
  1548  00029E                     u1620:
  1549  00029E                     
  1550                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 288:         flags &
      +                          = ~(1 << 1);
  1551  00029E  9258               	bcf	_flags^0,1,c
  1552  0002A0                     l2302:
  1553                           
  1554                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 290:     p = (0 < pr
      +                          ec) ? prec : 1;
  1555  0002A0  BE57               	btfsc	(_prec+1)^0,7,c
  1556  0002A2  EF5D  F001         	goto	u1630
  1557  0002A6  5057               	movf	(_prec+1)^0,w,c
  1558  0002A8  E106               	bnz	u1631
  1559  0002AA  0456               	decf	_prec^0,w,c
  1560  0002AC  B0D8               	btfsc	status,0,c
  1561  0002AE  EF5B  F001         	goto	u1631
  1562  0002B2  EF5D  F001         	goto	u1630
  1563  0002B6                     u1631:
  1564  0002B6  EF63  F001         	goto	l954
  1565  0002BA                     u1630:
  1566  0002BA  0E00               	movlw	0
  1567  0002BC  6E45               	movwf	(dtoa@p+1)^0,c
  1568  0002BE  0E01               	movlw	1
  1569  0002C0  6E44               	movwf	dtoa@p^0,c
  1570  0002C2  EF67  F001         	goto	l956
  1571  0002C6                     l954:
  1572  0002C6  C056  F044         	movff	_prec,dtoa@p
  1573  0002CA  C057  F045         	movff	_prec+1,dtoa@p+1
  1574  0002CE                     l956:
  1575                           
  1576                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 291:     w = width;
  1577  0002CE  C0AE  F046         	movff	_width,dtoa@w
  1578  0002D2  C0AF  F047         	movff	_width+1,dtoa@w+1
  1579  0002D6                     
  1580                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 292:     if (s || (f
      +                          lags & (1 << 2))) {
  1581  0002D6  5048               	movf	dtoa@s^0,w,c
  1582  0002D8  1049               	iorwf	(dtoa@s+1)^0,w,c
  1583  0002DA  A4D8               	btfss	status,2,c
  1584  0002DC  EF72  F001         	goto	u1641
  1585  0002E0  EF74  F001         	goto	u1640
  1586  0002E4                     u1641:
  1587  0002E4  EF7B  F001         	goto	l2310
  1588  0002E8                     u1640:
  1589  0002E8  A458               	btfss	_flags^0,2,c
  1590  0002EA  EF79  F001         	goto	u1651
  1591  0002EE  EF7B  F001         	goto	u1650
  1592  0002F2                     u1651:
  1593  0002F2  EF7E  F001         	goto	l2312
  1594  0002F6                     u1650:
  1595  0002F6                     l2310:
  1596                           
  1597                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 293:         --w;
  1598  0002F6  0646               	decf	dtoa@w^0,f,c
  1599  0002F8  A0D8               	btfss	status,0,c
  1600  0002FA  0647               	decf	(dtoa@w+1)^0,f,c
  1601  0002FC                     l2312:
  1602                           
  1603                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(
      +                          dbuf) - 1;
  1604  0002FC  0E00               	movlw	0
  1605  0002FE  6E53               	movwf	(dtoa@i+1)^0,c
  1606  000300  0E1F               	movlw	31
  1607  000302  6E52               	movwf	dtoa@i^0,c
  1608  000304                     
  1609                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '
      +                          \0';
  1610  000304  0E00               	movlw	0
  1611  000306  0101               	movlb	1	; () banked
  1612  000308  6F6F               	movwf	(_dbuf+31)& (0+255),b
  1613                           
  1614                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1615  00030A  EF03  F002         	goto	l2326
  1616  00030E                     l2316:
  1617                           
  1618                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 300:         --i;
  1619  00030E  0652               	decf	dtoa@i^0,f,c
  1620  000310  A0D8               	btfss	status,0,c
  1621  000312  0653               	decf	(dtoa@i+1)^0,f,c
  1622  000314                     
  1623                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 301:         dbuf[i]
      +                           = '0' + abs(n % 10);
  1624  000314  0E50               	movlw	low _dbuf
  1625  000316  2452               	addwf	dtoa@i^0,w,c
  1626  000318  6ED9               	movwf	fsr2l,c
  1627  00031A  0E01               	movlw	high _dbuf
  1628  00031C  2053               	addwfc	(dtoa@i+1)^0,w,c
  1629  00031E  6EDA               	movwf	fsr2h,c
  1630  000320  C04A  F015         	movff	dtoa@n,___aomod@dividend
  1631  000324  C04B  F016         	movff	dtoa@n+1,___aomod@dividend+1
  1632  000328  C04C  F017         	movff	dtoa@n+2,___aomod@dividend+2
  1633  00032C  C04D  F018         	movff	dtoa@n+3,___aomod@dividend+3
  1634  000330  C04E  F019         	movff	dtoa@n+4,___aomod@dividend+4
  1635  000334  C04F  F01A         	movff	dtoa@n+5,___aomod@dividend+5
  1636  000338  C050  F01B         	movff	dtoa@n+6,___aomod@dividend+6
  1637  00033C  C051  F01C         	movff	dtoa@n+7,___aomod@dividend+7
  1638  000340  0E0A               	movlw	10
  1639  000342  6E1D               	movwf	___aomod@divisor^0,c
  1640  000344  0E00               	movlw	0
  1641  000346  6E1E               	movwf	(___aomod@divisor+1)^0,c
  1642  000348  0E00               	movlw	0
  1643  00034A  6E1F               	movwf	(___aomod@divisor+2)^0,c
  1644  00034C  0E00               	movlw	0
  1645  00034E  6E20               	movwf	(___aomod@divisor+3)^0,c
  1646  000350  0E00               	movlw	0
  1647  000352  6E21               	movwf	(___aomod@divisor+4)^0,c
  1648  000354  0E00               	movlw	0
  1649  000356  6E22               	movwf	(___aomod@divisor+5)^0,c
  1650  000358  0E00               	movlw	0
  1651  00035A  6E23               	movwf	(___aomod@divisor+6)^0,c
  1652  00035C  0E00               	movlw	0
  1653  00035E  6E24               	movwf	(___aomod@divisor+7)^0,c
  1654  000360  EC22  F004         	call	___aomod	;wreg free
  1655  000364  C015  F03A         	movff	?___aomod,??_dtoa
  1656  000368  C016  F03B         	movff	?___aomod+1,??_dtoa+1
  1657  00036C  C017  F03C         	movff	?___aomod+2,??_dtoa+2
  1658  000370  C018  F03D         	movff	?___aomod+3,??_dtoa+3
  1659  000374  C019  F03E         	movff	?___aomod+4,??_dtoa+4
  1660  000378  C01A  F03F         	movff	?___aomod+5,??_dtoa+5
  1661  00037C  C01B  F040         	movff	?___aomod+6,??_dtoa+6
  1662  000380  C01C  F041         	movff	?___aomod+7,??_dtoa+7
  1663  000384  C03A  F027         	movff	??_dtoa,abs@a
  1664  000388  C03C  F028         	movff	??_dtoa+2,abs@a+1
  1665  00038C  ECE1  F007         	call	_abs	;wreg free
  1666  000390  5027               	movf	?_abs^0,w,c
  1667  000392  0F30               	addlw	48
  1668  000394  6EDF               	movwf	indf2,c
  1669  000396                     
  1670                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 302:         --p;
  1671  000396  0644               	decf	dtoa@p^0,f,c
  1672  000398  A0D8               	btfss	status,0,c
  1673  00039A  0645               	decf	(dtoa@p+1)^0,f,c
  1674  00039C                     
  1675                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 303:         --w;
  1676  00039C  0646               	decf	dtoa@w^0,f,c
  1677  00039E  A0D8               	btfss	status,0,c
  1678  0003A0  0647               	decf	(dtoa@w+1)^0,f,c
  1679  0003A2                     
  1680                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 304:         n = n /
      +                           10;
  1681  0003A2  C04A  F015         	movff	dtoa@n,___aodiv@dividend
  1682  0003A6  C04B  F016         	movff	dtoa@n+1,___aodiv@dividend+1
  1683  0003AA  C04C  F017         	movff	dtoa@n+2,___aodiv@dividend+2
  1684  0003AE  C04D  F018         	movff	dtoa@n+3,___aodiv@dividend+3
  1685  0003B2  C04E  F019         	movff	dtoa@n+4,___aodiv@dividend+4
  1686  0003B6  C04F  F01A         	movff	dtoa@n+5,___aodiv@dividend+5
  1687  0003BA  C050  F01B         	movff	dtoa@n+6,___aodiv@dividend+6
  1688  0003BE  C051  F01C         	movff	dtoa@n+7,___aodiv@dividend+7
  1689  0003C2  0E0A               	movlw	10
  1690  0003C4  6E1D               	movwf	___aodiv@divisor^0,c
  1691  0003C6  0E00               	movlw	0
  1692  0003C8  6E1E               	movwf	(___aodiv@divisor+1)^0,c
  1693  0003CA  0E00               	movlw	0
  1694  0003CC  6E1F               	movwf	(___aodiv@divisor+2)^0,c
  1695  0003CE  0E00               	movlw	0
  1696  0003D0  6E20               	movwf	(___aodiv@divisor+3)^0,c
  1697  0003D2  0E00               	movlw	0
  1698  0003D4  6E21               	movwf	(___aodiv@divisor+4)^0,c
  1699  0003D6  0E00               	movlw	0
  1700  0003D8  6E22               	movwf	(___aodiv@divisor+5)^0,c
  1701  0003DA  0E00               	movlw	0
  1702  0003DC  6E23               	movwf	(___aodiv@divisor+6)^0,c
  1703  0003DE  0E00               	movlw	0
  1704  0003E0  6E24               	movwf	(___aodiv@divisor+7)^0,c
  1705  0003E2  EC5E  F003         	call	___aodiv	;wreg free
  1706  0003E6  C015  F04A         	movff	?___aodiv,dtoa@n
  1707  0003EA  C016  F04B         	movff	?___aodiv+1,dtoa@n+1
  1708  0003EE  C017  F04C         	movff	?___aodiv+2,dtoa@n+2
  1709  0003F2  C018  F04D         	movff	?___aodiv+3,dtoa@n+3
  1710  0003F6  C019  F04E         	movff	?___aodiv+4,dtoa@n+4
  1711  0003FA  C01A  F04F         	movff	?___aodiv+5,dtoa@n+5
  1712  0003FE  C01B  F050         	movff	?___aodiv+6,dtoa@n+6
  1713  000402  C01C  F051         	movff	?___aodiv+7,dtoa@n+7
  1714  000406                     l2326:
  1715                           
  1716                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1717  000406  BE53               	btfsc	(dtoa@i+1)^0,7,c
  1718  000408  EF0E  F002         	goto	u1661
  1719  00040C  5053               	movf	(dtoa@i+1)^0,w,c
  1720  00040E  E108               	bnz	u1660
  1721  000410  0452               	decf	dtoa@i^0,w,c
  1722  000412  A0D8               	btfss	status,0,c
  1723  000414  EF0E  F002         	goto	u1661
  1724  000418  EF10  F002         	goto	u1660
  1725  00041C                     u1661:
  1726  00041C  EF40  F002         	goto	l2336
  1727  000420                     u1660:
  1728  000420  504A               	movf	dtoa@n^0,w,c
  1729  000422  104B               	iorwf	(dtoa@n+1)^0,w,c
  1730  000424  104C               	iorwf	(dtoa@n+2)^0,w,c
  1731  000426  104D               	iorwf	(dtoa@n+3)^0,w,c
  1732  000428  104E               	iorwf	(dtoa@n+4)^0,w,c
  1733  00042A  104F               	iorwf	(dtoa@n+5)^0,w,c
  1734  00042C  1050               	iorwf	(dtoa@n+6)^0,w,c
  1735  00042E  1051               	iorwf	(dtoa@n+7)^0,w,c
  1736  000430  A4D8               	btfss	status,2,c
  1737  000432  EF1D  F002         	goto	u1671
  1738  000436  EF1F  F002         	goto	u1670
  1739  00043A                     u1671:
  1740  00043A  EF87  F001         	goto	l2316
  1741  00043E                     u1670:
  1742  00043E  BE45               	btfsc	(dtoa@p+1)^0,7,c
  1743  000440  EF2C  F002         	goto	u1680
  1744  000444  5045               	movf	(dtoa@p+1)^0,w,c
  1745  000446  E106               	bnz	u1681
  1746  000448  0444               	decf	dtoa@p^0,w,c
  1747  00044A  B0D8               	btfsc	status,0,c
  1748  00044C  EF2A  F002         	goto	u1681
  1749  000450  EF2C  F002         	goto	u1680
  1750  000454                     u1681:
  1751  000454  EF87  F001         	goto	l2316
  1752  000458                     u1680:
  1753  000458  BE47               	btfsc	(dtoa@w+1)^0,7,c
  1754  00045A  EF37  F002         	goto	u1691
  1755  00045E  5047               	movf	(dtoa@w+1)^0,w,c
  1756  000460  E108               	bnz	u1690
  1757  000462  0446               	decf	dtoa@w^0,w,c
  1758  000464  A0D8               	btfss	status,0,c
  1759  000466  EF37  F002         	goto	u1691
  1760  00046A  EF39  F002         	goto	u1690
  1761  00046E                     u1691:
  1762  00046E  EF40  F002         	goto	l2336
  1763  000472                     u1690:
  1764  000472  B258               	btfsc	_flags^0,1,c
  1765  000474  EF3E  F002         	goto	u1701
  1766  000478  EF40  F002         	goto	u1700
  1767  00047C                     u1701:
  1768  00047C  EF87  F001         	goto	l2316
  1769  000480                     u1700:
  1770  000480                     l2336:
  1771                           
  1772                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 308:     if (s || (f
      +                          lags & (1 << 2))) {
  1773  000480  5048               	movf	dtoa@s^0,w,c
  1774  000482  1049               	iorwf	(dtoa@s+1)^0,w,c
  1775  000484  A4D8               	btfss	status,2,c
  1776  000486  EF47  F002         	goto	u1711
  1777  00048A  EF49  F002         	goto	u1710
  1778  00048E                     u1711:
  1779  00048E  EF50  F002         	goto	l2340
  1780  000492                     u1710:
  1781  000492  A458               	btfss	_flags^0,2,c
  1782  000494  EF4E  F002         	goto	u1721
  1783  000498  EF50  F002         	goto	u1720
  1784  00049C                     u1721:
  1785  00049C  EF6E  F002         	goto	l2350
  1786  0004A0                     u1720:
  1787  0004A0                     l2340:
  1788                           
  1789                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 309:         --i;
  1790  0004A0  0652               	decf	dtoa@i^0,f,c
  1791  0004A2  A0D8               	btfss	status,0,c
  1792  0004A4  0653               	decf	(dtoa@i+1)^0,f,c
  1793  0004A6                     
  1794                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 310:         dbuf[i]
      +                           = s ? '-' : '+';
  1795  0004A6  5048               	movf	dtoa@s^0,w,c
  1796  0004A8  1049               	iorwf	(dtoa@s+1)^0,w,c
  1797  0004AA  A4D8               	btfss	status,2,c
  1798  0004AC  EF5A  F002         	goto	u1731
  1799  0004B0  EF5C  F002         	goto	u1730
  1800  0004B4                     u1731:
  1801  0004B4  EF62  F002         	goto	l2346
  1802  0004B8                     u1730:
  1803  0004B8  0E00               	movlw	0
  1804  0004BA  6E43               	movwf	(_dtoa$1403+1)^0,c
  1805  0004BC  0E2B               	movlw	43
  1806  0004BE  6E42               	movwf	_dtoa$1403^0,c
  1807  0004C0  EF66  F002         	goto	l2348
  1808  0004C4                     l2346:
  1809  0004C4  0E00               	movlw	0
  1810  0004C6  6E43               	movwf	(_dtoa$1403+1)^0,c
  1811  0004C8  0E2D               	movlw	45
  1812  0004CA  6E42               	movwf	_dtoa$1403^0,c
  1813  0004CC                     l2348:
  1814  0004CC  0E50               	movlw	low _dbuf
  1815  0004CE  2452               	addwf	dtoa@i^0,w,c
  1816  0004D0  6ED9               	movwf	fsr2l,c
  1817  0004D2  0E01               	movlw	high _dbuf
  1818  0004D4  2053               	addwfc	(dtoa@i+1)^0,w,c
  1819  0004D6  6EDA               	movwf	fsr2h,c
  1820  0004D8  C042  FFDF         	movff	_dtoa$1403,indf2
  1821  0004DC                     l2350:
  1822                           
  1823                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 314:     return pad(
      +                          fp, &dbuf[i], w);
  1824  0004DC  C030  F025         	movff	dtoa@fp,pad@fp
  1825  0004E0  C031  F026         	movff	dtoa@fp+1,pad@fp+1
  1826  0004E4  0E50               	movlw	low _dbuf
  1827  0004E6  2452               	addwf	dtoa@i^0,w,c
  1828  0004E8  6E27               	movwf	pad@buf^0,c
  1829  0004EA  0E01               	movlw	high _dbuf
  1830  0004EC  2053               	addwfc	(dtoa@i+1)^0,w,c
  1831  0004EE  6E28               	movwf	(pad@buf+1)^0,c
  1832  0004F0  C046  F029         	movff	dtoa@w,pad@p
  1833  0004F4  C047  F02A         	movff	dtoa@w+1,pad@p+1
  1834  0004F8  ECA5  F005         	call	_pad	;wreg free
  1835  0004FC  C025  F030         	movff	?_pad,?_dtoa
  1836  000500  C026  F031         	movff	?_pad+1,?_dtoa+1
  1837  000504  0012               	return		;funcret
  1838  000506                     __end_of_dtoa:
  1839                           	callstack 0
  1840                           
  1841 ;; *************** function _pad *****************
  1842 ;; Defined at:
  1843 ;;		line 72 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
  1846 ;;		 -> sprintf@f(6), 
  1847 ;;  buf             2   38[COMRAM] PTR unsigned char 
  1848 ;;		 -> dbuf(32), 
  1849 ;;  p               2   40[COMRAM] int 
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;  w               2   45[COMRAM] int 
  1852 ;;  i               2   43[COMRAM] int 
  1853 ;; Return value:  Size  Location     Type
  1854 ;;                  2   36[COMRAM] int 
  1855 ;; Registers used:
  1856 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMRAM   BANK0   BANK1
  1862 ;;      Params:         6       0       0
  1863 ;;      Locals:         4       0       0
  1864 ;;      Temps:          1       0       0
  1865 ;;      Totals:        11       0       0
  1866 ;;Total ram usage:       11 bytes
  1867 ;; Hardware stack levels used:    1
  1868 ;; Hardware stack levels required when called:   11
  1869 ;; This function calls:
  1870 ;;		_fputc
  1871 ;;		_fputs
  1872 ;;		_strlen
  1873 ;; This function is called by:
  1874 ;;		_dtoa
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           	psect	text7
  1879  000B4A                     __ptext7:
  1880                           	callstack 0
  1881  000B4A                     _pad:
  1882                           	callstack 14
  1883  000B4A                     
  1884                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.20/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
  1885  000B4A  A058               	btfss	_flags^0,0,c
  1886  000B4C  EFAA  F005         	goto	u1521
  1887  000B50  EFAC  F005         	goto	u1520
  1888  000B54                     u1521:
  1889  000B54  EFB6  F005         	goto	l2252
  1890  000B58                     u1520:
  1891  000B58                     
  1892                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
  1893  000B58  C027  F01E         	movff	pad@buf,fputs@s
  1894  000B5C  C028  F01F         	movff	pad@buf+1,fputs@s+1
  1895  000B60  C025  F020         	movff	pad@fp,fputs@fp
  1896  000B64  C026  F021         	movff	pad@fp+1,fputs@fp+1
  1897  000B68  EC9E  F007         	call	_fputs	;wreg free
  1898  000B6C                     l2252:
  1899                           
  1900                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
  1901  000B6C  BE2A               	btfsc	(pad@p+1)^0,7,c
  1902  000B6E  EFBB  F005         	goto	u1531
  1903  000B72  EFBD  F005         	goto	u1530
  1904  000B76                     u1531:
  1905  000B76  EFC3  F005         	goto	l2256
  1906  000B7A                     u1530:
  1907  000B7A  C029  F02E         	movff	pad@p,pad@w
  1908  000B7E  C02A  F02F         	movff	pad@p+1,pad@w+1
  1909  000B82  EFC7  F005         	goto	l943
  1910  000B86                     l2256:
  1911  000B86  0E00               	movlw	0
  1912  000B88  6E2F               	movwf	(pad@w+1)^0,c
  1913  000B8A  0E00               	movlw	0
  1914  000B8C  6E2E               	movwf	pad@w^0,c
  1915  000B8E                     l943:
  1916                           
  1917                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  1918  000B8E  0E00               	movlw	0
  1919  000B90  6E2D               	movwf	(pad@i+1)^0,c
  1920  000B92  0E00               	movlw	0
  1921  000B94  6E2C               	movwf	pad@i^0,c
  1922                           
  1923                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  1924  000B96  EFD9  F005         	goto	l2262
  1925  000B9A                     l2258:
  1926                           
  1927                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
  1928  000B9A  0E00               	movlw	0
  1929  000B9C  6E16               	movwf	(fputc@c+1)^0,c
  1930  000B9E  0E20               	movlw	32
  1931  000BA0  6E15               	movwf	fputc@c^0,c
  1932  000BA2  C025  F017         	movff	pad@fp,fputc@fp
  1933  000BA6  C026  F018         	movff	pad@fp+1,fputc@fp+1
  1934  000BAA  EC40  F005         	call	_fputc	;wreg free
  1935  000BAE                     
  1936                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 86:         ++i;
  1937  000BAE  4A2C               	infsnz	pad@i^0,f,c
  1938  000BB0  2A2D               	incf	(pad@i+1)^0,f,c
  1939  000BB2                     l2262:
  1940                           
  1941                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  1942  000BB2  502E               	movf	pad@w^0,w,c
  1943  000BB4  5C2C               	subwf	pad@i^0,w,c
  1944  000BB6  502D               	movf	(pad@i+1)^0,w,c
  1945  000BB8  0A80               	xorlw	128
  1946  000BBA  6E2B               	movwf	??_pad^0,c
  1947  000BBC  502F               	movf	(pad@w+1)^0,w,c
  1948  000BBE  0A80               	xorlw	128
  1949  000BC0  582B               	subwfb	??_pad^0,w,c
  1950  000BC2  A0D8               	btfss	status,0,c
  1951  000BC4  EFE6  F005         	goto	u1541
  1952  000BC8  EFE8  F005         	goto	u1540
  1953  000BCC                     u1541:
  1954  000BCC  EFCD  F005         	goto	l2258
  1955  000BD0                     u1540:
  1956  000BD0                     
  1957                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
  1958  000BD0  B058               	btfsc	_flags^0,0,c
  1959  000BD2  EFED  F005         	goto	u1551
  1960  000BD6  EFEF  F005         	goto	u1550
  1961  000BDA                     u1551:
  1962  000BDA  EFF9  F005         	goto	l2266
  1963  000BDE                     u1550:
  1964  000BDE                     
  1965                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
  1966  000BDE  C027  F01E         	movff	pad@buf,fputs@s
  1967  000BE2  C028  F01F         	movff	pad@buf+1,fputs@s+1
  1968  000BE6  C025  F020         	movff	pad@fp,fputs@fp
  1969  000BEA  C026  F021         	movff	pad@fp+1,fputs@fp+1
  1970  000BEE  EC9E  F007         	call	_fputs	;wreg free
  1971  000BF2                     l2266:
  1972                           
  1973                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 94:     return strle
      +                          n(buf) + w;
  1974  000BF2  C027  F015         	movff	pad@buf,strlen@s
  1975  000BF6  C028  F016         	movff	pad@buf+1,strlen@s+1
  1976  000BFA  EC01  F008         	call	_strlen	;wreg free
  1977  000BFE  502E               	movf	pad@w^0,w,c
  1978  000C00  2415               	addwf	?_strlen^0,w,c
  1979  000C02  6E25               	movwf	?_pad^0,c
  1980  000C04  502F               	movf	(pad@w+1)^0,w,c
  1981  000C06  2016               	addwfc	(?_strlen+1)^0,w,c
  1982  000C08  6E26               	movwf	(?_pad+1)^0,c
  1983  000C0A  0012               	return		;funcret
  1984  000C0C                     __end_of_pad:
  1985                           	callstack 0
  1986                           
  1987 ;; *************** function _strlen *****************
  1988 ;; Defined at:
  1989 ;;		line 5 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/strlen.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;  s               2   20[COMRAM] PTR const unsigned char 
  1992 ;;		 -> dbuf(32), 
  1993 ;; Auto vars:     Size  Location     Type
  1994 ;;  a               2   22[COMRAM] PTR const unsigned char 
  1995 ;;		 -> dbuf(32), 
  1996 ;; Return value:  Size  Location     Type
  1997 ;;                  2   20[COMRAM] unsigned int 
  1998 ;; Registers used:
  1999 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2000 ;; Tracked objects:
  2001 ;;		On entry : 0/0
  2002 ;;		On exit  : 0/0
  2003 ;;		Unchanged: 0/0
  2004 ;; Data sizes:     COMRAM   BANK0   BANK1
  2005 ;;      Params:         2       0       0
  2006 ;;      Locals:         2       0       0
  2007 ;;      Temps:          0       0       0
  2008 ;;      Totals:         4       0       0
  2009 ;;Total ram usage:        4 bytes
  2010 ;; Hardware stack levels used:    1
  2011 ;; Hardware stack levels required when called:    8
  2012 ;; This function calls:
  2013 ;;		Nothing
  2014 ;; This function is called by:
  2015 ;;		_pad
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           
  2019                           	psect	text8
  2020  001002                     __ptext8:
  2021                           	callstack 0
  2022  001002                     _strlen:
  2023                           	callstack 16
  2024  001002  C015  F017         	movff	strlen@s,strlen@a
  2025  001006  C016  F018         	movff	strlen@s+1,strlen@a+1
  2026  00100A  EF09  F008         	goto	l2158
  2027  00100E                     l2156:
  2028  00100E  4A15               	infsnz	strlen@s^0,f,c
  2029  001010  2A16               	incf	(strlen@s+1)^0,f,c
  2030  001012                     l2158:
  2031  001012  C015  FFD9         	movff	strlen@s,fsr2l
  2032  001016  C016  FFDA         	movff	strlen@s+1,fsr2h
  2033  00101A  50DF               	movf	indf2,w,c
  2034  00101C  A4D8               	btfss	status,2,c
  2035  00101E  EF13  F008         	goto	u1381
  2036  001022  EF15  F008         	goto	u1380
  2037  001026                     u1381:
  2038  001026  EF07  F008         	goto	l2156
  2039  00102A                     u1380:
  2040  00102A  5017               	movf	strlen@a^0,w,c
  2041  00102C  5C15               	subwf	strlen@s^0,w,c
  2042  00102E  6E15               	movwf	?_strlen^0,c
  2043  001030  5018               	movf	(strlen@a+1)^0,w,c
  2044  001032  5816               	subwfb	(strlen@s+1)^0,w,c
  2045  001034  6E16               	movwf	(?_strlen+1)^0,c
  2046  001036  0012               	return		;funcret
  2047  001038                     __end_of_strlen:
  2048                           	callstack 0
  2049                           
  2050 ;; *************** function _fputs *****************
  2051 ;; Defined at:
  2052 ;;		line 8 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/nf_fputs.c"
  2053 ;; Parameters:    Size  Location     Type
  2054 ;;  s               2   29[COMRAM] PTR const unsigned char 
  2055 ;;		 -> dbuf(32), 
  2056 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  2057 ;;		 -> sprintf@f(6), 
  2058 ;; Auto vars:     Size  Location     Type
  2059 ;;  i               2   34[COMRAM] int 
  2060 ;;  c               1   33[COMRAM] unsigned char 
  2061 ;; Return value:  Size  Location     Type
  2062 ;;                  2   29[COMRAM] int 
  2063 ;; Registers used:
  2064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2065 ;; Tracked objects:
  2066 ;;		On entry : 0/0
  2067 ;;		On exit  : 0/0
  2068 ;;		Unchanged: 0/0
  2069 ;; Data sizes:     COMRAM   BANK0   BANK1
  2070 ;;      Params:         4       0       0
  2071 ;;      Locals:         3       0       0
  2072 ;;      Temps:          0       0       0
  2073 ;;      Totals:         7       0       0
  2074 ;;Total ram usage:        7 bytes
  2075 ;; Hardware stack levels used:    1
  2076 ;; Hardware stack levels required when called:   10
  2077 ;; This function calls:
  2078 ;;		_fputc
  2079 ;; This function is called by:
  2080 ;;		_pad
  2081 ;; This function uses a non-reentrant model
  2082 ;;
  2083                           
  2084                           	psect	text9
  2085  000F3C                     __ptext9:
  2086                           	callstack 0
  2087  000F3C                     _fputs:
  2088                           	callstack 14
  2089  000F3C  0E00               	movlw	0
  2090  000F3E  6E24               	movwf	(fputs@i+1)^0,c
  2091  000F40  0E00               	movlw	0
  2092  000F42  6E23               	movwf	fputs@i^0,c
  2093  000F44  EFAF  F007         	goto	l2152
  2094  000F48                     l2148:
  2095  000F48  C022  F015         	movff	fputs@c,fputc@c
  2096  000F4C  6A16               	clrf	(fputc@c+1)^0,c
  2097  000F4E  C020  F017         	movff	fputs@fp,fputc@fp
  2098  000F52  C021  F018         	movff	fputs@fp+1,fputc@fp+1
  2099  000F56  EC40  F005         	call	_fputc	;wreg free
  2100  000F5A  4A23               	infsnz	fputs@i^0,f,c
  2101  000F5C  2A24               	incf	(fputs@i+1)^0,f,c
  2102  000F5E                     l2152:
  2103  000F5E  5023               	movf	fputs@i^0,w,c
  2104  000F60  241E               	addwf	fputs@s^0,w,c
  2105  000F62  6ED9               	movwf	fsr2l,c
  2106  000F64  5024               	movf	(fputs@i+1)^0,w,c
  2107  000F66  201F               	addwfc	(fputs@s+1)^0,w,c
  2108  000F68  6EDA               	movwf	fsr2h,c
  2109  000F6A  50DF               	movf	indf2,w,c
  2110  000F6C  6E22               	movwf	fputs@c^0,c
  2111  000F6E  5022               	movf	fputs@c^0,w,c
  2112  000F70  A4D8               	btfss	status,2,c
  2113  000F72  EFBD  F007         	goto	u1371
  2114  000F76  EFBF  F007         	goto	u1370
  2115  000F7A                     u1371:
  2116  000F7A  EFA4  F007         	goto	l2148
  2117  000F7E                     u1370:
  2118  000F7E  0012               	return		;funcret
  2119  000F80                     __end_of_fputs:
  2120                           	callstack 0
  2121                           
  2122 ;; *************** function _fputc *****************
  2123 ;; Defined at:
  2124 ;;		line 8 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/nf_fputc.c"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;  c               2   20[COMRAM] int 
  2127 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  2128 ;;		 -> sprintf@f(6), 
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;		None
  2131 ;; Return value:  Size  Location     Type
  2132 ;;                  2   20[COMRAM] int 
  2133 ;; Registers used:
  2134 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMRAM   BANK0   BANK1
  2140 ;;      Params:         4       0       0
  2141 ;;      Locals:         0       0       0
  2142 ;;      Temps:          5       0       0
  2143 ;;      Totals:         9       0       0
  2144 ;;Total ram usage:        9 bytes
  2145 ;; Hardware stack levels used:    1
  2146 ;; Hardware stack levels required when called:    9
  2147 ;; This function calls:
  2148 ;;		_putch
  2149 ;; This function is called by:
  2150 ;;		_pad
  2151 ;;		_vfpfcnvrt
  2152 ;;		_fputs
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156                           	psect	text10
  2157  000A80                     __ptext10:
  2158                           	callstack 0
  2159  000A80                     _fputc:
  2160                           	callstack 17
  2161  000A80  5017               	movf	fputc@fp^0,w,c
  2162  000A82  1018               	iorwf	(fputc@fp+1)^0,w,c
  2163  000A84  B4D8               	btfsc	status,2,c
  2164  000A86  EF47  F005         	goto	u1331
  2165  000A8A  EF49  F005         	goto	u1330
  2166  000A8E                     u1331:
  2167  000A8E  EF52  F005         	goto	l2128
  2168  000A92                     u1330:
  2169  000A92  5017               	movf	fputc@fp^0,w,c
  2170  000A94  1018               	iorwf	(fputc@fp+1)^0,w,c
  2171  000A96  A4D8               	btfss	status,2,c
  2172  000A98  EF50  F005         	goto	u1341
  2173  000A9C  EF52  F005         	goto	u1340
  2174  000AA0                     u1341:
  2175  000AA0  EF57  F005         	goto	l2130
  2176  000AA4                     u1340:
  2177  000AA4                     l2128:
  2178  000AA4  5015               	movf	fputc@c^0,w,c
  2179  000AA6  ECCF  F008         	call	_putch
  2180  000AAA  EFA4  F005         	goto	l1007
  2181  000AAE                     l2130:
  2182  000AAE  EE20 F004          	lfsr	2,4
  2183  000AB2  5017               	movf	fputc@fp^0,w,c
  2184  000AB4  26D9               	addwf	fsr2l,f,c
  2185  000AB6  5018               	movf	(fputc@fp+1)^0,w,c
  2186  000AB8  22DA               	addwfc	fsr2h,f,c
  2187  000ABA  50DE               	movf	postinc2,w,c
  2188  000ABC  10DE               	iorwf	postinc2,w,c
  2189  000ABE  B4D8               	btfsc	status,2,c
  2190  000AC0  EF64  F005         	goto	u1351
  2191  000AC4  EF66  F005         	goto	u1350
  2192  000AC8                     u1351:
  2193  000AC8  EF81  F005         	goto	l2134
  2194  000ACC                     u1350:
  2195  000ACC  EE20 F004          	lfsr	2,4
  2196  000AD0  5017               	movf	fputc@fp^0,w,c
  2197  000AD2  26D9               	addwf	fsr2l,f,c
  2198  000AD4  5018               	movf	(fputc@fp+1)^0,w,c
  2199  000AD6  22DA               	addwfc	fsr2h,f,c
  2200  000AD8  EE10 F002          	lfsr	1,2
  2201  000ADC  5017               	movf	fputc@fp^0,w,c
  2202  000ADE  26E1               	addwf	fsr1l,f,c
  2203  000AE0  5018               	movf	(fputc@fp+1)^0,w,c
  2204  000AE2  22E2               	addwfc	fsr1h,f,c
  2205  000AE4  50DE               	movf	postinc2,w,c
  2206  000AE6  5CE6               	subwf	postinc1,w,c
  2207  000AE8  50E6               	movf	postinc1,w,c
  2208  000AEA  0A80               	xorlw	128
  2209  000AEC  6E1D               	movwf	(??_fputc+4)^0,c
  2210  000AEE  50DE               	movf	postinc2,w,c
  2211  000AF0  0A80               	xorlw	128
  2212  000AF2  581D               	subwfb	(??_fputc+4)^0,w,c
  2213  000AF4  B0D8               	btfsc	status,0,c
  2214  000AF6  EF7F  F005         	goto	u1361
  2215  000AFA  EF81  F005         	goto	u1360
  2216  000AFE                     u1361:
  2217  000AFE  EFA4  F005         	goto	l1007
  2218  000B02                     u1360:
  2219  000B02                     l2134:
  2220  000B02  EE20 F002          	lfsr	2,2
  2221  000B06  5017               	movf	fputc@fp^0,w,c
  2222  000B08  26D9               	addwf	fsr2l,f,c
  2223  000B0A  5018               	movf	(fputc@fp+1)^0,w,c
  2224  000B0C  22DA               	addwfc	fsr2h,f,c
  2225  000B0E  CFDE F019          	movff	postinc2,??_fputc
  2226  000B12  CFDD F01A          	movff	postdec2,??_fputc+1
  2227  000B16  C017  FFD9         	movff	fputc@fp,fsr2l
  2228  000B1A  C018  FFDA         	movff	fputc@fp+1,fsr2h
  2229  000B1E  CFDE F01B          	movff	postinc2,??_fputc+2
  2230  000B22  CFDD F01C          	movff	postdec2,??_fputc+3
  2231  000B26  5019               	movf	??_fputc^0,w,c
  2232  000B28  241B               	addwf	(??_fputc+2)^0,w,c
  2233  000B2A  6ED9               	movwf	fsr2l,c
  2234  000B2C  501A               	movf	(??_fputc+1)^0,w,c
  2235  000B2E  201C               	addwfc	(??_fputc+3)^0,w,c
  2236  000B30  6EDA               	movwf	fsr2h,c
  2237  000B32  C015  FFDF         	movff	fputc@c,indf2
  2238  000B36  EE20 F002          	lfsr	2,2
  2239  000B3A  5017               	movf	fputc@fp^0,w,c
  2240  000B3C  26D9               	addwf	fsr2l,f,c
  2241  000B3E  5018               	movf	(fputc@fp+1)^0,w,c
  2242  000B40  22DA               	addwfc	fsr2h,f,c
  2243  000B42  2ADE               	incf	postinc2,f,c
  2244  000B44  0E00               	movlw	0
  2245  000B46  22DD               	addwfc	postdec2,f,c
  2246  000B48                     l1007:
  2247  000B48  0012               	return		;funcret
  2248  000B4A                     __end_of_fputc:
  2249                           	callstack 0
  2250                           
  2251 ;; *************** function _putch *****************
  2252 ;; Defined at:
  2253 ;;		line 7 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/putch.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;  c               1    wreg     unsigned char 
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;  c               1    0[COMRAM] unsigned char 
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  1    wreg      void 
  2260 ;; Registers used:
  2261 ;;		wreg
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMRAM   BANK0   BANK1
  2267 ;;      Params:         0       0       0
  2268 ;;      Locals:         0       0       0
  2269 ;;      Temps:          0       0       0
  2270 ;;      Totals:         0       0       0
  2271 ;;Total ram usage:        0 bytes
  2272 ;; Hardware stack levels used:    1
  2273 ;; Hardware stack levels required when called:    8
  2274 ;; This function calls:
  2275 ;;		Nothing
  2276 ;; This function is called by:
  2277 ;;		_fputc
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281                           	psect	text11
  2282  00119E                     __ptext11:
  2283                           	callstack 0
  2284  00119E                     _putch:
  2285                           	callstack 17
  2286  00119E  0012               	return		;funcret
  2287  0011A0                     __end_of_putch:
  2288                           	callstack 0
  2289                           
  2290 ;; *************** function _abs *****************
  2291 ;; Defined at:
  2292 ;;		line 1 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/abs.c"
  2293 ;; Parameters:    Size  Location     Type
  2294 ;;  a               2   38[COMRAM] int 
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;		None
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  2   38[COMRAM] int 
  2299 ;; Registers used:
  2300 ;;		wreg, status,2, status,0
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMRAM   BANK0   BANK1
  2306 ;;      Params:         2       0       0
  2307 ;;      Locals:         0       0       0
  2308 ;;      Temps:          2       0       0
  2309 ;;      Totals:         4       0       0
  2310 ;;Total ram usage:        4 bytes
  2311 ;; Hardware stack levels used:    1
  2312 ;; Hardware stack levels required when called:    8
  2313 ;; This function calls:
  2314 ;;		Nothing
  2315 ;; This function is called by:
  2316 ;;		_dtoa
  2317 ;; This function uses a non-reentrant model
  2318 ;;
  2319                           
  2320                           	psect	text12
  2321  000FC2                     __ptext12:
  2322                           	callstack 0
  2323  000FC2                     _abs:
  2324                           	callstack 17
  2325  000FC2  BE28               	btfsc	(abs@a+1)^0,7,c
  2326  000FC4  EFEE  F007         	goto	u1560
  2327  000FC8  5028               	movf	(abs@a+1)^0,w,c
  2328  000FCA  E106               	bnz	u1561
  2329  000FCC  0427               	decf	abs@a^0,w,c
  2330  000FCE  B0D8               	btfsc	status,0,c
  2331  000FD0  EFEC  F007         	goto	u1561
  2332  000FD4  EFEE  F007         	goto	u1560
  2333  000FD8                     u1561:
  2334  000FD8  EFFC  F007         	goto	l992
  2335  000FDC                     u1560:
  2336  000FDC  C027  F029         	movff	abs@a,??_abs
  2337  000FE0  C028  F02A         	movff	abs@a+1,??_abs+1
  2338  000FE4  1E29               	comf	??_abs^0,f,c
  2339  000FE6  1E2A               	comf	(??_abs+1)^0,f,c
  2340  000FE8  4A29               	infsnz	??_abs^0,f,c
  2341  000FEA  2A2A               	incf	(??_abs+1)^0,f,c
  2342  000FEC  C029  F027         	movff	??_abs,?_abs
  2343  000FF0  C02A  F028         	movff	??_abs+1,?_abs+1
  2344  000FF4  EF00  F008         	goto	l995
  2345  000FF8                     l992:
  2346  000FF8  C027  F027         	movff	abs@a,?_abs
  2347  000FFC  C028  F028         	movff	abs@a+1,?_abs+1
  2348  001000                     l995:
  2349  001000  0012               	return		;funcret
  2350  001002                     __end_of_abs:
  2351                           	callstack 0
  2352                           
  2353 ;; *************** function ___aomod *****************
  2354 ;; Defined at:
  2355 ;;		line 9 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/aomod.c"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;  dividend        8   20[COMRAM] long long 
  2358 ;;  divisor         8   28[COMRAM] long long 
  2359 ;; Auto vars:     Size  Location     Type
  2360 ;;  sign            1   37[COMRAM] unsigned char 
  2361 ;;  counter         1   36[COMRAM] unsigned char 
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  8   20[COMRAM] long long 
  2364 ;; Registers used:
  2365 ;;		wreg, status,2, status,0
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMRAM   BANK0   BANK1
  2371 ;;      Params:        16       0       0
  2372 ;;      Locals:         2       0       0
  2373 ;;      Temps:          0       0       0
  2374 ;;      Totals:        18       0       0
  2375 ;;Total ram usage:       18 bytes
  2376 ;; Hardware stack levels used:    1
  2377 ;; Hardware stack levels required when called:    8
  2378 ;; This function calls:
  2379 ;;		Nothing
  2380 ;; This function is called by:
  2381 ;;		_dtoa
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           	psect	text13
  2386  000844                     __ptext13:
  2387                           	callstack 0
  2388  000844                     ___aomod:
  2389                           	callstack 17
  2390  000844  0E00               	movlw	0
  2391  000846  6E26               	movwf	___aomod@sign^0,c
  2392  000848  BE1C               	btfsc	(___aomod@dividend+7)^0,7,c
  2393  00084A  EF2B  F004         	goto	u1460
  2394  00084E  EF29  F004         	goto	u1461
  2395  000852                     u1461:
  2396  000852  EF3D  F004         	goto	l2220
  2397  000856                     u1460:
  2398  000856  1E1C               	comf	(___aomod@dividend+7)^0,f,c
  2399  000858  1E1B               	comf	(___aomod@dividend+6)^0,f,c
  2400  00085A  1E1A               	comf	(___aomod@dividend+5)^0,f,c
  2401  00085C  1E19               	comf	(___aomod@dividend+4)^0,f,c
  2402  00085E  1E18               	comf	(___aomod@dividend+3)^0,f,c
  2403  000860  1E17               	comf	(___aomod@dividend+2)^0,f,c
  2404  000862  1E16               	comf	(___aomod@dividend+1)^0,f,c
  2405  000864  6C15               	negf	___aomod@dividend^0,c
  2406  000866  0E00               	movlw	0
  2407  000868  2216               	addwfc	(___aomod@dividend+1)^0,f,c
  2408  00086A  2217               	addwfc	(___aomod@dividend+2)^0,f,c
  2409  00086C  2218               	addwfc	(___aomod@dividend+3)^0,f,c
  2410  00086E  2219               	addwfc	(___aomod@dividend+4)^0,f,c
  2411  000870  221A               	addwfc	(___aomod@dividend+5)^0,f,c
  2412  000872  221B               	addwfc	(___aomod@dividend+6)^0,f,c
  2413  000874  221C               	addwfc	(___aomod@dividend+7)^0,f,c
  2414  000876  0E01               	movlw	1
  2415  000878  6E26               	movwf	___aomod@sign^0,c
  2416  00087A                     l2220:
  2417  00087A  BE24               	btfsc	(___aomod@divisor+7)^0,7,c
  2418  00087C  EF44  F004         	goto	u1470
  2419  000880  EF42  F004         	goto	u1471
  2420  000884                     u1471:
  2421  000884  EF54  F004         	goto	l2224
  2422  000888                     u1470:
  2423  000888  1E24               	comf	(___aomod@divisor+7)^0,f,c
  2424  00088A  1E23               	comf	(___aomod@divisor+6)^0,f,c
  2425  00088C  1E22               	comf	(___aomod@divisor+5)^0,f,c
  2426  00088E  1E21               	comf	(___aomod@divisor+4)^0,f,c
  2427  000890  1E20               	comf	(___aomod@divisor+3)^0,f,c
  2428  000892  1E1F               	comf	(___aomod@divisor+2)^0,f,c
  2429  000894  1E1E               	comf	(___aomod@divisor+1)^0,f,c
  2430  000896  6C1D               	negf	___aomod@divisor^0,c
  2431  000898  0E00               	movlw	0
  2432  00089A  221E               	addwfc	(___aomod@divisor+1)^0,f,c
  2433  00089C  221F               	addwfc	(___aomod@divisor+2)^0,f,c
  2434  00089E  2220               	addwfc	(___aomod@divisor+3)^0,f,c
  2435  0008A0  2221               	addwfc	(___aomod@divisor+4)^0,f,c
  2436  0008A2  2222               	addwfc	(___aomod@divisor+5)^0,f,c
  2437  0008A4  2223               	addwfc	(___aomod@divisor+6)^0,f,c
  2438  0008A6  2224               	addwfc	(___aomod@divisor+7)^0,f,c
  2439  0008A8                     l2224:
  2440  0008A8  501D               	movf	___aomod@divisor^0,w,c
  2441  0008AA  101E               	iorwf	(___aomod@divisor+1)^0,w,c
  2442  0008AC  101F               	iorwf	(___aomod@divisor+2)^0,w,c
  2443  0008AE  1020               	iorwf	(___aomod@divisor+3)^0,w,c
  2444  0008B0  1021               	iorwf	(___aomod@divisor+4)^0,w,c
  2445  0008B2  1022               	iorwf	(___aomod@divisor+5)^0,w,c
  2446  0008B4  1023               	iorwf	(___aomod@divisor+6)^0,w,c
  2447  0008B6  1024               	iorwf	(___aomod@divisor+7)^0,w,c
  2448  0008B8  B4D8               	btfsc	status,2,c
  2449  0008BA  EF61  F004         	goto	u1481
  2450  0008BE  EF63  F004         	goto	u1480
  2451  0008C2                     u1481:
  2452  0008C2  EFAB  F004         	goto	l2240
  2453  0008C6                     u1480:
  2454  0008C6  0E01               	movlw	1
  2455  0008C8  6E25               	movwf	___aomod@counter^0,c
  2456  0008CA  EF71  F004         	goto	l2230
  2457  0008CE                     l2228:
  2458  0008CE  90D8               	bcf	status,0,c
  2459  0008D0  361D               	rlcf	___aomod@divisor^0,f,c
  2460  0008D2  361E               	rlcf	(___aomod@divisor+1)^0,f,c
  2461  0008D4  361F               	rlcf	(___aomod@divisor+2)^0,f,c
  2462  0008D6  3620               	rlcf	(___aomod@divisor+3)^0,f,c
  2463  0008D8  3621               	rlcf	(___aomod@divisor+4)^0,f,c
  2464  0008DA  3622               	rlcf	(___aomod@divisor+5)^0,f,c
  2465  0008DC  3623               	rlcf	(___aomod@divisor+6)^0,f,c
  2466  0008DE  3624               	rlcf	(___aomod@divisor+7)^0,f,c
  2467  0008E0  2A25               	incf	___aomod@counter^0,f,c
  2468  0008E2                     l2230:
  2469  0008E2  AE24               	btfss	(___aomod@divisor+7)^0,7,c
  2470  0008E4  EF76  F004         	goto	u1491
  2471  0008E8  EF78  F004         	goto	u1490
  2472  0008EC                     u1491:
  2473  0008EC  EF67  F004         	goto	l2228
  2474  0008F0                     u1490:
  2475  0008F0                     l2232:
  2476  0008F0  501D               	movf	___aomod@divisor^0,w,c
  2477  0008F2  5C15               	subwf	___aomod@dividend^0,w,c
  2478  0008F4  501E               	movf	(___aomod@divisor+1)^0,w,c
  2479  0008F6  5816               	subwfb	(___aomod@dividend+1)^0,w,c
  2480  0008F8  501F               	movf	(___aomod@divisor+2)^0,w,c
  2481  0008FA  5817               	subwfb	(___aomod@dividend+2)^0,w,c
  2482  0008FC  5020               	movf	(___aomod@divisor+3)^0,w,c
  2483  0008FE  5818               	subwfb	(___aomod@dividend+3)^0,w,c
  2484  000900  5021               	movf	(___aomod@divisor+4)^0,w,c
  2485  000902  5819               	subwfb	(___aomod@dividend+4)^0,w,c
  2486  000904  5022               	movf	(___aomod@divisor+5)^0,w,c
  2487  000906  581A               	subwfb	(___aomod@dividend+5)^0,w,c
  2488  000908  5023               	movf	(___aomod@divisor+6)^0,w,c
  2489  00090A  581B               	subwfb	(___aomod@dividend+6)^0,w,c
  2490  00090C  5024               	movf	(___aomod@divisor+7)^0,w,c
  2491  00090E  581C               	subwfb	(___aomod@dividend+7)^0,w,c
  2492  000910  A0D8               	btfss	status,0,c
  2493  000912  EF8D  F004         	goto	u1501
  2494  000916  EF8F  F004         	goto	u1500
  2495  00091A                     u1501:
  2496  00091A  EF9F  F004         	goto	l2236
  2497  00091E                     u1500:
  2498  00091E  501D               	movf	___aomod@divisor^0,w,c
  2499  000920  5E15               	subwf	___aomod@dividend^0,f,c
  2500  000922  501E               	movf	(___aomod@divisor+1)^0,w,c
  2501  000924  5A16               	subwfb	(___aomod@dividend+1)^0,f,c
  2502  000926  501F               	movf	(___aomod@divisor+2)^0,w,c
  2503  000928  5A17               	subwfb	(___aomod@dividend+2)^0,f,c
  2504  00092A  5020               	movf	(___aomod@divisor+3)^0,w,c
  2505  00092C  5A18               	subwfb	(___aomod@dividend+3)^0,f,c
  2506  00092E  5021               	movf	(___aomod@divisor+4)^0,w,c
  2507  000930  5A19               	subwfb	(___aomod@dividend+4)^0,f,c
  2508  000932  5022               	movf	(___aomod@divisor+5)^0,w,c
  2509  000934  5A1A               	subwfb	(___aomod@dividend+5)^0,f,c
  2510  000936  5023               	movf	(___aomod@divisor+6)^0,w,c
  2511  000938  5A1B               	subwfb	(___aomod@dividend+6)^0,f,c
  2512  00093A  5024               	movf	(___aomod@divisor+7)^0,w,c
  2513  00093C  5A1C               	subwfb	(___aomod@dividend+7)^0,f,c
  2514  00093E                     l2236:
  2515  00093E  90D8               	bcf	status,0,c
  2516  000940  3224               	rrcf	(___aomod@divisor+7)^0,f,c
  2517  000942  3223               	rrcf	(___aomod@divisor+6)^0,f,c
  2518  000944  3222               	rrcf	(___aomod@divisor+5)^0,f,c
  2519  000946  3221               	rrcf	(___aomod@divisor+4)^0,f,c
  2520  000948  3220               	rrcf	(___aomod@divisor+3)^0,f,c
  2521  00094A  321F               	rrcf	(___aomod@divisor+2)^0,f,c
  2522  00094C  321E               	rrcf	(___aomod@divisor+1)^0,f,c
  2523  00094E  321D               	rrcf	___aomod@divisor^0,f,c
  2524  000950  2E25               	decfsz	___aomod@counter^0,f,c
  2525  000952  EF78  F004         	goto	l2232
  2526  000956                     l2240:
  2527  000956  5026               	movf	___aomod@sign^0,w,c
  2528  000958  B4D8               	btfsc	status,2,c
  2529  00095A  EFB1  F004         	goto	u1511
  2530  00095E  EFB3  F004         	goto	u1510
  2531  000962                     u1511:
  2532  000962  EFC3  F004         	goto	l2244
  2533  000966                     u1510:
  2534  000966  1E1C               	comf	(___aomod@dividend+7)^0,f,c
  2535  000968  1E1B               	comf	(___aomod@dividend+6)^0,f,c
  2536  00096A  1E1A               	comf	(___aomod@dividend+5)^0,f,c
  2537  00096C  1E19               	comf	(___aomod@dividend+4)^0,f,c
  2538  00096E  1E18               	comf	(___aomod@dividend+3)^0,f,c
  2539  000970  1E17               	comf	(___aomod@dividend+2)^0,f,c
  2540  000972  1E16               	comf	(___aomod@dividend+1)^0,f,c
  2541  000974  6C15               	negf	___aomod@dividend^0,c
  2542  000976  0E00               	movlw	0
  2543  000978  2216               	addwfc	(___aomod@dividend+1)^0,f,c
  2544  00097A  2217               	addwfc	(___aomod@dividend+2)^0,f,c
  2545  00097C  2218               	addwfc	(___aomod@dividend+3)^0,f,c
  2546  00097E  2219               	addwfc	(___aomod@dividend+4)^0,f,c
  2547  000980  221A               	addwfc	(___aomod@dividend+5)^0,f,c
  2548  000982  221B               	addwfc	(___aomod@dividend+6)^0,f,c
  2549  000984  221C               	addwfc	(___aomod@dividend+7)^0,f,c
  2550  000986                     l2244:
  2551  000986  C015  F015         	movff	___aomod@dividend,?___aomod
  2552  00098A  C016  F016         	movff	___aomod@dividend+1,?___aomod+1
  2553  00098E  C017  F017         	movff	___aomod@dividend+2,?___aomod+2
  2554  000992  C018  F018         	movff	___aomod@dividend+3,?___aomod+3
  2555  000996  C019  F019         	movff	___aomod@dividend+4,?___aomod+4
  2556  00099A  C01A  F01A         	movff	___aomod@dividend+5,?___aomod+5
  2557  00099E  C01B  F01B         	movff	___aomod@dividend+6,?___aomod+6
  2558  0009A2  C01C  F01C         	movff	___aomod@dividend+7,?___aomod+7
  2559  0009A6  0012               	return		;funcret
  2560  0009A8                     __end_of___aomod:
  2561                           	callstack 0
  2562                           
  2563 ;; *************** function ___aodiv *****************
  2564 ;; Defined at:
  2565 ;;		line 9 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/aodiv.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;  dividend        8   20[COMRAM] long long 
  2568 ;;  divisor         8   28[COMRAM] long long 
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;  quotient        8   38[COMRAM] long long 
  2571 ;;  sign            1   37[COMRAM] unsigned char 
  2572 ;;  counter         1   36[COMRAM] unsigned char 
  2573 ;; Return value:  Size  Location     Type
  2574 ;;                  8   20[COMRAM] long long 
  2575 ;; Registers used:
  2576 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2577 ;; Tracked objects:
  2578 ;;		On entry : 0/0
  2579 ;;		On exit  : 0/0
  2580 ;;		Unchanged: 0/0
  2581 ;; Data sizes:     COMRAM   BANK0   BANK1
  2582 ;;      Params:        16       0       0
  2583 ;;      Locals:        10       0       0
  2584 ;;      Temps:          0       0       0
  2585 ;;      Totals:        26       0       0
  2586 ;;Total ram usage:       26 bytes
  2587 ;; Hardware stack levels used:    1
  2588 ;; Hardware stack levels required when called:    8
  2589 ;; This function calls:
  2590 ;;		Nothing
  2591 ;; This function is called by:
  2592 ;;		_dtoa
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           
  2596                           	psect	text14
  2597  0006BC                     __ptext14:
  2598                           	callstack 0
  2599  0006BC                     ___aodiv:
  2600                           	callstack 17
  2601  0006BC  0E00               	movlw	0
  2602  0006BE  6E26               	movwf	___aodiv@sign^0,c
  2603  0006C0  BE24               	btfsc	(___aodiv@divisor+7)^0,7,c
  2604  0006C2  EF67  F003         	goto	u1390
  2605  0006C6  EF65  F003         	goto	u1391
  2606  0006CA                     u1391:
  2607  0006CA  EF79  F003         	goto	l2176
  2608  0006CE                     u1390:
  2609  0006CE  1E24               	comf	(___aodiv@divisor+7)^0,f,c
  2610  0006D0  1E23               	comf	(___aodiv@divisor+6)^0,f,c
  2611  0006D2  1E22               	comf	(___aodiv@divisor+5)^0,f,c
  2612  0006D4  1E21               	comf	(___aodiv@divisor+4)^0,f,c
  2613  0006D6  1E20               	comf	(___aodiv@divisor+3)^0,f,c
  2614  0006D8  1E1F               	comf	(___aodiv@divisor+2)^0,f,c
  2615  0006DA  1E1E               	comf	(___aodiv@divisor+1)^0,f,c
  2616  0006DC  6C1D               	negf	___aodiv@divisor^0,c
  2617  0006DE  0E00               	movlw	0
  2618  0006E0  221E               	addwfc	(___aodiv@divisor+1)^0,f,c
  2619  0006E2  221F               	addwfc	(___aodiv@divisor+2)^0,f,c
  2620  0006E4  2220               	addwfc	(___aodiv@divisor+3)^0,f,c
  2621  0006E6  2221               	addwfc	(___aodiv@divisor+4)^0,f,c
  2622  0006E8  2222               	addwfc	(___aodiv@divisor+5)^0,f,c
  2623  0006EA  2223               	addwfc	(___aodiv@divisor+6)^0,f,c
  2624  0006EC  2224               	addwfc	(___aodiv@divisor+7)^0,f,c
  2625  0006EE  0E01               	movlw	1
  2626  0006F0  6E26               	movwf	___aodiv@sign^0,c
  2627  0006F2                     l2176:
  2628  0006F2  BE1C               	btfsc	(___aodiv@dividend+7)^0,7,c
  2629  0006F4  EF80  F003         	goto	u1400
  2630  0006F8  EF7E  F003         	goto	u1401
  2631  0006FC                     u1401:
  2632  0006FC  EF92  F003         	goto	l2182
  2633  000700                     u1400:
  2634  000700  1E1C               	comf	(___aodiv@dividend+7)^0,f,c
  2635  000702  1E1B               	comf	(___aodiv@dividend+6)^0,f,c
  2636  000704  1E1A               	comf	(___aodiv@dividend+5)^0,f,c
  2637  000706  1E19               	comf	(___aodiv@dividend+4)^0,f,c
  2638  000708  1E18               	comf	(___aodiv@dividend+3)^0,f,c
  2639  00070A  1E17               	comf	(___aodiv@dividend+2)^0,f,c
  2640  00070C  1E16               	comf	(___aodiv@dividend+1)^0,f,c
  2641  00070E  6C15               	negf	___aodiv@dividend^0,c
  2642  000710  0E00               	movlw	0
  2643  000712  2216               	addwfc	(___aodiv@dividend+1)^0,f,c
  2644  000714  2217               	addwfc	(___aodiv@dividend+2)^0,f,c
  2645  000716  2218               	addwfc	(___aodiv@dividend+3)^0,f,c
  2646  000718  2219               	addwfc	(___aodiv@dividend+4)^0,f,c
  2647  00071A  221A               	addwfc	(___aodiv@dividend+5)^0,f,c
  2648  00071C  221B               	addwfc	(___aodiv@dividend+6)^0,f,c
  2649  00071E  221C               	addwfc	(___aodiv@dividend+7)^0,f,c
  2650  000720  0E01               	movlw	1
  2651  000722  1A26               	xorwf	___aodiv@sign^0,f,c
  2652  000724                     l2182:
  2653  000724  EE20  F027         	lfsr	2,___aodiv@quotient
  2654  000728  0E07               	movlw	7
  2655  00072A                     u1411:
  2656  00072A  6ADE               	clrf	postinc2,c
  2657  00072C  06E8               	decf	wreg,f,c
  2658  00072E  E2FD               	bc	u1411
  2659  000730  501D               	movf	___aodiv@divisor^0,w,c
  2660  000732  101E               	iorwf	(___aodiv@divisor+1)^0,w,c
  2661  000734  101F               	iorwf	(___aodiv@divisor+2)^0,w,c
  2662  000736  1020               	iorwf	(___aodiv@divisor+3)^0,w,c
  2663  000738  1021               	iorwf	(___aodiv@divisor+4)^0,w,c
  2664  00073A  1022               	iorwf	(___aodiv@divisor+5)^0,w,c
  2665  00073C  1023               	iorwf	(___aodiv@divisor+6)^0,w,c
  2666  00073E  1024               	iorwf	(___aodiv@divisor+7)^0,w,c
  2667  000740  B4D8               	btfsc	status,2,c
  2668  000742  EFA5  F003         	goto	u1421
  2669  000746  EFA7  F003         	goto	u1420
  2670  00074A                     u1421:
  2671  00074A  EFF9  F003         	goto	l2204
  2672  00074E                     u1420:
  2673  00074E  0E01               	movlw	1
  2674  000750  6E25               	movwf	___aodiv@counter^0,c
  2675  000752  EFB5  F003         	goto	l2190
  2676  000756                     l2188:
  2677  000756  90D8               	bcf	status,0,c
  2678  000758  361D               	rlcf	___aodiv@divisor^0,f,c
  2679  00075A  361E               	rlcf	(___aodiv@divisor+1)^0,f,c
  2680  00075C  361F               	rlcf	(___aodiv@divisor+2)^0,f,c
  2681  00075E  3620               	rlcf	(___aodiv@divisor+3)^0,f,c
  2682  000760  3621               	rlcf	(___aodiv@divisor+4)^0,f,c
  2683  000762  3622               	rlcf	(___aodiv@divisor+5)^0,f,c
  2684  000764  3623               	rlcf	(___aodiv@divisor+6)^0,f,c
  2685  000766  3624               	rlcf	(___aodiv@divisor+7)^0,f,c
  2686  000768  2A25               	incf	___aodiv@counter^0,f,c
  2687  00076A                     l2190:
  2688  00076A  AE24               	btfss	(___aodiv@divisor+7)^0,7,c
  2689  00076C  EFBA  F003         	goto	u1431
  2690  000770  EFBC  F003         	goto	u1430
  2691  000774                     u1431:
  2692  000774  EFAB  F003         	goto	l2188
  2693  000778                     u1430:
  2694  000778                     l2192:
  2695  000778  90D8               	bcf	status,0,c
  2696  00077A  3627               	rlcf	___aodiv@quotient^0,f,c
  2697  00077C  3628               	rlcf	(___aodiv@quotient+1)^0,f,c
  2698  00077E  3629               	rlcf	(___aodiv@quotient+2)^0,f,c
  2699  000780  362A               	rlcf	(___aodiv@quotient+3)^0,f,c
  2700  000782  362B               	rlcf	(___aodiv@quotient+4)^0,f,c
  2701  000784  362C               	rlcf	(___aodiv@quotient+5)^0,f,c
  2702  000786  362D               	rlcf	(___aodiv@quotient+6)^0,f,c
  2703  000788  362E               	rlcf	(___aodiv@quotient+7)^0,f,c
  2704  00078A  501D               	movf	___aodiv@divisor^0,w,c
  2705  00078C  5C15               	subwf	___aodiv@dividend^0,w,c
  2706  00078E  501E               	movf	(___aodiv@divisor+1)^0,w,c
  2707  000790  5816               	subwfb	(___aodiv@dividend+1)^0,w,c
  2708  000792  501F               	movf	(___aodiv@divisor+2)^0,w,c
  2709  000794  5817               	subwfb	(___aodiv@dividend+2)^0,w,c
  2710  000796  5020               	movf	(___aodiv@divisor+3)^0,w,c
  2711  000798  5818               	subwfb	(___aodiv@dividend+3)^0,w,c
  2712  00079A  5021               	movf	(___aodiv@divisor+4)^0,w,c
  2713  00079C  5819               	subwfb	(___aodiv@dividend+4)^0,w,c
  2714  00079E  5022               	movf	(___aodiv@divisor+5)^0,w,c
  2715  0007A0  581A               	subwfb	(___aodiv@dividend+5)^0,w,c
  2716  0007A2  5023               	movf	(___aodiv@divisor+6)^0,w,c
  2717  0007A4  581B               	subwfb	(___aodiv@dividend+6)^0,w,c
  2718  0007A6  5024               	movf	(___aodiv@divisor+7)^0,w,c
  2719  0007A8  581C               	subwfb	(___aodiv@dividend+7)^0,w,c
  2720  0007AA  A0D8               	btfss	status,0,c
  2721  0007AC  EFDA  F003         	goto	u1441
  2722  0007B0  EFDC  F003         	goto	u1440
  2723  0007B4                     u1441:
  2724  0007B4  EFED  F003         	goto	l2200
  2725  0007B8                     u1440:
  2726  0007B8  501D               	movf	___aodiv@divisor^0,w,c
  2727  0007BA  5E15               	subwf	___aodiv@dividend^0,f,c
  2728  0007BC  501E               	movf	(___aodiv@divisor+1)^0,w,c
  2729  0007BE  5A16               	subwfb	(___aodiv@dividend+1)^0,f,c
  2730  0007C0  501F               	movf	(___aodiv@divisor+2)^0,w,c
  2731  0007C2  5A17               	subwfb	(___aodiv@dividend+2)^0,f,c
  2732  0007C4  5020               	movf	(___aodiv@divisor+3)^0,w,c
  2733  0007C6  5A18               	subwfb	(___aodiv@dividend+3)^0,f,c
  2734  0007C8  5021               	movf	(___aodiv@divisor+4)^0,w,c
  2735  0007CA  5A19               	subwfb	(___aodiv@dividend+4)^0,f,c
  2736  0007CC  5022               	movf	(___aodiv@divisor+5)^0,w,c
  2737  0007CE  5A1A               	subwfb	(___aodiv@dividend+5)^0,f,c
  2738  0007D0  5023               	movf	(___aodiv@divisor+6)^0,w,c
  2739  0007D2  5A1B               	subwfb	(___aodiv@dividend+6)^0,f,c
  2740  0007D4  5024               	movf	(___aodiv@divisor+7)^0,w,c
  2741  0007D6  5A1C               	subwfb	(___aodiv@dividend+7)^0,f,c
  2742  0007D8  8027               	bsf	___aodiv@quotient^0,0,c
  2743  0007DA                     l2200:
  2744  0007DA  90D8               	bcf	status,0,c
  2745  0007DC  3224               	rrcf	(___aodiv@divisor+7)^0,f,c
  2746  0007DE  3223               	rrcf	(___aodiv@divisor+6)^0,f,c
  2747  0007E0  3222               	rrcf	(___aodiv@divisor+5)^0,f,c
  2748  0007E2  3221               	rrcf	(___aodiv@divisor+4)^0,f,c
  2749  0007E4  3220               	rrcf	(___aodiv@divisor+3)^0,f,c
  2750  0007E6  321F               	rrcf	(___aodiv@divisor+2)^0,f,c
  2751  0007E8  321E               	rrcf	(___aodiv@divisor+1)^0,f,c
  2752  0007EA  321D               	rrcf	___aodiv@divisor^0,f,c
  2753  0007EC  2E25               	decfsz	___aodiv@counter^0,f,c
  2754  0007EE  EFBC  F003         	goto	l2192
  2755  0007F2                     l2204:
  2756  0007F2  5026               	movf	___aodiv@sign^0,w,c
  2757  0007F4  B4D8               	btfsc	status,2,c
  2758  0007F6  EFFF  F003         	goto	u1451
  2759  0007FA  EF01  F004         	goto	u1450
  2760  0007FE                     u1451:
  2761  0007FE  EF11  F004         	goto	l2208
  2762  000802                     u1450:
  2763  000802  1E2E               	comf	(___aodiv@quotient+7)^0,f,c
  2764  000804  1E2D               	comf	(___aodiv@quotient+6)^0,f,c
  2765  000806  1E2C               	comf	(___aodiv@quotient+5)^0,f,c
  2766  000808  1E2B               	comf	(___aodiv@quotient+4)^0,f,c
  2767  00080A  1E2A               	comf	(___aodiv@quotient+3)^0,f,c
  2768  00080C  1E29               	comf	(___aodiv@quotient+2)^0,f,c
  2769  00080E  1E28               	comf	(___aodiv@quotient+1)^0,f,c
  2770  000810  6C27               	negf	___aodiv@quotient^0,c
  2771  000812  0E00               	movlw	0
  2772  000814  2228               	addwfc	(___aodiv@quotient+1)^0,f,c
  2773  000816  2229               	addwfc	(___aodiv@quotient+2)^0,f,c
  2774  000818  222A               	addwfc	(___aodiv@quotient+3)^0,f,c
  2775  00081A  222B               	addwfc	(___aodiv@quotient+4)^0,f,c
  2776  00081C  222C               	addwfc	(___aodiv@quotient+5)^0,f,c
  2777  00081E  222D               	addwfc	(___aodiv@quotient+6)^0,f,c
  2778  000820  222E               	addwfc	(___aodiv@quotient+7)^0,f,c
  2779  000822                     l2208:
  2780  000822  C027  F015         	movff	___aodiv@quotient,?___aodiv
  2781  000826  C028  F016         	movff	___aodiv@quotient+1,?___aodiv+1
  2782  00082A  C029  F017         	movff	___aodiv@quotient+2,?___aodiv+2
  2783  00082E  C02A  F018         	movff	___aodiv@quotient+3,?___aodiv+3
  2784  000832  C02B  F019         	movff	___aodiv@quotient+4,?___aodiv+4
  2785  000836  C02C  F01A         	movff	___aodiv@quotient+5,?___aodiv+5
  2786  00083A  C02D  F01B         	movff	___aodiv@quotient+6,?___aodiv+6
  2787  00083E  C02E  F01C         	movff	___aodiv@quotient+7,?___aodiv+7
  2788  000842  0012               	return		;funcret
  2789  000844                     __end_of___aodiv:
  2790                           	callstack 0
  2791                           
  2792 ;; *************** function _print *****************
  2793 ;; Defined at:
  2794 ;;		line 135 in file "LiquidCrystal.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;  chr             2   25[COMRAM] PTR unsigned char 
  2797 ;;		 -> STR_4(14), STR_3(8), STR_2(12), print_int@s_num(80), 
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;		None
  2800 ;; Return value:  Size  Location     Type
  2801 ;;                  1    wreg      void 
  2802 ;; Registers used:
  2803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2804 ;; Tracked objects:
  2805 ;;		On entry : 0/0
  2806 ;;		On exit  : 0/0
  2807 ;;		Unchanged: 0/0
  2808 ;; Data sizes:     COMRAM   BANK0   BANK1
  2809 ;;      Params:         2       0       0
  2810 ;;      Locals:         0       0       0
  2811 ;;      Temps:          0       0       0
  2812 ;;      Totals:         2       0       0
  2813 ;;Total ram usage:        2 bytes
  2814 ;; Hardware stack levels used:    1
  2815 ;; Hardware stack levels required when called:   13
  2816 ;; This function calls:
  2817 ;;		_write
  2818 ;; This function is called by:
  2819 ;;		_print_int
  2820 ;;		_main
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           
  2824                           	psect	text15
  2825  000D9A                     __ptext15:
  2826                           	callstack 0
  2827  000D9A                     _print:
  2828                           	callstack 16
  2829  000D9A                     
  2830                           ;LiquidCrystal.c: 135:     void print(unsigned char *chr);LiquidCrystal.c: 136:     {;Li
      +                          quidCrystal.c: 137:         while (*chr != '\0')
  2831  000D9A  EFE3  F006         	goto	l2440
  2832  000D9E                     l2436:
  2833                           
  2834                           ;LiquidCrystal.c: 138:         {;LiquidCrystal.c: 139:             write(*chr);
  2835  000D9E  C01A  FFF6         	movff	print@chr,tblptrl
  2836  000DA2  C01B  FFF7         	movff	print@chr+1,tblptrh
  2837  000DA6  6AF8               	clrf	tblptru,c
  2838  000DA8  0E01               	movlw	(high __ramtop+-1)
  2839  000DAA  64F7               	cpfsgt	tblptrh,c
  2840  000DAC  D003               	bra	u1817
  2841  000DAE  0008               	tblrd		*
  2842  000DB0  50F5               	movf	tablat,w,c
  2843  000DB2  D005               	bra	u1810
  2844  000DB4                     u1817:
  2845  000DB4  CFF6 FFE1          	movff	tblptrl,fsr1l
  2846  000DB8  CFF7 FFE2          	movff	tblptrh,fsr1h
  2847  000DBC  50E7               	movf	indf1,w,c
  2848  000DBE                     u1810:
  2849  000DBE  ECC5  F008         	call	_write
  2850  000DC2                     
  2851                           ;LiquidCrystal.c: 140:             chr++;
  2852  000DC2  4A1A               	infsnz	print@chr^0,f,c
  2853  000DC4  2A1B               	incf	(print@chr+1)^0,f,c
  2854  000DC6                     l2440:
  2855                           
  2856                           ;LiquidCrystal.c: 137:         while (*chr != '\0')
  2857  000DC6  C01A  FFF6         	movff	print@chr,tblptrl
  2858  000DCA  C01B  FFF7         	movff	print@chr+1,tblptrh
  2859  000DCE  6AF8               	clrf	tblptru,c
  2860  000DD0  0E01               	movlw	(high __ramtop+-1)
  2861  000DD2  64F7               	cpfsgt	tblptrh,c
  2862  000DD4  D003               	bra	u1827
  2863  000DD6  0008               	tblrd		*
  2864  000DD8  50F5               	movf	tablat,w,c
  2865  000DDA  D005               	bra	u1820
  2866  000DDC                     u1827:
  2867  000DDC  CFF6 FFE1          	movff	tblptrl,fsr1l
  2868  000DE0  CFF7 FFE2          	movff	tblptrh,fsr1h
  2869  000DE4  50E7               	movf	indf1,w,c
  2870  000DE6                     u1820:
  2871  000DE6  0900               	iorlw	0
  2872  000DE8  A4D8               	btfss	status,2,c
  2873  000DEA  EFF9  F006         	goto	u1831
  2874  000DEE  EFFB  F006         	goto	u1830
  2875  000DF2                     u1831:
  2876  000DF2  EFCF  F006         	goto	l2436
  2877  000DF6                     u1830:
  2878  000DF6  0012               	return		;funcret
  2879  000DF8                     __end_of_print:
  2880                           	callstack 0
  2881                           
  2882 ;; *************** function _write *****************
  2883 ;; Defined at:
  2884 ;;		line 125 in file "LiquidCrystal.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;  chr             1    wreg     unsigned char 
  2887 ;; Auto vars:     Size  Location     Type
  2888 ;;  chr             1   24[COMRAM] unsigned char 
  2889 ;; Return value:  Size  Location     Type
  2890 ;;                  1    wreg      void 
  2891 ;; Registers used:
  2892 ;;		wreg, fsr2l, fsr2h, status,2, cstack
  2893 ;; Tracked objects:
  2894 ;;		On entry : 0/0
  2895 ;;		On exit  : 0/0
  2896 ;;		Unchanged: 0/0
  2897 ;; Data sizes:     COMRAM   BANK0   BANK1
  2898 ;;      Params:         0       0       0
  2899 ;;      Locals:         1       0       0
  2900 ;;      Temps:          0       0       0
  2901 ;;      Totals:         1       0       0
  2902 ;;Total ram usage:        1 bytes
  2903 ;; Hardware stack levels used:    1
  2904 ;; Hardware stack levels required when called:   12
  2905 ;; This function calls:
  2906 ;;		_sendData
  2907 ;; This function is called by:
  2908 ;;		_print
  2909 ;; This function uses a non-reentrant model
  2910 ;;
  2911                           
  2912                           	psect	text16
  2913  00118A                     __ptext16:
  2914                           	callstack 0
  2915  00118A                     _write:
  2916                           	callstack 16
  2917                           
  2918                           ;incstack = 0
  2919                           ;write@chr stored from wreg
  2920  00118A  6E19               	movwf	write@chr^0,c
  2921  00118C                     
  2922                           ;LiquidCrystal.c: 125:     void write(unsigned char chr);LiquidCrystal.c: 126:     {;Liq
      +                          uidCrystal.c: 127:         sendData(chr);
  2923  00118C  5019               	movf	write@chr^0,w,c
  2924  00118E  ECAA  F008         	call	_sendData
  2925  001192  0012               	return		;funcret
  2926  001194                     __end_of_write:
  2927                           	callstack 0
  2928                           
  2929 ;; *************** function _sendData *****************
  2930 ;; Defined at:
  2931 ;;		line 417 in file "LiquidCrystal.c"
  2932 ;; Parameters:    Size  Location     Type
  2933 ;;  value           1    wreg     unsigned char 
  2934 ;; Auto vars:     Size  Location     Type
  2935 ;;  value           1   23[COMRAM] unsigned char 
  2936 ;; Return value:  Size  Location     Type
  2937 ;;                  1    wreg      void 
  2938 ;; Registers used:
  2939 ;;		wreg, fsr2l, fsr2h, status,2, cstack
  2940 ;; Tracked objects:
  2941 ;;		On entry : 0/0
  2942 ;;		On exit  : 0/0
  2943 ;;		Unchanged: 0/0
  2944 ;; Data sizes:     COMRAM   BANK0   BANK1
  2945 ;;      Params:         0       0       0
  2946 ;;      Locals:         1       0       0
  2947 ;;      Temps:          0       0       0
  2948 ;;      Totals:         1       0       0
  2949 ;;Total ram usage:        1 bytes
  2950 ;; Hardware stack levels used:    1
  2951 ;; Hardware stack levels required when called:   11
  2952 ;; This function calls:
  2953 ;;		_send
  2954 ;; This function is called by:
  2955 ;;		_write
  2956 ;; This function uses a non-reentrant model
  2957 ;;
  2958                           
  2959                           	psect	text17
  2960  001154                     __ptext17:
  2961                           	callstack 0
  2962  001154                     _sendData:
  2963                           	callstack 16
  2964                           
  2965                           ;incstack = 0
  2966                           ;sendData@value stored from wreg
  2967  001154  6E18               	movwf	sendData@value^0,c
  2968  001156                     
  2969                           ;LiquidCrystal.c: 417:     void sendData(unsigned char value);LiquidCrystal.c: 418:     
      +                          {;LiquidCrystal.c: 419:         send(value, 1);
  2970  001156  0E01               	movlw	1
  2971  001158  6E16               	movwf	send@mode^0,c
  2972  00115A  5018               	movf	sendData@value^0,w,c
  2973  00115C  EC54  F007         	call	_send
  2974  001160  0012               	return		;funcret
  2975  001162                     __end_of_sendData:
  2976                           	callstack 0
  2977                           
  2978 ;; *************** function _pin_setup *****************
  2979 ;; Defined at:
  2980 ;;		line 33 in file "LiquidCrystal.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;  dp              2   20[COMRAM] PTR volatile struct .
  2983 ;;		 -> PORTA(1), 
  2984 ;;  sp              2   22[COMRAM] PTR volatile struct .
  2985 ;;		 -> PORTD(1), 
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;		None
  2988 ;; Return value:  Size  Location     Type
  2989 ;;                  1    wreg      void 
  2990 ;; Registers used:
  2991 ;;		wreg, status,2, status,0
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/0
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMRAM   BANK0   BANK1
  2997 ;;      Params:         4       0       0
  2998 ;;      Locals:         0       0       0
  2999 ;;      Temps:          0       0       0
  3000 ;;      Totals:         4       0       0
  3001 ;;Total ram usage:        4 bytes
  3002 ;; Hardware stack levels used:    1
  3003 ;; Hardware stack levels required when called:    8
  3004 ;; This function calls:
  3005 ;;		Nothing
  3006 ;; This function is called by:
  3007 ;;		_main
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           
  3011                           	psect	text18
  3012  001122                     __ptext18:
  3013                           	callstack 0
  3014  001122                     _pin_setup:
  3015                           	callstack 22
  3016  001122                     
  3017                           ;LiquidCrystal.c: 33:     void pin_setup(volatile PORTx_t *dp, volatile PORTx_t *sp);Liq
      +                          uidCrystal.c: 34:     {;LiquidCrystal.c: 36:         dataPORT = dp;
  3018  001122  C015  F0B0         	movff	pin_setup@dp,_dataPORT
  3019  001126  C016  F0B1         	movff	pin_setup@dp+1,_dataPORT+1
  3020                           
  3021                           ;LiquidCrystal.c: 39:         signalPORT = sp;
  3022  00112A  C017  F068         	movff	pin_setup@sp,_signalPORT
  3023  00112E  C018  F069         	movff	pin_setup@sp+1,_signalPORT+1
  3024  001132  0012               	return		;funcret
  3025  001134                     __end_of_pin_setup:
  3026                           	callstack 0
  3027                           
  3028 ;; *************** function _home *****************
  3029 ;; Defined at:
  3030 ;;		line 219 in file "LiquidCrystal.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;		None
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;		None
  3035 ;; Return value:  Size  Location     Type
  3036 ;;                  1    wreg      void 
  3037 ;; Registers used:
  3038 ;;		wreg, fsr2l, fsr2h, status,2, cstack
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMRAM   BANK0   BANK1
  3044 ;;      Params:         0       0       0
  3045 ;;      Locals:         0       0       0
  3046 ;;      Temps:          0       0       0
  3047 ;;      Totals:         0       0       0
  3048 ;;Total ram usage:        0 bytes
  3049 ;; Hardware stack levels used:    1
  3050 ;; Hardware stack levels required when called:   12
  3051 ;; This function calls:
  3052 ;;		_sendCommand
  3053 ;; This function is called by:
  3054 ;;		_main
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           
  3058                           	psect	text19
  3059  001134                     __ptext19:
  3060                           	callstack 0
  3061  001134                     _home:
  3062                           	callstack 18
  3063  001134                     
  3064                           ;LiquidCrystal.c: 221:         sendCommand(0x02);
  3065  001134  0E02               	movlw	2
  3066  001136  ECB1  F008         	call	_sendCommand
  3067  00113A                     
  3068                           ;LiquidCrystal.c: 222:         _delay((unsigned long)((2)*(1000000/4000.0)));
  3069  00113A  0EA6               	movlw	166
  3070  00113C                     u1957:
  3071  00113C  2EE8               	decfsz	wreg,f,c
  3072  00113E  D7FE               	bra	u1957
  3073  001140  D000               	nop2	
  3074  001142  0012               	return		;funcret
  3075  001144                     __end_of_home:
  3076                           	callstack 0
  3077                           
  3078 ;; *************** function _begin *****************
  3079 ;; Defined at:
  3080 ;;		line 55 in file "LiquidCrystal.c"
  3081 ;; Parameters:    Size  Location     Type
  3082 ;;  cols            1    wreg     unsigned char 
  3083 ;;  lines           1   24[COMRAM] unsigned char 
  3084 ;;  dotsize         1   25[COMRAM] unsigned char 
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;  cols            1   27[COMRAM] unsigned char 
  3087 ;; Return value:  Size  Location     Type
  3088 ;;                  1    wreg      void 
  3089 ;; Registers used:
  3090 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3091 ;; Tracked objects:
  3092 ;;		On entry : 0/0
  3093 ;;		On exit  : 0/0
  3094 ;;		Unchanged: 0/0
  3095 ;; Data sizes:     COMRAM   BANK0   BANK1
  3096 ;;      Params:         2       0       0
  3097 ;;      Locals:         1       0       0
  3098 ;;      Temps:          1       0       0
  3099 ;;      Totals:         4       0       0
  3100 ;;Total ram usage:        4 bytes
  3101 ;; Hardware stack levels used:    1
  3102 ;; Hardware stack levels required when called:   13
  3103 ;; This function calls:
  3104 ;;		_clear
  3105 ;;		_displayON
  3106 ;;		_sendCommand
  3107 ;;		_setRowOffsets
  3108 ;; This function is called by:
  3109 ;;		_main
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113                           	psect	text20
  3114  000C0C                     __ptext20:
  3115                           	callstack 0
  3116  000C0C                     _begin:
  3117                           	callstack 17
  3118                           
  3119                           ;incstack = 0
  3120                           ;begin@cols stored from wreg
  3121  000C0C  6E1C               	movwf	begin@cols^0,c
  3122  000C0E                     
  3123                           ;LiquidCrystal.c: 55:     void begin(unsigned char cols, unsigned char lines, unsigned c
      +                          har dotsize);LiquidCrystal.c: 56:     {;LiquidCrystal.c: 60:         _displayfunction = 
      +                          0x10 | 0x00 | 0x00;
  3124  000C0E  0E10               	movlw	16
  3125  000C10  6E6A               	movwf	__displayfunction^0,c
  3126  000C12                     
  3127                           ;LiquidCrystal.c: 62:          if (lines > 1)
  3128  000C12  0E01               	movlw	1
  3129  000C14  6419               	cpfsgt	begin@lines^0,c
  3130  000C16  EF0F  F006         	goto	u1841
  3131  000C1A  EF11  F006         	goto	u1840
  3132  000C1E                     u1841:
  3133  000C1E  EF12  F006         	goto	l2462
  3134  000C22                     u1840:
  3135  000C22                     
  3136                           ;LiquidCrystal.c: 63:         {;LiquidCrystal.c: 64:             _displayfunction |= 0x0
      +                          8;
  3137  000C22  866A               	bsf	__displayfunction^0,3,c
  3138  000C24                     l2462:
  3139                           
  3140                           ;LiquidCrystal.c: 67:         _numlines = lines;
  3141  000C24  C019  F065         	movff	begin@lines,__numlines
  3142  000C28                     
  3143                           ;LiquidCrystal.c: 74:         setRowOffsets(0x00, 0x40, 0x00 + cols, 0x40 + cols);
  3144  000C28  0E40               	movlw	64
  3145  000C2A  6E15               	movwf	setRowOffsets@row1^0,c
  3146  000C2C  C01C  F016         	movff	begin@cols,setRowOffsets@row2
  3147  000C30  501C               	movf	begin@cols^0,w,c
  3148  000C32  0F40               	addlw	64
  3149  000C34  6E17               	movwf	setRowOffsets@row3^0,c
  3150  000C36  0E00               	movlw	0
  3151  000C38  EC73  F008         	call	_setRowOffsets
  3152  000C3C                     
  3153                           ;LiquidCrystal.c: 76:         if (dotsize != 0x00)
  3154  000C3C  501A               	movf	begin@dotsize^0,w,c
  3155  000C3E  B4D8               	btfsc	status,2,c
  3156  000C40  EF24  F006         	goto	u1851
  3157  000C44  EF26  F006         	goto	u1850
  3158  000C48                     u1851:
  3159  000C48  EF27  F006         	goto	l2470
  3160  000C4C                     u1850:
  3161  000C4C                     
  3162                           ;LiquidCrystal.c: 77:             _displayfunction |= 0x04;
  3163  000C4C  846A               	bsf	__displayfunction^0,2,c
  3164  000C4E                     l2470:
  3165                           
  3166                           ;LiquidCrystal.c: 82:         _delay((unsigned long)((41)*(1000000/4000.0)));
  3167  000C4E  0E0E               	movlw	14
  3168  000C50  6E1B               	movwf	??_begin^0,c
  3169  000C52  0E4E               	movlw	78
  3170  000C54                     u1967:
  3171  000C54  2EE8               	decfsz	wreg,f,c
  3172  000C56  D7FE               	bra	u1967
  3173  000C58  2E1B               	decfsz	??_begin^0,f,c
  3174  000C5A  D7FC               	bra	u1967
  3175  000C5C  D000               	nop2	
  3176  000C5E                     
  3177                           ;LiquidCrystal.c: 83:         sendCommand(0x20 | _displayfunction);
  3178  000C5E  506A               	movf	__displayfunction^0,w,c
  3179  000C60  0920               	iorlw	32
  3180  000C62  ECB1  F008         	call	_sendCommand
  3181  000C66                     
  3182                           ;LiquidCrystal.c: 84:         _delay((unsigned long)((5)*(1000000/4000.0)));
  3183  000C66  0EFA               	movlw	250
  3184  000C68                     u1977:
  3185  000C68  D000               	nop2	
  3186  000C6A  2EE8               	decfsz	wreg,f,c
  3187  000C6C  D7FD               	bra	u1977
  3188  000C6E                     
  3189                           ;LiquidCrystal.c: 85:         sendCommand(0x20 | _displayfunction);
  3190  000C6E  506A               	movf	__displayfunction^0,w,c
  3191  000C70  0920               	iorlw	32
  3192  000C72  ECB1  F008         	call	_sendCommand
  3193  000C76                     
  3194                           ;LiquidCrystal.c: 86:         _delay((unsigned long)((120)*(1000000/4000000.0)));
  3195  000C76  0E0A               	movlw	10
  3196  000C78                     u1987:
  3197  000C78  2EE8               	decfsz	wreg,f,c
  3198  000C7A  D7FE               	bra	u1987
  3199  000C7C                     
  3200                           ;LiquidCrystal.c: 87:         sendCommand(0x20 | _displayfunction);
  3201  000C7C  506A               	movf	__displayfunction^0,w,c
  3202  000C7E  0920               	iorlw	32
  3203  000C80  ECB1  F008         	call	_sendCommand
  3204  000C84                     
  3205                           ;LiquidCrystal.c: 105:         sendCommand(0x20 | _displayfunction);
  3206  000C84  506A               	movf	__displayfunction^0,w,c
  3207  000C86  0920               	iorlw	32
  3208  000C88  ECB1  F008         	call	_sendCommand
  3209  000C8C                     
  3210                           ;LiquidCrystal.c: 109:         _displaycontrol = 0x04 | 0x00 | 0x00;
  3211  000C8C  0E04               	movlw	4
  3212  000C8E  6E67               	movwf	__displaycontrol^0,c
  3213  000C90                     
  3214                           ;LiquidCrystal.c: 110:         displayON();
  3215  000C90  ECBF  F008         	call	_displayON	;wreg free
  3216                           
  3217                           ;LiquidCrystal.c: 113:         clear();
  3218  000C94  ECA2  F008         	call	_clear	;wreg free
  3219  000C98                     
  3220                           ;LiquidCrystal.c: 116:         _displaymode = 0x02 | 0x00;
  3221  000C98  0E02               	movlw	2
  3222  000C9A  6E66               	movwf	__displaymode^0,c
  3223  000C9C                     
  3224                           ;LiquidCrystal.c: 117:         sendCommand(0x04 | _displaymode);
  3225  000C9C  5066               	movf	__displaymode^0,w,c
  3226  000C9E  0904               	iorlw	4
  3227  000CA0  ECB1  F008         	call	_sendCommand
  3228  000CA4  0012               	return		;funcret
  3229  000CA6                     __end_of_begin:
  3230                           	callstack 0
  3231                           
  3232 ;; *************** function _setRowOffsets *****************
  3233 ;; Defined at:
  3234 ;;		line 241 in file "LiquidCrystal.c"
  3235 ;; Parameters:    Size  Location     Type
  3236 ;;  row0            1    wreg     unsigned char 
  3237 ;;  row1            1   20[COMRAM] unsigned char 
  3238 ;;  row2            1   21[COMRAM] unsigned char 
  3239 ;;  row3            1   22[COMRAM] unsigned char 
  3240 ;; Auto vars:     Size  Location     Type
  3241 ;;  row0            1   23[COMRAM] unsigned char 
  3242 ;; Return value:  Size  Location     Type
  3243 ;;                  1    wreg      void 
  3244 ;; Registers used:
  3245 ;;		wreg
  3246 ;; Tracked objects:
  3247 ;;		On entry : 0/0
  3248 ;;		On exit  : 0/0
  3249 ;;		Unchanged: 0/0
  3250 ;; Data sizes:     COMRAM   BANK0   BANK1
  3251 ;;      Params:         3       0       0
  3252 ;;      Locals:         1       0       0
  3253 ;;      Temps:          0       0       0
  3254 ;;      Totals:         4       0       0
  3255 ;;Total ram usage:        4 bytes
  3256 ;; Hardware stack levels used:    1
  3257 ;; Hardware stack levels required when called:    8
  3258 ;; This function calls:
  3259 ;;		Nothing
  3260 ;; This function is called by:
  3261 ;;		_begin
  3262 ;; This function uses a non-reentrant model
  3263 ;;
  3264                           
  3265                           	psect	text21
  3266  0010E6                     __ptext21:
  3267                           	callstack 0
  3268  0010E6                     _setRowOffsets:
  3269                           	callstack 21
  3270                           
  3271                           ;incstack = 0
  3272                           ;setRowOffsets@row0 stored from wreg
  3273  0010E6  6E18               	movwf	setRowOffsets@row0^0,c
  3274  0010E8                     
  3275                           ;LiquidCrystal.c: 241:     void setRowOffsets(unsigned char row0, unsigned char row1, un
      +                          signed char row2, unsigned char row3);LiquidCrystal.c: 242:     {;LiquidCrystal.c: 243: 
      +                                  _rowOffsets[0] = row0;
  3276  0010E8  C018  F0A8         	movff	setRowOffsets@row0,__rowOffsets
  3277  0010EC                     
  3278                           ;LiquidCrystal.c: 244:         _rowOffsets[1] = row1;
  3279  0010EC  C015  F0A9         	movff	setRowOffsets@row1,__rowOffsets+1
  3280  0010F0                     
  3281                           ;LiquidCrystal.c: 245:         _rowOffsets[2] = row2;
  3282  0010F0  C016  F0AA         	movff	setRowOffsets@row2,__rowOffsets+2
  3283  0010F4                     
  3284                           ;LiquidCrystal.c: 246:         _rowOffsets[3] = row3;
  3285  0010F4  C017  F0AB         	movff	setRowOffsets@row3,__rowOffsets+3
  3286  0010F8  0012               	return		;funcret
  3287  0010FA                     __end_of_setRowOffsets:
  3288                           	callstack 0
  3289                           
  3290 ;; *************** function _displayON *****************
  3291 ;; Defined at:
  3292 ;;		line 160 in file "LiquidCrystal.c"
  3293 ;; Parameters:    Size  Location     Type
  3294 ;;		None
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;		None
  3297 ;; Return value:  Size  Location     Type
  3298 ;;                  1    wreg      void 
  3299 ;; Registers used:
  3300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMRAM   BANK0   BANK1
  3306 ;;      Params:         0       0       0
  3307 ;;      Locals:         0       0       0
  3308 ;;      Temps:          0       0       0
  3309 ;;      Totals:         0       0       0
  3310 ;;Total ram usage:        0 bytes
  3311 ;; Hardware stack levels used:    1
  3312 ;; Hardware stack levels required when called:   12
  3313 ;; This function calls:
  3314 ;;		_sendCommand
  3315 ;; This function is called by:
  3316 ;;		_begin
  3317 ;;		_display
  3318 ;; This function uses a non-reentrant model
  3319 ;;
  3320                           
  3321                           	psect	text22
  3322  00117E                     __ptext22:
  3323                           	callstack 0
  3324  00117E                     _displayON:
  3325                           	callstack 17
  3326  00117E                     
  3327                           ;LiquidCrystal.c: 162:         _displaycontrol |= 0x04;
  3328  00117E  8467               	bsf	__displaycontrol^0,2,c
  3329  001180                     
  3330                           ;LiquidCrystal.c: 163:         sendCommand(0x08 | _displaycontrol);
  3331  001180  5067               	movf	__displaycontrol^0,w,c
  3332  001182  0908               	iorlw	8
  3333  001184  ECB1  F008         	call	_sendCommand
  3334  001188  0012               	return		;funcret
  3335  00118A                     __end_of_displayON:
  3336                           	callstack 0
  3337                           
  3338 ;; *************** function _clear *****************
  3339 ;; Defined at:
  3340 ;;		line 207 in file "LiquidCrystal.c"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;		None
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;		None
  3345 ;; Return value:  Size  Location     Type
  3346 ;;                  1    wreg      void 
  3347 ;; Registers used:
  3348 ;;		wreg, fsr2l, fsr2h, status,2, cstack
  3349 ;; Tracked objects:
  3350 ;;		On entry : 0/0
  3351 ;;		On exit  : 0/0
  3352 ;;		Unchanged: 0/0
  3353 ;; Data sizes:     COMRAM   BANK0   BANK1
  3354 ;;      Params:         0       0       0
  3355 ;;      Locals:         0       0       0
  3356 ;;      Temps:          0       0       0
  3357 ;;      Totals:         0       0       0
  3358 ;;Total ram usage:        0 bytes
  3359 ;; Hardware stack levels used:    1
  3360 ;; Hardware stack levels required when called:   12
  3361 ;; This function calls:
  3362 ;;		_sendCommand
  3363 ;; This function is called by:
  3364 ;;		_begin
  3365 ;; This function uses a non-reentrant model
  3366 ;;
  3367                           
  3368                           	psect	text23
  3369  001144                     __ptext23:
  3370                           	callstack 0
  3371  001144                     _clear:
  3372                           	callstack 17
  3373  001144                     
  3374                           ;LiquidCrystal.c: 209:         sendCommand(0x01);
  3375  001144  0E01               	movlw	1
  3376  001146  ECB1  F008         	call	_sendCommand
  3377  00114A                     
  3378                           ;LiquidCrystal.c: 210:         _delay((unsigned long)((2)*(1000000/4000.0)));
  3379  00114A  0EA6               	movlw	166
  3380  00114C                     u1997:
  3381  00114C  2EE8               	decfsz	wreg,f,c
  3382  00114E  D7FE               	bra	u1997
  3383  001150  D000               	nop2	
  3384  001152  0012               	return		;funcret
  3385  001154                     __end_of_clear:
  3386                           	callstack 0
  3387                           
  3388 ;; *************** function _sendCommand *****************
  3389 ;; Defined at:
  3390 ;;		line 431 in file "LiquidCrystal.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;  value           1    wreg     unsigned char 
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;  value           1   23[COMRAM] unsigned char 
  3395 ;; Return value:  Size  Location     Type
  3396 ;;                  1    wreg      void 
  3397 ;; Registers used:
  3398 ;;		wreg, fsr2l, fsr2h, status,2, cstack
  3399 ;; Tracked objects:
  3400 ;;		On entry : 0/0
  3401 ;;		On exit  : 0/0
  3402 ;;		Unchanged: 0/0
  3403 ;; Data sizes:     COMRAM   BANK0   BANK1
  3404 ;;      Params:         0       0       0
  3405 ;;      Locals:         1       0       0
  3406 ;;      Temps:          0       0       0
  3407 ;;      Totals:         1       0       0
  3408 ;;Total ram usage:        1 bytes
  3409 ;; Hardware stack levels used:    1
  3410 ;; Hardware stack levels required when called:   11
  3411 ;; This function calls:
  3412 ;;		_send
  3413 ;; This function is called by:
  3414 ;;		_begin
  3415 ;;		_displayON
  3416 ;;		_clear
  3417 ;;		_home
  3418 ;;		_setCursor
  3419 ;;		_displayOFF
  3420 ;;		_cursor
  3421 ;;		_noCursor
  3422 ;;		_blink
  3423 ;;		_noBlink
  3424 ;;		_scrollDisplayLeft
  3425 ;;		_scrollDisplayRight
  3426 ;;		_leftToRight
  3427 ;;		_rightToLeft
  3428 ;;		_autoscroll
  3429 ;;		_noAutoscroll
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           
  3433                           	psect	text24
  3434  001162                     __ptext24:
  3435                           	callstack 0
  3436  001162                     _sendCommand:
  3437                           	callstack 18
  3438                           
  3439                           ;incstack = 0
  3440                           ;sendCommand@value stored from wreg
  3441  001162  6E18               	movwf	sendCommand@value^0,c
  3442  001164                     
  3443                           ;LiquidCrystal.c: 431:     void sendCommand(unsigned char value);LiquidCrystal.c: 432:  
      +                             {;LiquidCrystal.c: 433:         send(value, 0);
  3444  001164  0E00               	movlw	0
  3445  001166  6E16               	movwf	send@mode^0,c
  3446  001168  5018               	movf	sendCommand@value^0,w,c
  3447  00116A  EC54  F007         	call	_send
  3448  00116E  0012               	return		;funcret
  3449  001170                     __end_of_sendCommand:
  3450                           	callstack 0
  3451                           
  3452 ;; *************** function _send *****************
  3453 ;; Defined at:
  3454 ;;		line 390 in file "LiquidCrystal.c"
  3455 ;; Parameters:    Size  Location     Type
  3456 ;;  value           1    wreg     unsigned char 
  3457 ;;  mode            1   21[COMRAM] unsigned char 
  3458 ;; Auto vars:     Size  Location     Type
  3459 ;;  value           1   22[COMRAM] unsigned char 
  3460 ;; Return value:  Size  Location     Type
  3461 ;;                  1    wreg      void 
  3462 ;; Registers used:
  3463 ;;		wreg, fsr2l, fsr2h, status,2, cstack
  3464 ;; Tracked objects:
  3465 ;;		On entry : 0/0
  3466 ;;		On exit  : 0/0
  3467 ;;		Unchanged: 0/0
  3468 ;; Data sizes:     COMRAM   BANK0   BANK1
  3469 ;;      Params:         1       0       0
  3470 ;;      Locals:         1       0       0
  3471 ;;      Temps:          0       0       0
  3472 ;;      Totals:         2       0       0
  3473 ;;Total ram usage:        2 bytes
  3474 ;; Hardware stack levels used:    1
  3475 ;; Hardware stack levels required when called:   10
  3476 ;; This function calls:
  3477 ;;		_write8bits
  3478 ;; This function is called by:
  3479 ;;		_sendData
  3480 ;;		_sendCommand
  3481 ;; This function uses a non-reentrant model
  3482 ;;
  3483                           
  3484                           	psect	text25
  3485  000EA8                     __ptext25:
  3486                           	callstack 0
  3487  000EA8                     _send:
  3488                           	callstack 18
  3489                           
  3490                           ;incstack = 0
  3491                           ;send@value stored from wreg
  3492  000EA8  6E17               	movwf	send@value^0,c
  3493  000EAA                     
  3494                           ;LiquidCrystal.c: 390:     void send(unsigned char value, unsigned char mode);LiquidCrys
      +                          tal.c: 391:     {;LiquidCrystal.c: 392:         if (mode)
  3495  000EAA  5016               	movf	send@mode^0,w,c
  3496  000EAC  B4D8               	btfsc	status,2,c
  3497  000EAE  EF5B  F007         	goto	u1571
  3498  000EB2  EF5D  F007         	goto	u1570
  3499  000EB6                     u1571:
  3500  000EB6  EF64  F007         	goto	l2286
  3501  000EBA                     u1570:
  3502  000EBA                     
  3503                           ;LiquidCrystal.c: 393:             signalPORT->_rs = 1;
  3504  000EBA  C068  FFD9         	movff	_signalPORT,fsr2l
  3505  000EBE  C069  FFDA         	movff	_signalPORT+1,fsr2h
  3506  000EC2  80DF               	bsf	indf2,0,c
  3507  000EC4  EF69  F007         	goto	l109
  3508  000EC8                     l2286:
  3509                           
  3510                           ;LiquidCrystal.c: 395:             signalPORT->_rs = 0;
  3511  000EC8  C068  FFD9         	movff	_signalPORT,fsr2l
  3512  000ECC  C069  FFDA         	movff	_signalPORT+1,fsr2h
  3513  000ED0  90DF               	bcf	indf2,0,c
  3514  000ED2                     l109:
  3515                           
  3516                           ;LiquidCrystal.c: 398:         signalPORT->_rw = 0;
  3517  000ED2  C068  FFD9         	movff	_signalPORT,fsr2l
  3518  000ED6  C069  FFDA         	movff	_signalPORT+1,fsr2h
  3519  000EDA  92DF               	bcf	indf2,1,c
  3520  000EDC                     
  3521                           ;LiquidCrystal.c: 401:         if (_displayfunction & 0x10)
  3522  000EDC  A86A               	btfss	__displayfunction^0,4,c
  3523  000EDE  EF73  F007         	goto	u1581
  3524  000EE2  EF75  F007         	goto	u1580
  3525  000EE6                     u1581:
  3526  000EE6  EF78  F007         	goto	l111
  3527  000EEA                     u1580:
  3528  000EEA                     
  3529                           ;LiquidCrystal.c: 402:         {;LiquidCrystal.c: 403:             write8bits(value);
  3530  000EEA  5017               	movf	send@value^0,w,c
  3531  000EEC  EC7D  F008         	call	_write8bits
  3532  000EF0                     l111:
  3533  000EF0  0012               	return		;funcret
  3534  000EF2                     __end_of_send:
  3535                           	callstack 0
  3536                           
  3537 ;; *************** function _write8bits *****************
  3538 ;; Defined at:
  3539 ;;		line 461 in file "LiquidCrystal.c"
  3540 ;; Parameters:    Size  Location     Type
  3541 ;;  value           1    wreg     unsigned char 
  3542 ;; Auto vars:     Size  Location     Type
  3543 ;;  value           1   20[COMRAM] unsigned char 
  3544 ;; Return value:  Size  Location     Type
  3545 ;;                  1    wreg      void 
  3546 ;; Registers used:
  3547 ;;		wreg, fsr2l, fsr2h, cstack
  3548 ;; Tracked objects:
  3549 ;;		On entry : 0/0
  3550 ;;		On exit  : 0/0
  3551 ;;		Unchanged: 0/0
  3552 ;; Data sizes:     COMRAM   BANK0   BANK1
  3553 ;;      Params:         0       0       0
  3554 ;;      Locals:         1       0       0
  3555 ;;      Temps:          0       0       0
  3556 ;;      Totals:         1       0       0
  3557 ;;Total ram usage:        1 bytes
  3558 ;; Hardware stack levels used:    1
  3559 ;; Hardware stack levels required when called:    9
  3560 ;; This function calls:
  3561 ;;		_pulseEnable
  3562 ;; This function is called by:
  3563 ;;		_send
  3564 ;; This function uses a non-reentrant model
  3565 ;;
  3566                           
  3567                           	psect	text26
  3568  0010FA                     __ptext26:
  3569                           	callstack 0
  3570  0010FA                     _write8bits:
  3571                           	callstack 18
  3572                           
  3573                           ;incstack = 0
  3574                           ;write8bits@value stored from wreg
  3575  0010FA  6E15               	movwf	write8bits@value^0,c
  3576  0010FC                     
  3577                           ;LiquidCrystal.c: 461:     void write8bits(unsigned char value);LiquidCrystal.c: 462:   
      +                            {;LiquidCrystal.c: 463:         dataPORT->_data = value;
  3578  0010FC  C0B0  FFD9         	movff	_dataPORT,fsr2l
  3579  001100  C0B1  FFDA         	movff	_dataPORT+1,fsr2h
  3580  001104  C015  FFDF         	movff	write8bits@value,indf2
  3581  001108                     
  3582                           ;LiquidCrystal.c: 465:         pulseEnable();
  3583  001108  EC4B  F008         	call	_pulseEnable	;wreg free
  3584  00110C  0012               	return		;funcret
  3585  00110E                     __end_of_write8bits:
  3586                           	callstack 0
  3587                           
  3588 ;; *************** function _pulseEnable *****************
  3589 ;; Defined at:
  3590 ;;		line 444 in file "LiquidCrystal.c"
  3591 ;; Parameters:    Size  Location     Type
  3592 ;;		None
  3593 ;; Auto vars:     Size  Location     Type
  3594 ;;		None
  3595 ;; Return value:  Size  Location     Type
  3596 ;;                  1    wreg      void 
  3597 ;; Registers used:
  3598 ;;		wreg, fsr2l, fsr2h
  3599 ;; Tracked objects:
  3600 ;;		On entry : 0/0
  3601 ;;		On exit  : 0/0
  3602 ;;		Unchanged: 0/0
  3603 ;; Data sizes:     COMRAM   BANK0   BANK1
  3604 ;;      Params:         0       0       0
  3605 ;;      Locals:         0       0       0
  3606 ;;      Temps:          0       0       0
  3607 ;;      Totals:         0       0       0
  3608 ;;Total ram usage:        0 bytes
  3609 ;; Hardware stack levels used:    1
  3610 ;; Hardware stack levels required when called:    8
  3611 ;; This function calls:
  3612 ;;		Nothing
  3613 ;; This function is called by:
  3614 ;;		_write8bits
  3615 ;; This function uses a non-reentrant model
  3616 ;;
  3617                           
  3618                           	psect	text27
  3619  001096                     __ptext27:
  3620                           	callstack 0
  3621  001096                     _pulseEnable:
  3622                           	callstack 18
  3623  001096                     
  3624                           ;LiquidCrystal.c: 446:         signalPORT->_enable = 0;
  3625  001096  C068  FFD9         	movff	_signalPORT,fsr2l
  3626  00109A  C069  FFDA         	movff	_signalPORT+1,fsr2h
  3627  00109E  94DF               	bcf	indf2,2,c
  3628  0010A0                     
  3629                           ;LiquidCrystal.c: 447:         _delay((unsigned long)((1)*(1000000/4000000.0)));
  3630                           ;LiquidCrystal.c: 448:         signalPORT->_enable = 1;
  3631  0010A0  C068  FFD9         	movff	_signalPORT,fsr2l
  3632  0010A4  C069  FFDA         	movff	_signalPORT+1,fsr2h
  3633  0010A8  84DF               	bsf	indf2,2,c
  3634  0010AA                     
  3635                           ;LiquidCrystal.c: 449:         _delay((unsigned long)((1)*(1000000/4000000.0)));
  3636                           ;LiquidCrystal.c: 450:         signalPORT->_enable = 0;
  3637  0010AA  C068  FFD9         	movff	_signalPORT,fsr2l
  3638  0010AE  C069  FFDA         	movff	_signalPORT+1,fsr2h
  3639  0010B2  94DF               	bcf	indf2,2,c
  3640  0010B4                     
  3641                           ;LiquidCrystal.c: 451:         _delay((unsigned long)((100)*(1000000/4000000.0)));
  3642  0010B4  0E08               	movlw	8
  3643  0010B6                     u2007:
  3644  0010B6  2EE8               	decfsz	wreg,f,c
  3645  0010B8  D7FE               	bra	u2007
  3646  0010BA  F000               	nop	
  3647  0010BC  0012               	return		;funcret
  3648  0010BE                     __end_of_pulseEnable:
  3649                           	callstack 0
  3650                           
  3651 ;; *************** function _adc_sample *****************
  3652 ;; Defined at:
  3653 ;;		line 134 in file "emerstop2.c"
  3654 ;; Parameters:    Size  Location     Type
  3655 ;;		None
  3656 ;; Auto vars:     Size  Location     Type
  3657 ;;		None
  3658 ;; Return value:  Size  Location     Type
  3659 ;;                  1    wreg      void 
  3660 ;; Registers used:
  3661 ;;		wreg, status,2, status,0
  3662 ;; Tracked objects:
  3663 ;;		On entry : 0/0
  3664 ;;		On exit  : 0/0
  3665 ;;		Unchanged: 0/0
  3666 ;; Data sizes:     COMRAM   BANK0   BANK1
  3667 ;;      Params:         0       0       0
  3668 ;;      Locals:         0       0       0
  3669 ;;      Temps:          5       0       0
  3670 ;;      Totals:         5       0       0
  3671 ;;Total ram usage:        5 bytes
  3672 ;; Hardware stack levels used:    1
  3673 ;; Hardware stack levels required when called:    7
  3674 ;; This function calls:
  3675 ;;		Nothing
  3676 ;; This function is called by:
  3677 ;;		Interrupt level 1
  3678 ;; This function uses a non-reentrant model
  3679 ;;
  3680                           
  3681                           	psect	intcodelo
  3682  000018                     __pintcodelo:
  3683                           	callstack 0
  3684  000018                     _adc_sample:
  3685                           	callstack 14
  3686                           
  3687                           ;incstack = 0
  3688  000018  806B               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  3689  00001A  CFD8 F012          	movff	status,??_adc_sample+2
  3690  00001E  CFE8 F013          	movff	wreg,??_adc_sample+3
  3691  000022  CFE0 F014          	movff	bsr,??_adc_sample+4
  3692  000026                     
  3693                           ;emerstop2.c: 137:     if (PIR1bits.ADIF && PIE1bits.ADIE)
  3694  000026  AC9E               	btfss	158,6,c	;volatile
  3695  000028  EF18  F000         	goto	i1u58_21
  3696  00002C  EF1A  F000         	goto	i1u58_20
  3697  000030                     i1u58_21:
  3698  000030  EF5C  F000         	goto	i1l1560
  3699  000034                     i1u58_20:
  3700  000034  AC9D               	btfss	157,6,c	;volatile
  3701  000036  EF1F  F000         	goto	i1u59_21
  3702  00003A  EF21  F000         	goto	i1u59_20
  3703  00003E                     i1u59_21:
  3704  00003E  EF5C  F000         	goto	i1l1560
  3705  000042                     i1u59_20:
  3706  000042                     
  3707                           ;emerstop2.c: 138:     {;emerstop2.c: 140:         PIR1bits.ADIF = 0;
  3708  000042  9C9E               	bcf	158,6,c	;volatile
  3709  000044                     
  3710                           ;emerstop2.c: 142:         if (ADCON0bits.CHS == 5)
  3711  000044  30C2               	rrcf	194,w,c	;volatile
  3712  000046  32E8               	rrcf	wreg,f,c
  3713  000048  0B0F               	andlw	15
  3714  00004A  0A05               	xorlw	5
  3715  00004C  A4D8               	btfss	status,2,c
  3716  00004E  EF2B  F000         	goto	i1u60_21
  3717  000052  EF2D  F000         	goto	i1u60_20
  3718  000056                     i1u60_21:
  3719  000056  EF3E  F000         	goto	i1l1552
  3720  00005A                     i1u60_20:
  3721  00005A                     
  3722                           ;emerstop2.c: 143:         {;emerstop2.c: 144:             Pot1 = (ADRESH << 8) | ADRESL
      +                          ;
  3723  00005A  50C3               	movf	195,w,c	;volatile
  3724  00005C  CFC4 F010          	movff	4036,??_adc_sample	;volatile
  3725  000060  6A11               	clrf	(??_adc_sample+1)^0,c
  3726  000062  C010  F011         	movff	??_adc_sample,??_adc_sample+1
  3727  000066  6A10               	clrf	??_adc_sample^0,c
  3728  000068  1010               	iorwf	??_adc_sample^0,w,c
  3729  00006A  6E62               	movwf	_Pot1^0,c	;volatile
  3730  00006C  5011               	movf	(??_adc_sample+1)^0,w,c
  3731  00006E  6E63               	movwf	(_Pot1+1)^0,c	;volatile
  3732  000070                     
  3733                           ;emerstop2.c: 145:             ADCON0bits.CHS = 6;
  3734  000070  50C2               	movf	194,w,c	;volatile
  3735  000072  0BC3               	andlw	-61
  3736  000074  0918               	iorlw	24
  3737  000076  6EC2               	movwf	194,c	;volatile
  3738                           
  3739                           ;emerstop2.c: 146:         }
  3740  000078  EF5C  F000         	goto	i1l1560
  3741  00007C                     i1l1552:
  3742  00007C  30C2               	rrcf	194,w,c	;volatile
  3743  00007E  32E8               	rrcf	wreg,f,c
  3744  000080  0B0F               	andlw	15
  3745  000082  0A06               	xorlw	6
  3746  000084  A4D8               	btfss	status,2,c
  3747  000086  EF47  F000         	goto	i1u61_21
  3748  00008A  EF49  F000         	goto	i1u61_20
  3749  00008E                     i1u61_21:
  3750  00008E  EF5C  F000         	goto	i1l1560
  3751  000092                     i1u61_20:
  3752  000092                     
  3753                           ;emerstop2.c: 148:         {;emerstop2.c: 149:             Pot2 = (ADRESH << 8) | ADRESL
      +                          ;
  3754  000092  50C3               	movf	195,w,c	;volatile
  3755  000094  CFC4 F010          	movff	4036,??_adc_sample	;volatile
  3756  000098  6A11               	clrf	(??_adc_sample+1)^0,c
  3757  00009A  C010  F011         	movff	??_adc_sample,??_adc_sample+1
  3758  00009E  6A10               	clrf	??_adc_sample^0,c
  3759  0000A0  1010               	iorwf	??_adc_sample^0,w,c
  3760  0000A2  6E60               	movwf	_Pot2^0,c	;volatile
  3761  0000A4  5011               	movf	(??_adc_sample+1)^0,w,c
  3762  0000A6  6E61               	movwf	(_Pot2+1)^0,c	;volatile
  3763  0000A8                     
  3764                           ;emerstop2.c: 150:             ADCON0bits.CHS = 5;
  3765  0000A8  50C2               	movf	194,w,c	;volatile
  3766  0000AA  0BC3               	andlw	-61
  3767  0000AC  0914               	iorlw	20
  3768  0000AE  6EC2               	movwf	194,c	;volatile
  3769  0000B0                     
  3770                           ;emerstop2.c: 151:             delay = Pot2;
  3771  0000B0  C060  F05C         	movff	_Pot2,_delay	;volatile
  3772  0000B4  C061  F05D         	movff	_Pot2+1,_delay+1	;volatile
  3773  0000B8                     i1l1560:
  3774                           
  3775                           ;emerstop2.c: 154:         if (INTCONbits.TMR0IE && INTCONbits.TMR0IF)
  3776  0000B8  AAF2               	btfss	242,5,c	;volatile
  3777  0000BA  EF61  F000         	goto	i1u62_21
  3778  0000BE  EF63  F000         	goto	i1u62_20
  3779  0000C2                     i1u62_21:
  3780  0000C2  EFB1  F000         	goto	i1l229
  3781  0000C6                     i1u62_20:
  3782  0000C6  A4F2               	btfss	242,2,c	;volatile
  3783  0000C8  EF68  F000         	goto	i1u63_21
  3784  0000CC  EF6A  F000         	goto	i1u63_20
  3785  0000D0                     i1u63_21:
  3786  0000D0  EFB1  F000         	goto	i1l229
  3787  0000D4                     i1u63_20:
  3788  0000D4                     
  3789                           ;emerstop2.c: 155:         {;emerstop2.c: 156:             INTCONbits.TMR0IF = 0;
  3790  0000D4  94F2               	bcf	242,2,c	;volatile
  3791  0000D6                     
  3792                           ;emerstop2.c: 157:             TMR0 = 64287;
  3793  0000D6  0EFB               	movlw	251
  3794  0000D8  6ED7               	movwf	215,c	;volatile
  3795  0000DA  0E1F               	movlw	31
  3796  0000DC  6ED6               	movwf	214,c	;volatile
  3797  0000DE                     
  3798                           ;emerstop2.c: 158:             CCPR2L = waitvalue >> 2;
  3799  0000DE  C05A  F010         	movff	_waitvalue,??_adc_sample	;volatile
  3800  0000E2  C05B  F011         	movff	_waitvalue+1,??_adc_sample+1	;volatile
  3801  0000E6  3411               	rlcf	(??_adc_sample+1)^0,w,c
  3802  0000E8  3211               	rrcf	(??_adc_sample+1)^0,f,c
  3803  0000EA  3210               	rrcf	??_adc_sample^0,f,c
  3804  0000EC  3411               	rlcf	(??_adc_sample+1)^0,w,c
  3805  0000EE  3211               	rrcf	(??_adc_sample+1)^0,f,c
  3806  0000F0  3210               	rrcf	??_adc_sample^0,f,c
  3807  0000F2  5010               	movf	??_adc_sample^0,w,c
  3808  0000F4  6EBB               	movwf	187,c	;volatile
  3809  0000F6                     
  3810                           ;emerstop2.c: 159:             CCP2CONbits.DC2B = waitvalue & 0x03;
  3811  0000F6  C05A  F010         	movff	_waitvalue,??_adc_sample	;volatile
  3812  0000FA  0E03               	movlw	3
  3813  0000FC  1610               	andwf	??_adc_sample^0,f,c
  3814  0000FE  3A10               	swapf	??_adc_sample^0,f,c
  3815  000100  50BA               	movf	186,w,c	;volatile
  3816  000102  1810               	xorwf	??_adc_sample^0,w,c
  3817  000104  0BCF               	andlw	-49
  3818  000106  1810               	xorwf	??_adc_sample^0,w,c
  3819  000108  6EBA               	movwf	186,c	;volatile
  3820  00010A                     
  3821                           ;emerstop2.c: 160:             counter += 1;
  3822  00010A  4A5E               	infsnz	_counter^0,f,c	;volatile
  3823  00010C  2A5F               	incf	(_counter+1)^0,f,c	;volatile
  3824  00010E                     
  3825                           ;emerstop2.c: 161:             if (waitvalue >= Pot1){
  3826  00010E  5062               	movf	_Pot1^0,w,c	;volatile
  3827  000110  5C5A               	subwf	_waitvalue^0,w,c	;volatile
  3828  000112  505B               	movf	(_waitvalue+1)^0,w,c	;volatile
  3829  000114  0A80               	xorlw	128
  3830  000116  6E10               	movwf	??_adc_sample^0,c
  3831  000118  5063               	movf	(_Pot1+1)^0,w,c	;volatile
  3832  00011A  0A80               	xorlw	128
  3833  00011C  5810               	subwfb	??_adc_sample^0,w,c
  3834  00011E  A0D8               	btfss	status,0,c
  3835  000120  EF94  F000         	goto	i1u64_21
  3836  000124  EF96  F000         	goto	i1u64_20
  3837  000128                     i1u64_21:
  3838  000128  EF9A  F000         	goto	i1l1578
  3839  00012C                     i1u64_20:
  3840  00012C                     
  3841                           ;emerstop2.c: 162:                 waitvalue = 0;
  3842  00012C  0E00               	movlw	0
  3843  00012E  6E5B               	movwf	(_waitvalue+1)^0,c	;volatile
  3844  000130  0E00               	movlw	0
  3845  000132  6E5A               	movwf	_waitvalue^0,c	;volatile
  3846  000134                     i1l1578:
  3847                           
  3848                           ;emerstop2.c: 164:             if(counter >= delay){
  3849  000134  505C               	movf	_delay^0,w,c	;volatile
  3850  000136  5C5E               	subwf	_counter^0,w,c	;volatile
  3851  000138  505F               	movf	(_counter+1)^0,w,c	;volatile
  3852  00013A  0A80               	xorlw	128
  3853  00013C  6E10               	movwf	??_adc_sample^0,c
  3854  00013E  505D               	movf	(_delay+1)^0,w,c	;volatile
  3855  000140  0A80               	xorlw	128
  3856  000142  5810               	subwfb	??_adc_sample^0,w,c
  3857  000144  A0D8               	btfss	status,0,c
  3858  000146  EFA7  F000         	goto	i1u65_21
  3859  00014A  EFA9  F000         	goto	i1u65_20
  3860  00014E                     i1u65_21:
  3861  00014E  EFB1  F000         	goto	i1l229
  3862  000152                     i1u65_20:
  3863  000152                     
  3864                           ;emerstop2.c: 165:                 counter = 0;
  3865  000152  0E00               	movlw	0
  3866  000154  6E5F               	movwf	(_counter+1)^0,c	;volatile
  3867  000156  0E00               	movlw	0
  3868  000158  6E5E               	movwf	_counter^0,c	;volatile
  3869                           
  3870                           ;emerstop2.c: 166:                 waitvalue = 0;
  3871  00015A  0E00               	movlw	0
  3872  00015C  6E5B               	movwf	(_waitvalue+1)^0,c	;volatile
  3873  00015E  0E00               	movlw	0
  3874  000160  6E5A               	movwf	_waitvalue^0,c	;volatile
  3875  000162                     i1l229:
  3876  000162  C014  FFE0         	movff	??_adc_sample+4,bsr
  3877  000166  C013  FFE8         	movff	??_adc_sample+3,wreg
  3878  00016A  C012  FFD8         	movff	??_adc_sample+2,status
  3879  00016E  906B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3880  000170  0010               	retfie	
  3881  000172                     __end_of_adc_sample:
  3882                           	callstack 0
  3883                           
  3884 ;; *************** function _shutoff *****************
  3885 ;; Defined at:
  3886 ;;		line 170 in file "emerstop2.c"
  3887 ;; Parameters:    Size  Location     Type
  3888 ;;		None
  3889 ;; Auto vars:     Size  Location     Type
  3890 ;;		None
  3891 ;; Return value:  Size  Location     Type
  3892 ;;                  1    wreg      void 
  3893 ;; Registers used:
  3894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3895 ;; Tracked objects:
  3896 ;;		On entry : 0/0
  3897 ;;		On exit  : 0/0
  3898 ;;		Unchanged: 0/0
  3899 ;; Data sizes:     COMRAM   BANK0   BANK1
  3900 ;;      Params:         0       0       0
  3901 ;;      Locals:         0       0       0
  3902 ;;      Temps:          8       0       0
  3903 ;;      Totals:         8       0       0
  3904 ;;Total ram usage:        8 bytes
  3905 ;; Hardware stack levels used:    1
  3906 ;; Hardware stack levels required when called:    6
  3907 ;; This function calls:
  3908 ;;		i2_print
  3909 ;; This function is called by:
  3910 ;;		Interrupt level 2
  3911 ;; This function uses a non-reentrant model
  3912 ;;
  3913                           
  3914                           	psect	intcode
  3915  000008                     __pintcode:
  3916                           	callstack 0
  3917  000008                     _shutoff:
  3918                           	callstack 14
  3919                           
  3920                           ;incstack = 0
  3921  000008  826B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3922  00000A  EF53  F006         	goto	int_func
  3923                           
  3924                           	psect	intcode_body
  3925  000CA6                     __pintcode_body:
  3926                           	callstack 14
  3927  000CA6                     int_func:
  3928                           	callstack 14
  3929  000CA6  CFE1 F008          	movff	fsr1l,??_shutoff
  3930  000CAA  CFE2 F009          	movff	fsr1h,??_shutoff+1
  3931  000CAE  CFD9 F00A          	movff	fsr2l,??_shutoff+2
  3932  000CB2  CFDA F00B          	movff	fsr2h,??_shutoff+3
  3933  000CB6  CFF6 F00C          	movff	tblptrl,??_shutoff+4
  3934  000CBA  CFF7 F00D          	movff	tblptrh,??_shutoff+5
  3935  000CBE  CFF8 F00E          	movff	tblptru,??_shutoff+6
  3936  000CC2  CFF5 F00F          	movff	tablat,??_shutoff+7
  3937  000CC6                     
  3938                           ;emerstop2.c: 172:     if (INTCONbits.INT0IE && INTCONbits.INT0IF)
  3939  000CC6  A8F2               	btfss	242,4,c	;volatile
  3940  000CC8  EF68  F006         	goto	i2u190_41
  3941  000CCC  EF6A  F006         	goto	i2u190_40
  3942  000CD0                     i2u190_41:
  3943  000CD0  EF8A  F006         	goto	i2l235
  3944  000CD4                     i2u190_40:
  3945  000CD4  A2F2               	btfss	242,1,c	;volatile
  3946  000CD6  EF6F  F006         	goto	i2u191_41
  3947  000CDA  EF71  F006         	goto	i2u191_40
  3948  000CDE                     i2u191_41:
  3949  000CDE  EF8A  F006         	goto	i2l235
  3950  000CE2                     i2u191_40:
  3951  000CE2                     
  3952                           ;emerstop2.c: 173:     {;emerstop2.c: 175:         INTCONbits.INT0IF = 0;
  3953  000CE2  92F2               	bcf	242,1,c	;volatile
  3954  000CE4                     
  3955                           ;emerstop2.c: 176:             CCPR2L = 0;
  3956  000CE4  0E00               	movlw	0
  3957  000CE6  6EBB               	movwf	187,c	;volatile
  3958  000CE8                     
  3959                           ;emerstop2.c: 177:             print("   STOPPED!!!");
  3960  000CE8  0E01               	movlw	low STR_4
  3961  000CEA  6E06               	movwf	i2print@chr^0,c
  3962  000CEC  0E02               	movlw	high STR_4
  3963  000CEE  6E07               	movwf	(i2print@chr+1)^0,c
  3964  000CF0  ECFC  F006         	call	i2_print	;wreg free
  3965  000CF4                     
  3966                           ;emerstop2.c: 178:             PORTBbits.RB1 = flip;
  3967  000CF4  B064               	btfsc	_flip^0,0,c	;volatile
  3968  000CF6  D002               	bra	i2u192_45
  3969  000CF8  9281               	bcf	129,1,c	;volatile
  3970  000CFA  D001               	bra	i2u192_46
  3971  000CFC                     i2u192_45:
  3972  000CFC  8281               	bsf	129,1,c	;volatile
  3973  000CFE                     i2u192_46:
  3974  000CFE                     
  3975                           ;emerstop2.c: 179:             flip = ~ flip;
  3976  000CFE  0464               	decf	_flip^0,w,c	;volatile
  3977  000D00  A4D8               	btfss	status,2,c
  3978  000D02  EF85  F006         	goto	i2u193_41
  3979  000D06  EF88  F006         	goto	i2u193_40
  3980  000D0A                     i2u193_41:
  3981  000D0A  0E01               	movlw	1
  3982  000D0C  EF89  F006         	goto	i2u194_40
  3983  000D10                     i2u193_40:
  3984  000D10  0E00               	movlw	0
  3985  000D12                     i2u194_40:
  3986  000D12  6E64               	movwf	_flip^0,c	;volatile
  3987  000D14                     i2l235:
  3988  000D14  C00F  FFF5         	movff	??_shutoff+7,tablat
  3989  000D18  C00E  FFF8         	movff	??_shutoff+6,tblptru
  3990  000D1C  C00D  FFF7         	movff	??_shutoff+5,tblptrh
  3991  000D20  C00C  FFF6         	movff	??_shutoff+4,tblptrl
  3992  000D24  C00B  FFDA         	movff	??_shutoff+3,fsr2h
  3993  000D28  C00A  FFD9         	movff	??_shutoff+2,fsr2l
  3994  000D2C  C009  FFE2         	movff	??_shutoff+1,fsr1h
  3995  000D30  C008  FFE1         	movff	??_shutoff,fsr1l
  3996  000D34  926B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3997  000D36  0011               	retfie		f
  3998  000D38                     __end_of_shutoff:
  3999                           	callstack 0
  4000                           
  4001 ;; *************** function i2_print *****************
  4002 ;; Defined at:
  4003 ;;		line 135 in file "LiquidCrystal.c"
  4004 ;; Parameters:    Size  Location     Type
  4005 ;;  chr             2    5[COMRAM] PTR unsigned char 
  4006 ;;		 -> STR_4(14), STR_3(8), STR_2(12), print_int@s_num(80), 
  4007 ;; Auto vars:     Size  Location     Type
  4008 ;;		None
  4009 ;; Return value:  Size  Location     Type
  4010 ;;                  1    wreg      void 
  4011 ;; Registers used:
  4012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4013 ;; Tracked objects:
  4014 ;;		On entry : 0/0
  4015 ;;		On exit  : 0/0
  4016 ;;		Unchanged: 0/0
  4017 ;; Data sizes:     COMRAM   BANK0   BANK1
  4018 ;;      Params:         2       0       0
  4019 ;;      Locals:         0       0       0
  4020 ;;      Temps:          0       0       0
  4021 ;;      Totals:         2       0       0
  4022 ;;Total ram usage:        2 bytes
  4023 ;; Hardware stack levels used:    1
  4024 ;; Hardware stack levels required when called:    5
  4025 ;; This function calls:
  4026 ;;		i2_write
  4027 ;; This function is called by:
  4028 ;;		_shutoff
  4029 ;; This function uses a non-reentrant model
  4030 ;;
  4031                           
  4032                           	psect	text30
  4033  000DF8                     __ptext30:
  4034                           	callstack 0
  4035  000DF8                     i2_print:
  4036                           	callstack 14
  4037  000DF8                     
  4038                           ;LiquidCrystal.c: 135:     void print(unsigned char *chr);LiquidCrystal.c: 136:     {;Li
      +                          quidCrystal.c: 137:         while (*chr != '\0')
  4039  000DF8  EF12  F007         	goto	i2l2514
  4040  000DFC                     i2l2510:
  4041                           
  4042                           ;LiquidCrystal.c: 138:         {;LiquidCrystal.c: 139:             write(*chr);
  4043  000DFC  C006  FFF6         	movff	i2print@chr,tblptrl
  4044  000E00  C007  FFF7         	movff	i2print@chr+1,tblptrh
  4045  000E04  6AF8               	clrf	tblptru,c
  4046  000E06  0E01               	movlw	(high __ramtop+-1)
  4047  000E08  64F7               	cpfsgt	tblptrh,c
  4048  000E0A  D003               	bra	i2u187_47
  4049  000E0C  0008               	tblrd		*
  4050  000E0E  50F5               	movf	tablat,w,c
  4051  000E10  D005               	bra	i2u187_40
  4052  000E12                     i2u187_47:
  4053  000E12  CFF6 FFE1          	movff	tblptrl,fsr1l
  4054  000E16  CFF7 FFE2          	movff	tblptrh,fsr1h
  4055  000E1A  50E7               	movf	indf1,w,c
  4056  000E1C                     i2u187_40:
  4057  000E1C  ECCA  F008         	call	i2_write
  4058  000E20                     
  4059                           ;LiquidCrystal.c: 140:             chr++;
  4060  000E20  4A06               	infsnz	i2print@chr^0,f,c
  4061  000E22  2A07               	incf	(i2print@chr+1)^0,f,c
  4062  000E24                     i2l2514:
  4063                           
  4064                           ;LiquidCrystal.c: 137:         while (*chr != '\0')
  4065  000E24  C006  FFF6         	movff	i2print@chr,tblptrl
  4066  000E28  C007  FFF7         	movff	i2print@chr+1,tblptrh
  4067  000E2C  6AF8               	clrf	tblptru,c
  4068  000E2E  0E01               	movlw	(high __ramtop+-1)
  4069  000E30  64F7               	cpfsgt	tblptrh,c
  4070  000E32  D003               	bra	i2u188_47
  4071  000E34  0008               	tblrd		*
  4072  000E36  50F5               	movf	tablat,w,c
  4073  000E38  D005               	bra	i2u188_40
  4074  000E3A                     i2u188_47:
  4075  000E3A  CFF6 FFE1          	movff	tblptrl,fsr1l
  4076  000E3E  CFF7 FFE2          	movff	tblptrh,fsr1h
  4077  000E42  50E7               	movf	indf1,w,c
  4078  000E44                     i2u188_40:
  4079  000E44  0900               	iorlw	0
  4080  000E46  A4D8               	btfss	status,2,c
  4081  000E48  EF28  F007         	goto	i2u189_41
  4082  000E4C  EF2A  F007         	goto	i2u189_40
  4083  000E50                     i2u189_41:
  4084  000E50  EFFE  F006         	goto	i2l2510
  4085  000E54                     i2u189_40:
  4086  000E54  0012               	return		;funcret
  4087  000E56                     __end_ofi2_print:
  4088                           	callstack 0
  4089                           
  4090 ;; *************** function i2_write *****************
  4091 ;; Defined at:
  4092 ;;		line 125 in file "LiquidCrystal.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;  chr             1    wreg     unsigned char 
  4095 ;; Auto vars:     Size  Location     Type
  4096 ;;  chr             1    4[COMRAM] unsigned char 
  4097 ;; Return value:  Size  Location     Type
  4098 ;;                  1    wreg      void 
  4099 ;; Registers used:
  4100 ;;		wreg, fsr2l, fsr2h, status,2, cstack
  4101 ;; Tracked objects:
  4102 ;;		On entry : 0/0
  4103 ;;		On exit  : 0/0
  4104 ;;		Unchanged: 0/0
  4105 ;; Data sizes:     COMRAM   BANK0   BANK1
  4106 ;;      Params:         0       0       0
  4107 ;;      Locals:         1       0       0
  4108 ;;      Temps:          0       0       0
  4109 ;;      Totals:         1       0       0
  4110 ;;Total ram usage:        1 bytes
  4111 ;; Hardware stack levels used:    1
  4112 ;; Hardware stack levels required when called:    4
  4113 ;; This function calls:
  4114 ;;		i2_sendData
  4115 ;; This function is called by:
  4116 ;;		i2_print
  4117 ;; This function uses a non-reentrant model
  4118 ;;
  4119                           
  4120                           	psect	text31
  4121  001194                     __ptext31:
  4122                           	callstack 0
  4123  001194                     i2_write:
  4124                           	callstack 14
  4125                           
  4126                           ;incstack = 0
  4127                           ;i2write@chr stored from wreg
  4128  001194  6E05               	movwf	i2write@chr^0,c
  4129  001196                     
  4130                           ;LiquidCrystal.c: 125:     void write(unsigned char chr);LiquidCrystal.c: 126:     {;Liq
      +                          uidCrystal.c: 127:         sendData(chr);
  4131  001196  5005               	movf	i2write@chr^0,w,c
  4132  001198  ECB8  F008         	call	i2_sendData
  4133  00119C  0012               	return		;funcret
  4134  00119E                     __end_ofi2_write:
  4135                           	callstack 0
  4136                           
  4137 ;; *************** function i2_sendData *****************
  4138 ;; Defined at:
  4139 ;;		line 417 in file "LiquidCrystal.c"
  4140 ;; Parameters:    Size  Location     Type
  4141 ;;  value           1    wreg     unsigned char 
  4142 ;; Auto vars:     Size  Location     Type
  4143 ;;  value           1    3[COMRAM] unsigned char 
  4144 ;; Return value:  Size  Location     Type
  4145 ;;                  1    wreg      void 
  4146 ;; Registers used:
  4147 ;;		wreg, fsr2l, fsr2h, status,2, cstack
  4148 ;; Tracked objects:
  4149 ;;		On entry : 0/0
  4150 ;;		On exit  : 0/0
  4151 ;;		Unchanged: 0/0
  4152 ;; Data sizes:     COMRAM   BANK0   BANK1
  4153 ;;      Params:         0       0       0
  4154 ;;      Locals:         1       0       0
  4155 ;;      Temps:          0       0       0
  4156 ;;      Totals:         1       0       0
  4157 ;;Total ram usage:        1 bytes
  4158 ;; Hardware stack levels used:    1
  4159 ;; Hardware stack levels required when called:    3
  4160 ;; This function calls:
  4161 ;;		i2_send
  4162 ;; This function is called by:
  4163 ;;		i2_write
  4164 ;; This function uses a non-reentrant model
  4165 ;;
  4166                           
  4167                           	psect	text32
  4168  001170                     __ptext32:
  4169                           	callstack 0
  4170  001170                     i2_sendData:
  4171                           	callstack 14
  4172                           
  4173                           ;incstack = 0
  4174                           ;i2sendData@value stored from wreg
  4175  001170  6E04               	movwf	i2sendData@value^0,c
  4176  001172                     
  4177                           ;LiquidCrystal.c: 417:     void sendData(unsigned char value);LiquidCrystal.c: 418:     
      +                          {;LiquidCrystal.c: 419:         send(value, 1);
  4178  001172  0E01               	movlw	1
  4179  001174  6E02               	movwf	i2send@mode^0,c
  4180  001176  5004               	movf	i2sendData@value^0,w,c
  4181  001178  EC79  F007         	call	i2_send
  4182  00117C  0012               	return		;funcret
  4183  00117E                     __end_ofi2_sendData:
  4184                           	callstack 0
  4185                           
  4186 ;; *************** function i2_send *****************
  4187 ;; Defined at:
  4188 ;;		line 390 in file "LiquidCrystal.c"
  4189 ;; Parameters:    Size  Location     Type
  4190 ;;  value           1    wreg     unsigned char 
  4191 ;;  mode            1    1[COMRAM] unsigned char 
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;  value           1    2[COMRAM] unsigned char 
  4194 ;; Return value:  Size  Location     Type
  4195 ;;                  1    wreg      void 
  4196 ;; Registers used:
  4197 ;;		wreg, fsr2l, fsr2h, status,2, cstack
  4198 ;; Tracked objects:
  4199 ;;		On entry : 0/0
  4200 ;;		On exit  : 0/0
  4201 ;;		Unchanged: 0/0
  4202 ;; Data sizes:     COMRAM   BANK0   BANK1
  4203 ;;      Params:         1       0       0
  4204 ;;      Locals:         1       0       0
  4205 ;;      Temps:          0       0       0
  4206 ;;      Totals:         2       0       0
  4207 ;;Total ram usage:        2 bytes
  4208 ;; Hardware stack levels used:    1
  4209 ;; Hardware stack levels required when called:    2
  4210 ;; This function calls:
  4211 ;;		i2_write8bits
  4212 ;; This function is called by:
  4213 ;;		i2_sendData
  4214 ;; This function uses a non-reentrant model
  4215 ;;
  4216                           
  4217                           	psect	text33
  4218  000EF2                     __ptext33:
  4219                           	callstack 0
  4220  000EF2                     i2_send:
  4221                           	callstack 14
  4222                           
  4223                           ;incstack = 0
  4224                           ;i2send@value stored from wreg
  4225  000EF2  6E03               	movwf	i2send@value^0,c
  4226  000EF4                     
  4227                           ;LiquidCrystal.c: 390:     void send(unsigned char value, unsigned char mode);LiquidCrys
      +                          tal.c: 391:     {;LiquidCrystal.c: 392:         if (mode)
  4228  000EF4  5002               	movf	i2send@mode^0,w,c
  4229  000EF6  B4D8               	btfsc	status,2,c
  4230  000EF8  EF80  F007         	goto	i2u178_41
  4231  000EFC  EF82  F007         	goto	i2u178_40
  4232  000F00                     i2u178_41:
  4233  000F00  EF89  F007         	goto	i2l2406
  4234  000F04                     i2u178_40:
  4235  000F04                     
  4236                           ;LiquidCrystal.c: 393:             signalPORT->_rs = 1;
  4237  000F04  C068  FFD9         	movff	_signalPORT,fsr2l
  4238  000F08  C069  FFDA         	movff	_signalPORT+1,fsr2h
  4239  000F0C  80DF               	bsf	indf2,0,c
  4240  000F0E  EF8E  F007         	goto	i2l109
  4241  000F12                     i2l2406:
  4242                           
  4243                           ;LiquidCrystal.c: 395:             signalPORT->_rs = 0;
  4244  000F12  C068  FFD9         	movff	_signalPORT,fsr2l
  4245  000F16  C069  FFDA         	movff	_signalPORT+1,fsr2h
  4246  000F1A  90DF               	bcf	indf2,0,c
  4247  000F1C                     i2l109:
  4248                           
  4249                           ;LiquidCrystal.c: 398:         signalPORT->_rw = 0;
  4250  000F1C  C068  FFD9         	movff	_signalPORT,fsr2l
  4251  000F20  C069  FFDA         	movff	_signalPORT+1,fsr2h
  4252  000F24  92DF               	bcf	indf2,1,c
  4253  000F26                     
  4254                           ;LiquidCrystal.c: 401:         if (_displayfunction & 0x10)
  4255  000F26  A86A               	btfss	__displayfunction^0,4,c
  4256  000F28  EF98  F007         	goto	i2u179_41
  4257  000F2C  EF9A  F007         	goto	i2u179_40
  4258  000F30                     i2u179_41:
  4259  000F30  EF9D  F007         	goto	i2l111
  4260  000F34                     i2u179_40:
  4261  000F34                     
  4262                           ;LiquidCrystal.c: 402:         {;LiquidCrystal.c: 403:             write8bits(value);
  4263  000F34  5003               	movf	i2send@value^0,w,c
  4264  000F36  EC87  F008         	call	i2_write8bits
  4265  000F3A                     i2l111:
  4266  000F3A  0012               	return		;funcret
  4267  000F3C                     __end_ofi2_send:
  4268                           	callstack 0
  4269                           
  4270 ;; *************** function i2_write8bits *****************
  4271 ;; Defined at:
  4272 ;;		line 461 in file "LiquidCrystal.c"
  4273 ;; Parameters:    Size  Location     Type
  4274 ;;  value           1    wreg     unsigned char 
  4275 ;; Auto vars:     Size  Location     Type
  4276 ;;  value           1    0[COMRAM] unsigned char 
  4277 ;; Return value:  Size  Location     Type
  4278 ;;                  1    wreg      void 
  4279 ;; Registers used:
  4280 ;;		wreg, fsr2l, fsr2h, cstack
  4281 ;; Tracked objects:
  4282 ;;		On entry : 0/0
  4283 ;;		On exit  : 0/0
  4284 ;;		Unchanged: 0/0
  4285 ;; Data sizes:     COMRAM   BANK0   BANK1
  4286 ;;      Params:         0       0       0
  4287 ;;      Locals:         1       0       0
  4288 ;;      Temps:          0       0       0
  4289 ;;      Totals:         1       0       0
  4290 ;;Total ram usage:        1 bytes
  4291 ;; Hardware stack levels used:    1
  4292 ;; Hardware stack levels required when called:    1
  4293 ;; This function calls:
  4294 ;;		i2_pulseEnable
  4295 ;; This function is called by:
  4296 ;;		i2_send
  4297 ;; This function uses a non-reentrant model
  4298 ;;
  4299                           
  4300                           	psect	text34
  4301  00110E                     __ptext34:
  4302                           	callstack 0
  4303  00110E                     i2_write8bits:
  4304                           	callstack 14
  4305                           
  4306                           ;incstack = 0
  4307                           ;i2write8bits@value stored from wreg
  4308  00110E  6E01               	movwf	i2write8bits@value^0,c
  4309  001110                     
  4310                           ;LiquidCrystal.c: 461:     void write8bits(unsigned char value);LiquidCrystal.c: 462:   
      +                            {;LiquidCrystal.c: 463:         dataPORT->_data = value;
  4311  001110  C0B0  FFD9         	movff	_dataPORT,fsr2l
  4312  001114  C0B1  FFDA         	movff	_dataPORT+1,fsr2h
  4313  001118  C001  FFDF         	movff	i2write8bits@value,indf2
  4314  00111C                     
  4315                           ;LiquidCrystal.c: 465:         pulseEnable();
  4316  00111C  EC5F  F008         	call	i2_pulseEnable	;wreg free
  4317  001120  0012               	return		;funcret
  4318  001122                     __end_ofi2_write8bits:
  4319                           	callstack 0
  4320                           
  4321 ;; *************** function i2_pulseEnable *****************
  4322 ;; Defined at:
  4323 ;;		line 444 in file "LiquidCrystal.c"
  4324 ;; Parameters:    Size  Location     Type
  4325 ;;		None
  4326 ;; Auto vars:     Size  Location     Type
  4327 ;;		None
  4328 ;; Return value:  Size  Location     Type
  4329 ;;                  1    wreg      void 
  4330 ;; Registers used:
  4331 ;;		wreg, fsr2l, fsr2h
  4332 ;; Tracked objects:
  4333 ;;		On entry : 0/0
  4334 ;;		On exit  : 0/0
  4335 ;;		Unchanged: 0/0
  4336 ;; Data sizes:     COMRAM   BANK0   BANK1
  4337 ;;      Params:         0       0       0
  4338 ;;      Locals:         0       0       0
  4339 ;;      Temps:          0       0       0
  4340 ;;      Totals:         0       0       0
  4341 ;;Total ram usage:        0 bytes
  4342 ;; Hardware stack levels used:    1
  4343 ;; This function calls:
  4344 ;;		Nothing
  4345 ;; This function is called by:
  4346 ;;		i2_write8bits
  4347 ;; This function uses a non-reentrant model
  4348 ;;
  4349                           
  4350                           	psect	text35
  4351  0010BE                     __ptext35:
  4352                           	callstack 0
  4353  0010BE                     i2_pulseEnable:
  4354                           	callstack 14
  4355  0010BE                     
  4356                           ;LiquidCrystal.c: 446:         signalPORT->_enable = 0;
  4357  0010BE  C068  FFD9         	movff	_signalPORT,fsr2l
  4358  0010C2  C069  FFDA         	movff	_signalPORT+1,fsr2h
  4359  0010C6  94DF               	bcf	indf2,2,c
  4360  0010C8                     
  4361                           ;LiquidCrystal.c: 447:         _delay((unsigned long)((1)*(1000000/4000000.0)));
  4362                           ;LiquidCrystal.c: 448:         signalPORT->_enable = 1;
  4363  0010C8  C068  FFD9         	movff	_signalPORT,fsr2l
  4364  0010CC  C069  FFDA         	movff	_signalPORT+1,fsr2h
  4365  0010D0  84DF               	bsf	indf2,2,c
  4366  0010D2                     
  4367                           ;LiquidCrystal.c: 449:         _delay((unsigned long)((1)*(1000000/4000000.0)));
  4368                           ;LiquidCrystal.c: 450:         signalPORT->_enable = 0;
  4369  0010D2  C068  FFD9         	movff	_signalPORT,fsr2l
  4370  0010D6  C069  FFDA         	movff	_signalPORT+1,fsr2h
  4371  0010DA  94DF               	bcf	indf2,2,c
  4372  0010DC                     
  4373                           ;LiquidCrystal.c: 451:         _delay((unsigned long)((100)*(1000000/4000000.0)));
  4374  0010DC  0E08               	movlw	8
  4375  0010DE                     i2u201_47:
  4376  0010DE  2EE8               	decfsz	wreg,f,c
  4377  0010E0  D7FE               	bra	i2u201_47
  4378  0010E2  F000               	nop	
  4379  0010E4  0012               	return		;funcret
  4380  0010E6                     __end_ofi2_pulseEnable:
  4381                           	callstack 0
  4382                           
  4383                           	psect	rparam
  4384  0000                     
  4385                           	psect	temp
  4386  00006B                     btemp:
  4387                           	callstack 0
  4388  00006B                     	ds	1
  4389  0000                     int$flags	set	btemp
  4390  0000                     wtemp8	set	btemp+1
  4391  0000                     ttemp5	set	btemp+1
  4392  0000                     ttemp6	set	btemp+4
  4393  0000                     ttemp7	set	btemp+8
  4394                           
  4395                           	psect	idloc
  4396                           
  4397                           ;Config register IDLOC0 @ 0x200000
  4398                           ;	unspecified, using default values
  4399  200000                     	org	2097152
  4400  200000  FF                 	db	255
  4401                           
  4402                           ;Config register IDLOC1 @ 0x200001
  4403                           ;	unspecified, using default values
  4404  200001                     	org	2097153
  4405  200001  FF                 	db	255
  4406                           
  4407                           ;Config register IDLOC2 @ 0x200002
  4408                           ;	unspecified, using default values
  4409  200002                     	org	2097154
  4410  200002  FF                 	db	255
  4411                           
  4412                           ;Config register IDLOC3 @ 0x200003
  4413                           ;	unspecified, using default values
  4414  200003                     	org	2097155
  4415  200003  FF                 	db	255
  4416                           
  4417                           ;Config register IDLOC4 @ 0x200004
  4418                           ;	unspecified, using default values
  4419  200004                     	org	2097156
  4420  200004  FF                 	db	255
  4421                           
  4422                           ;Config register IDLOC5 @ 0x200005
  4423                           ;	unspecified, using default values
  4424  200005                     	org	2097157
  4425  200005  FF                 	db	255
  4426                           
  4427                           ;Config register IDLOC6 @ 0x200006
  4428                           ;	unspecified, using default values
  4429  200006                     	org	2097158
  4430  200006  FF                 	db	255
  4431                           
  4432                           ;Config register IDLOC7 @ 0x200007
  4433                           ;	unspecified, using default values
  4434  200007                     	org	2097159
  4435  200007  FF                 	db	255
  4436                           
  4437                           	psect	config
  4438                           
  4439                           ; Padding undefined space
  4440  300000                     	org	3145728
  4441  300000  FF                 	db	255
  4442                           
  4443                           ;Config register CONFIG1H @ 0x300001
  4444                           ;	Oscillator
  4445                           ;	OSC = INTIO2, Internal oscillator block, port function on RA6 and RA7
  4446                           ;	Fail-Safe Clock Monitor Enable bit
  4447                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4448                           ;	Internal/External Oscillator Switchover bit
  4449                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4450  300001                     	org	3145729
  4451  300001  08                 	db	8
  4452                           
  4453                           ;Config register CONFIG2L @ 0x300002
  4454                           ;	Power-up Timer Enable bit
  4455                           ;	PWRT = OFF, PWRT disabled
  4456                           ;	Brown-out Reset Enable bits
  4457                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  4458                           ;	Brown-out Reset Voltage bits
  4459                           ;	BORV = 3, Minimum Setting
  4460  300002                     	org	3145730
  4461  300002  19                 	db	25
  4462                           
  4463                           ;Config register CONFIG2H @ 0x300003
  4464                           ;	Watchdog Timer Enable bit
  4465                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4466                           ;	Watchdog Timer Postscale Select bits
  4467                           ;	WDTPS = 32768, 1:32768
  4468  300003                     	org	3145731
  4469  300003  1E                 	db	30
  4470                           
  4471                           ; Padding undefined space
  4472  300004                     	org	3145732
  4473  300004  FF                 	db	255
  4474                           
  4475                           ;Config register CONFIG3H @ 0x300005
  4476                           ;	CCP2 MUX bit
  4477                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  4478                           ;	PORTB A/D Enable bit
  4479                           ;	PBADEN = ANA, PORTB<4:0> pins are configured as analog input channels on Reset
  4480                           ;	Low-Power Timer1 Oscillator Enable bit
  4481                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4482                           ;	MCLR Pin Enable bit
  4483                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4484  300005                     	org	3145733
  4485  300005  83                 	db	131
  4486                           
  4487                           ;Config register CONFIG4L @ 0x300006
  4488                           ;	Stack Full/Underflow Reset Enable bit
  4489                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  4490                           ;	Single-Supply ICSP Enable bit
  4491                           ;	LVP = OFF, Single-Supply ICSP disabled
  4492                           ;	Boot Block Size Select bits
  4493                           ;	BBSIZ = BB256, 256 Word
  4494                           ;	Extended Instruction Set Enable bit
  4495                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4496                           ;	Background Debugger Enable bit
  4497                           ;	DEBUG = 0x1, unprogrammed default
  4498  300006                     	org	3145734
  4499  300006  80                 	db	128
  4500                           
  4501                           ; Padding undefined space
  4502  300007                     	org	3145735
  4503  300007  FF                 	db	255
  4504                           
  4505                           ;Config register CONFIG5L @ 0x300008
  4506                           ;	Code Protection bit
  4507                           ;	CP0 = OFF, Block 0 not code-protected
  4508                           ;	Code Protection bit
  4509                           ;	CP1 = OFF, Block 1 not code-protected
  4510  300008                     	org	3145736
  4511  300008  03                 	db	3
  4512                           
  4513                           ;Config register CONFIG5H @ 0x300009
  4514                           ;	Boot Block Code Protection bitProtect Boot
  4515                           ;	CPB = OFF, Boot block not code-protected
  4516                           ;	Data EEPROM Code Protection bit
  4517                           ;	CPD = OFF, Data EEPROM not code-protected
  4518  300009                     	org	3145737
  4519  300009  C0                 	db	192
  4520                           
  4521                           ;Config register CONFIG6L @ 0x30000A
  4522                           ;	Write Protection bit
  4523                           ;	WRT0 = OFF, Block 0 not write-protected
  4524                           ;	Write Protection bit
  4525                           ;	WRT1 = OFF, Block 1 not write-protected
  4526  30000A                     	org	3145738
  4527  30000A  03                 	db	3
  4528                           
  4529                           ;Config register CONFIG6H @ 0x30000B
  4530                           ;	Configuration Register Write Protection bit
  4531                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4532                           ;	Boot Block Write Protection bit
  4533                           ;	WRTB = OFF, Boot block not write-protected
  4534                           ;	Data EEPROM Write Protection bit
  4535                           ;	WRTD = OFF, Data EEPROM not write-protected
  4536  30000B                     	org	3145739
  4537  30000B  E0                 	db	224
  4538                           
  4539                           ;Config register CONFIG7L @ 0x30000C
  4540                           ;	Table Read Protection bit
  4541                           ;	EBTR0 = OFF, Block 0 not protected from table reads executed in other blocks
  4542                           ;	Table Read Protection bit
  4543                           ;	EBTR1 = OFF, Block 1 not protected from table reads executed in other blocks
  4544  30000C                     	org	3145740
  4545  30000C  03                 	db	3
  4546                           
  4547                           ;Config register CONFIG7H @ 0x30000D
  4548                           ;	Boot Block Table Read Protection bit
  4549                           ;	EBTRB = OFF, Boot block not protected from table reads executed in other blocks
  4550  30000D                     	org	3145741
  4551  30000D  40                 	db	64
  4552                           tosu	equ	0xFFF
  4553                           tosh	equ	0xFFE
  4554                           tosl	equ	0xFFD
  4555                           stkptr	equ	0xFFC
  4556                           pclatu	equ	0xFFB
  4557                           pclath	equ	0xFFA
  4558                           pcl	equ	0xFF9
  4559                           tblptru	equ	0xFF8
  4560                           tblptrh	equ	0xFF7
  4561                           tblptrl	equ	0xFF6
  4562                           tablat	equ	0xFF5
  4563                           prodh	equ	0xFF4
  4564                           prodl	equ	0xFF3
  4565                           indf0	equ	0xFEF
  4566                           postinc0	equ	0xFEE
  4567                           postdec0	equ	0xFED
  4568                           preinc0	equ	0xFEC
  4569                           plusw0	equ	0xFEB
  4570                           fsr0h	equ	0xFEA
  4571                           fsr0l	equ	0xFE9
  4572                           wreg	equ	0xFE8
  4573                           indf1	equ	0xFE7
  4574                           postinc1	equ	0xFE6
  4575                           postdec1	equ	0xFE5
  4576                           preinc1	equ	0xFE4
  4577                           plusw1	equ	0xFE3
  4578                           fsr1h	equ	0xFE2
  4579                           fsr1l	equ	0xFE1
  4580                           bsr	equ	0xFE0
  4581                           indf2	equ	0xFDF
  4582                           postinc2	equ	0xFDE
  4583                           postdec2	equ	0xFDD
  4584                           preinc2	equ	0xFDC
  4585                           plusw2	equ	0xFDB
  4586                           fsr2h	equ	0xFDA
  4587                           fsr2l	equ	0xFD9
  4588                           status	equ	0xFD8

Data Sizes:
    Strings     37
    Constant    0
    Data        0
    BSS         58
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     85     106
    BANK0           128     40      50
    BANK1           256     80     112

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 80
		 -> print_int@s_num(BANK1[80]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 80
		 -> print_int@s_num(BANK1[80]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1330_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 80
		 -> print_int@s_num(BANK1[80]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 80
		 -> print_int@s_num(BANK1[80]), 

    print@chr	PTR unsigned char  size(2) Largest target is 80
		 -> STR_4(CODE[14]), STR_3(CODE[8]), STR_2(CODE[12]), print_int@s_num(BANK1[80]), 

    pin_setup@sp	PTR volatile struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    signalPORT	PTR volatile struct . size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTD(SFR[1]), 

    pin_setup@dp	PTR volatile struct . size(2) Largest target is 1
		 -> PORTA(SFR[1]), 

    dataPORT	PTR volatile struct . size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTA(SFR[1]), 


Critical Paths under _main in COMRAM

    _setCursor->_sendCommand
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _print->_write
    _write->_sendData
    _sendData->_send
    _home->_sendCommand
    _begin->_sendCommand
    _begin->_setRowOffsets
    _displayON->_sendCommand
    _clear->_sendCommand
    _sendCommand->_send
    _send->_write8bits

Critical Paths under _adc_sample in COMRAM

    None.

Critical Paths under _shutoff in COMRAM

    _shutoff->i2_print
    i2_print->i2_write
    i2_write->i2_sendData
    i2_sendData->i2_send
    i2_send->i2_write8bits

Critical Paths under _main in BANK0

    _main->_print_int
    _print_int->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _adc_sample in BANK0

    None.

Critical Paths under _shutoff in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_print_int

Critical Paths under _adc_sample in BANK1

    None.

Critical Paths under _shutoff in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   12717
                              _begin
                               _home
                          _pin_setup
                              _print
                          _print_int
                          _setCursor
 ---------------------------------------------------------------------------------
 (1) _setCursor                                            5     3      2     490
                                             24 COMRAM     5     3      2
                        _sendCommand
 ---------------------------------------------------------------------------------
 (1) _print_int                                           82    80      2    9439
                                             38 BANK0      2     0      2
                                              0 BANK1     80    80      0
                              _print
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16    10      6    8417
                                             22 BANK0     16    10      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    7931
                                             14 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    7458
                                             83 COMRAM     2     2      0
                                              0 BANK0     14     8      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    5683
                                             47 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3417
                                             36 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                             20 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             29 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                             20 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             38 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                             20 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                             20 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _print                                                2     0      2     725
                                             25 COMRAM     2     0      2
                              _write
 ---------------------------------------------------------------------------------
 (3) _write                                                1     1      0     335
                                             24 COMRAM     1     1      0
                           _sendData
 ---------------------------------------------------------------------------------
 (4) _sendData                                             1     1      0     304
                                             23 COMRAM     1     1      0
                               _send
 ---------------------------------------------------------------------------------
 (1) _pin_setup                                            4     0      4     196
                                             20 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _home                                                 0     0      0     304
                        _sendCommand
 ---------------------------------------------------------------------------------
 (1) _begin                                                4     2      2    1563
                                             24 COMRAM     4     2      2
                              _clear
                          _displayON
                        _sendCommand
                      _setRowOffsets
 ---------------------------------------------------------------------------------
 (2) _setRowOffsets                                        4     1      3     316
                                             20 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (2) _displayON                                            0     0      0     304
                        _sendCommand
 ---------------------------------------------------------------------------------
 (2) _clear                                                0     0      0     304
                        _sendCommand
 ---------------------------------------------------------------------------------
 (2) _sendCommand                                          1     1      0     304
                                             23 COMRAM     1     1      0
                               _send
 ---------------------------------------------------------------------------------
 (3) _send                                                 2     1      1     273
                                             21 COMRAM     2     1      1
                         _write8bits
 ---------------------------------------------------------------------------------
 (4) _write8bits                                           1     1      0      31
                                             20 COMRAM     1     1      0
                        _pulseEnable
 ---------------------------------------------------------------------------------
 (5) _pulseEnable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _adc_sample                                          5     5      0       0
                                             15 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _shutoff                                             8     8      0     290
                                              7 COMRAM     8     8      0
                            i2_print
 ---------------------------------------------------------------------------------
 (12) i2_print                                             2     0      2     290
                                              5 COMRAM     2     0      2
                            i2_write
 ---------------------------------------------------------------------------------
 (13) i2_write                                             1     1      0     190
                                              4 COMRAM     1     1      0
                         i2_sendData
 ---------------------------------------------------------------------------------
 (14) i2_sendData                                          1     1      0     159
                                              3 COMRAM     1     1      0
                             i2_send
 ---------------------------------------------------------------------------------
 (15) i2_send                                              2     1      1     128
                                              1 COMRAM     2     1      1
                       i2_write8bits
 ---------------------------------------------------------------------------------
 (16) i2_write8bits                                        1     1      0      31
                                              0 COMRAM     1     1      0
                      i2_pulseEnable
 ---------------------------------------------------------------------------------
 (17) i2_pulseEnable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _begin
     _clear
       _sendCommand
         _send
           _write8bits
             _pulseEnable
     _displayON
       _sendCommand
         _send
           _write8bits
             _pulseEnable
     _sendCommand
       _send
         _write8bits
           _pulseEnable
     _setRowOffsets
   _home
     _sendCommand
       _send
         _write8bits
           _pulseEnable
   _pin_setup
   _print
     _write
       _sendData
         _send
           _write8bits
             _pulseEnable
   _print_int
     _print
       _write
         _sendData
           _send
             _write8bits
               _pulseEnable
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
   _setCursor
     _sendCommand
       _send
         _write8bits
           _pulseEnable

 _adc_sample (ROOT)

 _shutoff (ROOT)
   i2_print
     i2_write
       i2_sendData
         i2_send
           i2_write8bits
             i2_pulseEnable

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     50      70       6       43.8%
BITBANK0            80      0       0       3        0.0%
BANK0               80     28      32       4       39.1%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     55      6A       1       84.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10C       7        0.0%
DATA                 0      0     10C       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Aug  9 22:05:09 2022

                     l33 1132                       l41 1192                       l50 1094  
                     l53 1188                       l38 0CA4                       l71 10F8  
                     l47 0DF6                       l65 1152                       l75 0FC0  
                     l68 1142                       bsr 000FE0                      l111 0EF0  
                    l120 10BC                      l114 1160                      l123 110C  
                    l109 0ED2                      l117 116E                      l352 0842  
                    l365 09A6                      l916 0EA6                      l943 0B8E  
                    l946 0BD0                      l954 02C6                      l948 0C0A  
                    l956 02CE                      l981 06BA                      l974 0504  
                    l992 0FF8                      l995 1000                      l987 0D90  
                    l988 0D98                      _PR2 000FCB                      _abs 0FC2  
                    _pad 0B4A                      wreg 000FE8                     l1007 0B48  
                   l1015 0F7E                     l1024 1036                     l1018 119E  
                   ?_abs 0027                     l2200 07DA                     l2202 07EC  
                   l2130 0AAE                     l2140 10A0                     l2204 07F2  
                   l2220 087A                     l2212 0844                     l2132 0ACC  
                   l2124 0A80                     l2300 029E                     l2142 10AA  
                   l2206 0802                     l2230 08E2                     l2222 0888  
                   l2214 0848                     l2134 0B02                     l2126 0A92  
                   l2150 0F5A                     l2310 02F6                     l2302 02A0  
                   l2144 10B4                     l2208 0822                     l2232 08F0  
                   l2240 0956                     l2224 08A8                     l2216 0856  
                   l2128 0AA4                     l2152 0F5E                     l2160 102A  
                   l2320 0396                     l2312 02FC                     l2304 02BA  
                   l2138 1096                     l2170 06C0                     l2242 0966  
                   l2234 091E                     l2226 08C6                     l2218 0876  
                   l2146 0F3C                     l2154 1002                     l2250 0B58  
                   l2330 043E                     l2322 039C                     l2314 0304  
                   l2306 02D6                     l2164 10FC                     l2412 1164  
                   l2500 113A                     l2180 0720                     l2172 06CE  
                   l2244 0986                     l2236 093E                     l2228 08CE  
                   l2148 0F48                     l2156 100E                     l2260 0BAE  
                   l2252 0B6C                     l2340 04A0                     l2332 0458  
                   l2324 03A2                     l2316 030E                     l2308 02E8  
                   l2420 0D4E                     l2166 1108                     l2430 1144  
                   l2414 118C                     l2190 076A                     l2182 0724  
                   l2174 06EE                     l2238 0950                     l2270 0FC2  
                   l2158 1012                     l2262 0BB2                     l2254 0B7A  
                   l2342 04A6                     l2350 04DC                     l2334 0472  
                   l2318 0314                     l2326 0406                     l2422 0D74  
                   l2502 0F82                     l2432 114A                     l2440 0DC6  
                   l2192 0778                     l2184 0730                     l2176 06F2  
                   l2168 06BC                     l2272 0FDC                     l2264 0BDE  
                   l2256 0B86                     l2248 0B4A                     l2344 04B8  
                   l2328 0420                     l2336 0480                     l2360 0506  
                   l2416 0D38                     l2504 0F9E                     l2600 0A20  
                   l2290 0EEA                     l2282 0EAA                     l2426 117E  
                   l2434 0D9A                     l2194 078A                     l2186 074E  
                   l2178 0700                     l2266 0BF2                     l2258 0B9A  
                   l2346 04C4                     l2338 0492                     l2370 0572  
                   l2362 052A                     l2418 0D40                     l2450 0E94  
                   l2442 0E56                     l2506 0FAA                     l2610 0A30  
                   l2602 0A22                     l2284 0EBA                     l2428 1180  
                   l1900 10EC                     l2460 0C22                     l2436 0D9E  
                   l2196 07B8                     l2188 0756                     l2348 04CC  
                   l2292 0228                     l2380 063A                     l2372 0596  
                   l2364 0538                     l2444 0E68                     l2620 0A46  
                   l2612 0A32                     l2604 0A24                     l2286 0EC8  
                   l1902 10F0                     l2470 0C4E                     l2462 0C24  
                   l2358 1156                     l2438 0DC2                     l2198 07D8  
                   l2294 0248                     l2390 0678                     l2382 0648  
                   l2374 05DE                     l2366 054A                     l2446 0E70  
                   l2622 0A52                     l2614 0A34                     l2606 0A2C  
                   l2288 0EDC                     l1904 10F4                     l2480 0C7C  
                   l2472 0C5E                     l2464 0C28                     l2456 0C0E  
                   l2296 0270                     l2384 065C                     l2368 054E  
                   l2448 0E78                     l2624 0A60                     l2616 0A36  
                   l2608 0A2E                     l2560 09C2                     l2490 0C9C  
                   l2482 0C84                     l2474 0C66                     l2466 0C3C  
                   l2458 0C12                     l2298 0290                     l2378 0616  
                   l2394 0684                     l2626 0A6C                     l2618 0A3A  
                   l2570 09FA                     l2562 09CC                     l2484 0C8C  
                   l2476 0C6E                     l2468 0C4C                     l2396 06A8  
                   l2388 066A                     l2492 106A                     l2580 0A0A  
                   l2572 09FC                     l2564 09E0                     l2556 09A8  
                   l2486 0C90                     l2478 0C76                     l2590 0A14  
                   l2582 0A0C                     l2574 0A04                     l2566 09EE  
                   l2558 09C0                     l2488 0C98                     l1936 1122  
                   l2592 0A16                     l2584 0A0E                     l2576 0A06  
                   l2568 09F2                     l2498 1134                     l2594 0A18  
                   l2586 0A10                     l2578 0A08                     l2596 0A1A  
                   l2588 0A12                     l2598 0A1E                     ?_pad 0025  
                   l1898 10E8                     STR_1 0223                     STR_2 020F  
                   STR_3 021B                     STR_4 0201                     u2007 10B6  
                   u1400 0700                     u1401 06FC                     u1330 0A92  
                   u1411 072A                     u1331 0A8E                     u1420 074E  
                   u1500 091E                     u1340 0AA4                     u1421 074A  
                   u1501 091A                     u1341 0AA0                     u1430 0778  
                   u1510 0966                     u1350 0ACC                     u1431 0774  
                   u1511 0962                     u1351 0AC8                     u1440 07B8  
                   u1360 0B02                     u1520 0B58                     u1600 025A  
                   u1441 07B4                     u1361 0AFE                     u1521 0B54  
                   u1450 0802                     u1370 0F7E                     u1530 0B7A  
                   u1610 0270                     u1451 07FE                     u1371 0F7A  
                   u1531 0B76                     u1611 026C                     u1460 0856  
                   u1380 102A                     u1540 0BD0                     u1700 0480  
                   u1620 029E                     u1461 0852                     u1381 1026  
                   u1541 0BCC                     u1701 047C                     u1621 029A  
                   u1390 06CE                     u1470 0888                     u1550 0BDE  
                   u1710 0492                     u1630 02BA                     u1391 06CA  
                   u1471 0884                     u1551 0BDA                     u1711 048E  
                   u1631 02B6                     u1480 08C6                     u1560 0FDC  
                   u1720 04A0                     u1640 02E8                     u1800 0D90  
                   u1481 08C2                     u1561 0FD8                     u1721 049C  
                   u1641 02E4                     u1801 0D8C                     u1570 0EBA  
                   u1810 0DBE                     u1490 08F0                     u1730 04B8  
                   u1650 02F6                     u1571 0EB6                     u1491 08EC  
                   u1731 04B4                     u1651 02F2                     u1580 0EEA  
                   u1820 0DE6                     u1660 0420                     u1740 052A  
                   u1581 0EE6                     u1661 041C                     u1741 0526  
                   u1830 0DF6                     u1670 043E                     u1590 0258  
                   u1750 0572                     u1831 0DF2                     u1671 043A  
                   u1591 0252                     u1751 056E                     u1840 0C22  
                   u1680 0458                     u1760 0596                     u1841 0C1E  
                   u1817 0DB4                     u1681 0454                     u1761 0592  
                   u1850 0C4C                     u1690 0472                     u1770 063A  
                   u1851 0C48                     u1827 0DDC                     u1691 046E  
                   u1771 0636                     u1860 0F9E                     u1861 0F9A  
                   u1957 113C                     u1967 0C54                     u1977 0C68  
                   u1987 0C78                     u1997 114C                     i2l41 119C  
                   i2l47 0E54                     _TMR0 000FD6                     _Pot1 0062  
                   _Pot2 0060                     abs@a 0027                     _dbuf 0150  
                   _flip 0064                     _main 09A8                     _dtoa 0228  
                   _home 1134                     _send 0EA8                     _prec 0056  
                   _nout 00AC                     pad@i 002C                     pad@p 0029  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf1 000FE7  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 002E  
                   fsr2l 000FD9                     btemp 006B                     start 0172  
             i2_sendData 1170          __end_ofi2_print 0E56          __end_ofi2_write 119E  
           print_int@num 00A6             ___param_bank 000000                    ??_abs 0029  
                  ??_pad 002B          __end_of___aodiv 0844                    ?_main 0001  
                  ?_dtoa 0030          __end_of___aomod 09A8                    ?_home 0001  
                  ?_send 0016                    i1l229 0162                    i2l111 0F3A  
                  i2l120 10E4                    i2l114 117C                    i2l123 1120  
                  i2l109 0F1C                    i2l235 0D14             vfpfcnvrt@fmt 0082  
                  _PORTA 000F80                    _PORTD 000F83                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISD 000F95                    _begin 0C0C  
                  _delay 005C                    _clear 1144                    _flags 0058  
   __end_ofi2_write8bits 1122                    _fputc 0A80                    _fputs 0F3C  
                  _print 0D9A                    pad@fp 0025                    _width 00AE  
                  _putch 119E                    dtoa@d 0032                    dtoa@i 0052  
                  dtoa@n 004A                    dtoa@p 0044                    dtoa@s 0048  
                  dtoa@w 0046                    _write 118A                    tablat 000FF5  
             i2send@mode 0002          __end_of_shutoff 0D38                    ttemp5 006C  
                  ttemp6 006F                    ttemp7 0073                    status 000FD8  
                  wtemp8 006C          __end_of_sprintf 0EA8          __initialization 1038  
  __end_ofi2_pulseEnable 10E6               i2print@chr 0006             __end_of_main 0A80  
           __end_of_dtoa 0506             __end_of_home 1144             __end_of_send 0EF2  
           ?_sendCommand 0001                   ??_main 0056                   ??_dtoa 003A  
                 ??_home 0019                   ??_send 0017            __activetblptr 000002  
             i2write@chr 0005                   ?_begin 0019                   ?_clear 0001  
                 _ADCON1 000FC1    __end_of_setRowOffsets 10FA                   ?_fputc 0015  
                 ?_fputs 001E                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 _CCPR2L 000FBB                   ?_print 001A                   ?_putch 0001  
                 ?_write 0001                   i1l1540 0026                   i1l1550 0070  
                 i1l1542 0034                   i1l1552 007C                   i1l1544 0042  
                 i1l1560 00B8             __displaymode 0066                   i1l1570 00F6  
                 i1l1562 00C6                   i1l1554 0092                   i1l1546 0044  
                 i1l1580 0152                   i1l1572 010A                   i1l1564 00D4  
                 i1l1556 00A8                   i1l1548 005A                   i1l1574 010E  
                 i1l1566 00D6                   i1l1558 00B0                   i1l1576 012C  
                 i1l1568 00DE                   i1l1578 0134                   i2l2410 0F34  
                 i2l2402 0EF4                   i2l2404 0F04                   i2l2406 0F12  
                 i2l2510 0DFC                   i2l2280 10DC                   i2l2408 0F26  
                 i2l2424 1172                   i2l2512 0E20                   i2l2274 10BE  
                 i2l2354 1110                   i2l2514 0E24                   i2l2276 10C8  
                 i2l2356 111C                   i2l2508 0DF8                   i2l2278 10D2  
                 i2l2454 1196                   i2l2630 0CD4                   i2l2640 0CFE  
                 i2l2632 0CE2                   i2l2634 0CE4                   i2l2636 0CE8  
                 i2l2628 0CC6                   i2l2638 0CF4                ??i2_print 0008  
      i2write8bits@value 0001                ??i2_write 0005                   i2_send 0EF2  
            ?i2_sendData 0001             vfprintf@cfmt 0094                ??___aodiv 0025  
              ??___aomod 0025                   clear_0 103E                   clear_1 104A  
                 clear_2 1056                   pad@buf 0027         __end_of_sendData 1162  
                 dtoa@fp 0030                   _strlen 1002                   fputc@c 0015  
                 fputs@c 0022                   fputs@i 0023                   fputs@s 001E  
           __mediumconst 0000              i2send@value 0003                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                   putch@c 0001  
       __end_of_vfprintf 0D9A                ??_shutoff 0008                ??_sprintf 0056  
             __accesstop 0080  __end_of__initialization 105C            sendData@value 0018  
          ___rparam_used 000001           print_int@s_num 0100             ?_pulseEnable 0001  
         __pcstackCOMRAM 0001            __end_of_begin 0CA6            __end_of_clear 1154  
          __end_of_fputc 0B4A            __end_of_fputs 0F80               _adc_sample 0018  
          __end_of_print 0DF8            __end_of_putch 11A0            __end_of_write 1194  
  __size_ofi2_write8bits 0014      __size_ofi2_sendData 000E                  ??_begin 001B  
                ??_clear 0019       __size_of_displayON 000C                  ??_fputc 0019  
                ??_fputs 0022                  ??_print 001C                  ??_putch 0015  
                ??_write 0019               __pbssBANK0 00A8               __pbssBANK1 0150  
             __pnvCOMRAM 0068                  ?i2_send 0002             i2_write8bits 110E  
     __size_of_setCursor 0042       __size_of_pin_setup 0012                  ?_strlen 0015  
   __size_of_sendCommand 000E       __size_of_print_int 002C       __size_of_vfpfcnvrt 01B6  
                i1u60_20 005A                  i1u60_21 0056                  i1u61_20 0092  
                i1u61_21 008E                  i1u62_20 00C6                  i1u62_21 00C2  
                i1u63_20 00D4                  i1u63_21 00D0                  i1u64_20 012C  
                i1u64_21 0128                  i1u65_20 0152                  i1u65_21 014E  
                i1u58_20 0034                  i1u58_21 0030                  i1u59_20 0042  
                i1u59_21 003E              pin_setup@dp 0015              pin_setup@sp 0017  
             begin@lines 0019                  i2_print 0DF8                  i2_write 1194  
              ?_sendData 0001          __size_ofi2_send 004A                  __Hparam 0000  
                __Lparam 0000                  ___aodiv 06BC        __end_of_displayON 118A  
                ___aomod 0844              ?_adc_sample 0001                ?_vfprintf 008E  
           __psmallconst 0200                  __pcinit 1038                  __ramtop 0200  
                __ptext0 09A8                  __ptext1 0F80                  __ptext2 106A  
                __ptext3 0E56                  __ptext4 0D38                  __ptext5 0506  
                __ptext6 0228                  __ptext7 0B4A                  __ptext8 1002  
                __ptext9 0F3C                _T0CONbits 000FD5          __size_of_strlen 0036  
                _counter 005E                _T2CONbits 000FCA             __size_of_abs 0040  
           __size_of_pad 00C2          __displaycontrol 0067                  _shutoff 0008  
                _sprintf 0E56           __pintcode_body 0CA6     end_of_initialization 105C  
      __end_of_setCursor 0FC2        __end_of_pin_setup 1134                  fputc@fp 0017  
          __Lmediumconst 0000                  int_func 0CA6                  fputs@fp 0020  
           ??i2_sendData 0004               ??_sendData 0018               _signalPORT 0068  
      __end_of_print_int 1096        __end_of_vfpfcnvrt 06BC                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
   __size_of_pulseEnable 0028               ??_vfprintf 0056                  strlen@a 0017  
                strlen@s 0015                _PORTBbits 000F81                _TRISCbits 000F94  
     __end_ofi2_sendData 117E   __size_ofi2_pulseEnable 0028          write8bits@value 0015  
           begin@dotsize 001A      __size_of_adc_sample 015A              _CCP2CONbits 000FBA  
         __end_ofi2_send 0F3C         sendCommand@value 0018               _write8bits 10FA  
 __size_of_setRowOffsets 0014              vfpfcnvrt@ap 0084              vfpfcnvrt@fp 0080  
            vfpfcnvrt@ll 0086           __end_of_strlen 1038      start_initialization 1038  
            __end_of_abs 1002              __end_of_pad 0C0C                 ??i2_send 0003  
            vfprintf@fmt 0090            i2_pulseEnable 10BE                 ??_strlen 0017  
            __pbssCOMRAM 0056            __pcstackBANK0 0080            __pcstackBANK1 0100  
       ___aodiv@dividend 0015            _setRowOffsets 10E6                 ?i2_print 0006  
               ?i2_write 0001                __pnvBANK0 00B0                _dtoa$1403 0042  
      __size_of_sendData 000E           ?i2_pulseEnable 0001                __pintcode 0008  
            ?_write8bits 0001                 ?___aodiv 0015                 ?___aomod 0015  
       ___aodiv@quotient 0027          i2sendData@value 0004             ??_adc_sample 0010  
              __numlines 0065            ??_sendCommand 0018              __pintcodelo 0018  
              _displayON 117E        __size_of_vfprintf 0062                begin@cols 001C  
            __smallconst 0200           __size_of_begin 009A              __rowOffsets 00A8  
               ?_shutoff 0001           __size_of_clear 0010             setCursor@col 001D  
           setCursor@row 0019           ?_setRowOffsets 0015                 ?_sprintf 0096  
         __size_of_fputc 00CA           __size_of_fputs 0044           __size_of_print 005E  
         __size_of_putch 0002           __size_of_write 000A       __end_of_adc_sample 0172  
              _setCursor 0F80                 _IPR1bits 000F9F                 _PIE1bits 000F9D  
              _pin_setup 1122                 i2u201_47 10DE                 i2u190_40 0CD4  
               i2u190_41 0CD0                 i2u191_40 0CE2                 i2u191_41 0CDE  
               i2u192_45 0CFC                 i2u192_46 0CFE                 i2u193_40 0D10  
               i2u193_41 0D0A                 _PIR1bits 000F9E                 i2u178_40 0F04  
               i2u194_40 0D12                 i2u178_41 0F00                 i2u179_40 0F34  
               i2u187_40 0E1C                 i2u179_41 0F30                 i2u187_47 0E12  
               i2u188_40 0E44                 i2u188_47 0E3A                 i2u189_40 0E54  
               i2u189_41 0E50                 _RCONbits 000FD0                _waitvalue 005A  
              _print_int 106A                _vfpfcnvrt 0506               ?_displayON 0001  
             _ADCON0bits 000FC2               _ADCON2bits 000FC0      __end_of_sendCommand 1170  
            _INTCON2bits 000FF1      __size_of_write8bits 0014         __size_ofi2_print 005E  
             ?_setCursor 0019         __size_ofi2_write 000A               ?_pin_setup 0015  
        ??i2_pulseEnable 0001                 __Hrparam 0000            ??_pulseEnable 0015  
             vfprintf@ap 0092                 __Lrparam 0000               vfprintf@fp 008E  
       __size_of___aodiv 0188         __size_of___aomod 0164               ?_print_int 00A6  
             ?_vfpfcnvrt 0080          ___aodiv@divisor 001D          ___aodiv@counter 0025  
               _dataPORT 00B0               sprintf@fmt 0098                send@value 0017  
        ??_setRowOffsets 0018                 __ptext10 0A80                 __ptext11 119E  
               __ptext20 0C0C                 __ptext12 0FC2                 __ptext21 10E6  
               __ptext13 0844                 __ptext30 0DF8                 __ptext22 117E  
               __ptext14 06BC                 __ptext31 1194                 __ptext23 1144  
               __ptext15 0D9A                 __ptext32 1170                 __ptext24 1162  
               __ptext16 118A                 __ptext33 0EF2                 __ptext25 0EA8  
               __ptext17 1154                 __ptext34 110E                 __ptext26 10FA  
               __ptext18 1122                 __ptext35 10BE                 __ptext27 1096  
               __ptext19 1134         __size_of_shutoff 0D30         __size_of_sprintf 0052  
          __size_of_main 00D8            __size_of_dtoa 02DE            __size_of_home 0010  
          __size_of_send 004A                 _sendData 1154            ?i2_write8bits 0001  
               int$flags 006B         __displayfunction 006A                 _vfprintf 0D38  
            _sendCommand 1162      __end_of_pulseEnable 10BE              ??_displayON 0019  
       ___aomod@dividend 0015               _INTCONbits 000FF2                 intlevel1 0000  
               intlevel2 0000                sprintf@ap 009E                 send@mode 0016  
      setRowOffsets@row0 0018        setRowOffsets@row1 0015        setRowOffsets@row2 0016  
      setRowOffsets@row3 0017              ??_setCursor 001B              ??_pin_setup 0019  
         ??i2_write8bits 0001             ??_write8bits 0015                 print@chr 001A  
        ___aomod@divisor 001D              ??_print_int 0056              ??_vfpfcnvrt 0054  
        ___aomod@counter 0025                 sprintf@f 00A0                 sprintf@s 0096  
               write@chr 0019             ___aodiv@sign 0026       __end_of_write8bits 110E  
           ___aomod@sign 0026              _pulseEnable 1096  



Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Jul 27 00:16:49 2022

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    49                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51  0000                     
    52                           ; Version 2.20
    53                           ; Generated 12/02/2020 GMT
    54                           ; 
    55                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F4321 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     
    87                           	psect	nvCOMRAM
    88  00006D                     __pnvCOMRAM:
    89                           	callstack 0
    90  00006D                     _signalPORT:
    91                           	callstack 0
    92  00006D                     	ds	2
    93                           
    94                           	psect	nvBANK0
    95  0000BC                     __pnvBANK0:
    96                           	callstack 0
    97  0000BC                     _dataPORT:
    98                           	callstack 0
    99  0000BC                     	ds	2
   100  0000BE                     __displayfunction:
   101                           	callstack 0
   102  0000BE                     	ds	1
   103  0000                     _PORTDbits	set	3971
   104  0000                     _TRISAbits	set	3986
   105  0000                     _TRISD	set	3989
   106  0000                     _TRISC	set	3988
   107  0000                     _PORTD	set	3971
   108  0000                     _PORTC	set	3970
   109  0000                     _ADRESL	set	4035
   110  0000                     _ADRESH	set	4036
   111  0000                     _RCONbits	set	4048
   112  0000                     _IPR1bits	set	3999
   113  0000                     _PIE1bits	set	3997
   114  0000                     _PIR1bits	set	3998
   115  0000                     _ADCON0bits	set	4034
   116  0000                     _ADCON2bits	set	4032
   117  0000                     _ADCON1	set	4033
   118  0000                     _INTCONbits	set	4082
   119                           
   120                           	psect	smallconst
   121  000200                     __psmallconst:
   122                           	callstack 0
   123  000200  00                 	db	0
   124  000201                     STR_5:
   125  000201  20                 	db	32
   126  000202  20                 	db	32
   127  000203  20                 	db	32
   128  000204  20                 	db	32
   129  000205  20                 	db	32
   130  000206  20                 	db	32
   131  000207  20                 	db	32
   132  000208  20                 	db	32
   133  000209  20                 	db	32
   134  00020A  20                 	db	32
   135  00020B  00                 	db	0
   136  00020C                     STR_20:
   137  00020C  25                 	db	37
   138  00020D  6C                 	db	108	;'l'
   139  00020E  64                 	db	100	;'d'
   140  00020F  00                 	db	0
   141  000210                     STR_14:
   142  000210  29                 	db	41
   143  000211  2A                 	db	42
   144  000212  28                 	db	40
   145  000213  00                 	db	0
   146  000214                     STR_8:
   147  000214  29                 	db	41
   148  000215  2B                 	db	43
   149  000216  28                 	db	40
   150  000217  00                 	db	0
   151  000218                     STR_2:
   152  000218  29                 	db	41
   153  000219  2D                 	db	45
   154  00021A  28                 	db	40
   155  00021B  00                 	db	0
   156  00021C                     STR_25:
   157  00021C  6C                 	db	108	;'l'
   158  00021D  69                 	db	105	;'i'
   159  00021E  00                 	db	0
   160  00021F  25                 	db	37
   161  000220  64                 	db	100	;'d'
   162  000221  00                 	db	0
   163  000222                     STR_3:
   164  000222  29                 	db	41
   165  000223  00                 	db	0
   166  000224                     STR_4:
   167  000224  3D                 	db	61	;'='
   168  000225  00                 	db	0
   169  000226  00                 	db	0	; dummy byte at the end
   170  0000                     
   171                           ; #config settings
   172                           
   173                           	psect	cinit
   174  001324                     __pcinit:
   175                           	callstack 0
   176  001324                     start_initialization:
   177                           	callstack 0
   178  001324                     __initialization:
   179                           	callstack 0
   180                           
   181                           ; Clear objects allocated to BANK1 (48 bytes)
   182  001324  EE01  F050         	lfsr	0,__pbssBANK1
   183  001328  0E30               	movlw	48
   184  00132A                     clear_0:
   185  00132A  6AEE               	clrf	postinc0,c
   186  00132C  06E8               	decf	wreg,f,c
   187  00132E  E1FD               	bnz	clear_0
   188                           
   189                           ; Clear objects allocated to BANK0 (16 bytes)
   190  001330  EE00  F0AC         	lfsr	0,__pbssBANK0
   191  001334  0E10               	movlw	16
   192  001336                     clear_1:
   193  001336  6AEE               	clrf	postinc0,c
   194  001338  06E8               	decf	wreg,f,c
   195  00133A  E1FD               	bnz	clear_1
   196                           
   197                           ; Clear objects allocated to COMRAM (15 bytes)
   198  00133C  EE00  F05E         	lfsr	0,__pbssCOMRAM
   199  001340  0E0F               	movlw	15
   200  001342                     clear_2:
   201  001342  6AEE               	clrf	postinc0,c
   202  001344  06E8               	decf	wreg,f,c
   203  001346  E1FD               	bnz	clear_2
   204  001348                     end_of_initialization:
   205                           	callstack 0
   206  001348                     __end_of__initialization:
   207                           	callstack 0
   208  001348  906F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   209  00134A  926F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   210  00134C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   211  00134E  6EF8               	movwf	tblptru,c
   212  001350  0100               	movlb	0
   213  001352  EFD7  F003         	goto	_main	;jump to C main() function
   214                           
   215                           	psect	bssCOMRAM
   216  00005E                     __pbssCOMRAM:
   217                           	callstack 0
   218  00005E                     _new_POT2:
   219                           	callstack 0
   220  00005E                     	ds	4
   221  000062                     _new_POT1:
   222                           	callstack 0
   223  000062                     	ds	4
   224  000066                     _prec:
   225                           	callstack 0
   226  000066                     	ds	2
   227  000068                     _flags:
   228                           	callstack 0
   229  000068                     	ds	2
   230  00006A                     __numlines:
   231                           	callstack 0
   232  00006A                     	ds	1
   233  00006B                     __displaymode:
   234                           	callstack 0
   235  00006B                     	ds	1
   236  00006C                     __displaycontrol:
   237                           	callstack 0
   238  00006C                     	ds	1
   239                           
   240                           	psect	bssBANK0
   241  0000AC                     __pbssBANK0:
   242                           	callstack 0
   243  0000AC                     _halfer2:
   244                           	callstack 0
   245  0000AC                     	ds	4
   246  0000B0                     _halfer1:
   247                           	callstack 0
   248  0000B0                     	ds	4
   249  0000B4                     _nout:
   250                           	callstack 0
   251  0000B4                     	ds	2
   252  0000B6                     _width:
   253                           	callstack 0
   254  0000B6                     	ds	2
   255  0000B8                     _POT2:
   256                           	callstack 0
   257  0000B8                     	ds	2
   258  0000BA                     _POT1:
   259                           	callstack 0
   260  0000BA                     	ds	2
   261                           
   262                           	psect	bssBANK1
   263  000150                     __pbssBANK1:
   264                           	callstack 0
   265  000150                     _TOTAL3:
   266                           	callstack 0
   267  000150                     	ds	4
   268  000154                     _TOTAL2:
   269                           	callstack 0
   270  000154                     	ds	4
   271  000158                     _TOTAL1:
   272                           	callstack 0
   273  000158                     	ds	4
   274  00015C                     __rowOffsets:
   275                           	callstack 0
   276  00015C                     	ds	4
   277  000160                     _dbuf:
   278                           	callstack 0
   279  000160                     	ds	32
   280                           
   281                           	psect	cstackBANK1
   282  000100                     __pcstackBANK1:
   283                           	callstack 0
   284  000100                     print_long@s_num:
   285                           	callstack 0
   286                           
   287                           ; 80 bytes @ 0x0
   288  000100                     	ds	80
   289                           
   290                           	psect	cstackBANK0
   291  000080                     __pcstackBANK0:
   292                           	callstack 0
   293  000080                     ??_vfpfcnvrt:
   294                           
   295                           ; 1 bytes @ 0x0
   296  000080                     	ds	14
   297  00008E                     ?_vfprintf:
   298                           	callstack 0
   299  00008E                     vfprintf@fp:
   300                           	callstack 0
   301                           
   302                           ; 2 bytes @ 0xE
   303  00008E                     	ds	2
   304  000090                     vfprintf@fmt:
   305                           	callstack 0
   306                           
   307                           ; 2 bytes @ 0x10
   308  000090                     	ds	2
   309  000092                     vfprintf@ap:
   310                           	callstack 0
   311                           
   312                           ; 2 bytes @ 0x12
   313  000092                     	ds	2
   314  000094                     vfprintf@cfmt:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0x14
   318  000094                     	ds	2
   319  000096                     ?_sprintf:
   320                           	callstack 0
   321  000096                     sprintf@s:
   322                           	callstack 0
   323                           
   324                           ; 2 bytes @ 0x16
   325  000096                     	ds	2
   326  000098                     sprintf@fmt:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0x18
   330  000098                     	ds	8
   331  0000A0                     sprintf@ap:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0x20
   335  0000A0                     	ds	2
   336  0000A2                     sprintf@f:
   337                           	callstack 0
   338                           
   339                           ; 6 bytes @ 0x22
   340  0000A2                     	ds	6
   341  0000A8                     print_long@num:
   342                           	callstack 0
   343                           
   344                           ; 4 bytes @ 0x28
   345  0000A8                     	ds	4
   346                           
   347                           	psect	cstackCOMRAM
   348  000001                     __pcstackCOMRAM:
   349                           	callstack 0
   350  000001                     ?___lmul:
   351                           	callstack 0
   352  000001                     ___lmul@multiplier:
   353                           	callstack 0
   354                           
   355                           ; 4 bytes @ 0x0
   356  000001                     	ds	4
   357  000005                     ___lmul@multiplicand:
   358                           	callstack 0
   359                           
   360                           ; 4 bytes @ 0x4
   361  000005                     	ds	4
   362  000009                     ___lmul@product:
   363                           	callstack 0
   364                           
   365                           ; 4 bytes @ 0x8
   366  000009                     	ds	4
   367  00000D                     ??_adc_sample:
   368                           
   369                           ; 1 bytes @ 0xC
   370  00000D                     	ds	4
   371  000011                     ?_strlen:
   372                           	callstack 0
   373  000011                     ?_strncmp:
   374                           	callstack 0
   375  000011                     ?___aodiv:
   376                           	callstack 0
   377  000011                     ?___aomod:
   378                           	callstack 0
   379  000011                     setRowOffsets@row1:
   380                           	callstack 0
   381  000011                     write8bits@value:
   382                           	callstack 0
   383  000011                     pin_setup@dp:
   384                           	callstack 0
   385  000011                     fputc@c:
   386                           	callstack 0
   387  000011                     strlen@s:
   388                           	callstack 0
   389  000011                     strncmp@_l:
   390                           	callstack 0
   391  000011                     ___aodiv@dividend:
   392                           	callstack 0
   393  000011                     ___aomod@dividend:
   394                           	callstack 0
   395                           
   396                           ; 8 bytes @ 0x10
   397  000011                     	ds	1
   398  000012                     setRowOffsets@row2:
   399                           	callstack 0
   400  000012                     send@mode:
   401                           	callstack 0
   402                           
   403                           ; 1 bytes @ 0x11
   404  000012                     	ds	1
   405  000013                     setRowOffsets@row3:
   406                           	callstack 0
   407  000013                     send@value:
   408                           	callstack 0
   409  000013                     pin_setup@sp:
   410                           	callstack 0
   411  000013                     fputc@fp:
   412                           	callstack 0
   413  000013                     strlen@a:
   414                           	callstack 0
   415  000013                     strncmp@_r:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x12
   419  000013                     	ds	1
   420  000014                     setRowOffsets@row0:
   421                           	callstack 0
   422  000014                     sendData@value:
   423                           	callstack 0
   424  000014                     sendCommand@value:
   425                           	callstack 0
   426                           
   427                           ; 1 bytes @ 0x13
   428  000014                     	ds	1
   429  000015                     ??_fputc:
   430  000015                     begin@lines:
   431                           	callstack 0
   432  000015                     write@chr:
   433                           	callstack 0
   434  000015                     setCursor@row:
   435                           	callstack 0
   436  000015                     strncmp@n:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x14
   440  000015                     	ds	1
   441  000016                     begin@dotsize:
   442                           	callstack 0
   443  000016                     print@chr:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x15
   447  000016                     	ds	1
   448  000017                     ??_begin:
   449  000017                     ??_setCursor:
   450  000017                     ??_strncmp:
   451                           
   452                           ; 1 bytes @ 0x16
   453  000017                     	ds	1
   454  000018                     begin@cols:
   455                           	callstack 0
   456  000018                     strncmp@l:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x17
   460  000018                     	ds	1
   461  000019                     setCursor@col:
   462                           	callstack 0
   463  000019                     ___aodiv@divisor:
   464                           	callstack 0
   465  000019                     ___aomod@divisor:
   466                           	callstack 0
   467                           
   468                           ; 8 bytes @ 0x18
   469  000019                     	ds	1
   470  00001A                     fputs@s:
   471                           	callstack 0
   472  00001A                     strncmp@r:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x19
   476  00001A                     	ds	2
   477  00001C                     fputs@fp:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0x1B
   481  00001C                     	ds	2
   482  00001E                     fputs@c:
   483                           	callstack 0
   484                           
   485                           ; 1 bytes @ 0x1D
   486  00001E                     	ds	1
   487  00001F                     fputs@i:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x1E
   491  00001F                     	ds	2
   492  000021                     ?_pad:
   493                           	callstack 0
   494  000021                     ___aodiv@counter:
   495                           	callstack 0
   496  000021                     ___aomod@counter:
   497                           	callstack 0
   498  000021                     pad@fp:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x20
   502  000021                     	ds	1
   503  000022                     ___aodiv@sign:
   504                           	callstack 0
   505  000022                     ___aomod@sign:
   506                           	callstack 0
   507                           
   508                           ; 1 bytes @ 0x21
   509  000022                     	ds	1
   510  000023                     ?_abs:
   511                           	callstack 0
   512  000023                     pad@buf:
   513                           	callstack 0
   514  000023                     abs@a:
   515                           	callstack 0
   516  000023                     ___aodiv@quotient:
   517                           	callstack 0
   518                           
   519                           ; 8 bytes @ 0x22
   520  000023                     	ds	2
   521  000025                     ??_abs:
   522  000025                     pad@p:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x24
   526  000025                     	ds	2
   527  000027                     ??_pad:
   528                           
   529                           ; 1 bytes @ 0x26
   530  000027                     	ds	1
   531  000028                     pad@i:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x27
   535  000028                     	ds	2
   536  00002A                     pad@w:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x29
   540  00002A                     	ds	2
   541  00002C                     ?_dtoa:
   542                           	callstack 0
   543  00002C                     dtoa@fp:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x2B
   547  00002C                     	ds	2
   548  00002E                     dtoa@d:
   549                           	callstack 0
   550                           
   551                           ; 8 bytes @ 0x2D
   552  00002E                     	ds	8
   553  000036                     ??_dtoa:
   554                           
   555                           ; 1 bytes @ 0x35
   556  000036                     	ds	8
   557  00003E                     _dtoa$1263:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x3D
   561  00003E                     	ds	2
   562  000040                     dtoa@p:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0x3F
   566  000040                     	ds	2
   567  000042                     dtoa@w:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x41
   571  000042                     	ds	2
   572  000044                     dtoa@s:
   573                           	callstack 0
   574                           
   575                           ; 2 bytes @ 0x43
   576  000044                     	ds	2
   577  000046                     dtoa@n:
   578                           	callstack 0
   579                           
   580                           ; 8 bytes @ 0x45
   581  000046                     	ds	8
   582  00004E                     dtoa@i:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x4D
   586  00004E                     	ds	2
   587  000050                     ?_vfpfcnvrt:
   588                           	callstack 0
   589  000050                     vfpfcnvrt@fp:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x4F
   593  000050                     	ds	2
   594  000052                     vfpfcnvrt@fmt:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x51
   598  000052                     	ds	2
   599  000054                     vfpfcnvrt@ap:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x53
   603  000054                     	ds	2
   604  000056                     vfpfcnvrt@ll:
   605                           	callstack 0
   606                           
   607                           ; 8 bytes @ 0x55
   608  000056                     	ds	8
   609  00005E                     
   610                           ; 1 bytes @ 0x5D
   611 ;;
   612 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   613 ;;
   614 ;; *************** function _main *****************
   615 ;; Defined at:
   616 ;;		line 23 in file "calc.c"
   617 ;; Parameters:    Size  Location     Type
   618 ;;		None
   619 ;; Auto vars:     Size  Location     Type
   620 ;;		None
   621 ;; Return value:  Size  Location     Type
   622 ;;                  2   82[None  ] int 
   623 ;; Registers used:
   624 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   625 ;; Tracked objects:
   626 ;;		On entry : 0/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMRAM   BANK0   BANK1
   630 ;;      Params:         0       0       0
   631 ;;      Locals:         0       0       0
   632 ;;      Temps:          0       0       0
   633 ;;      Totals:         0       0       0
   634 ;;Total ram usage:        0 bytes
   635 ;; Hardware stack levels required when called:   11
   636 ;; This function calls:
   637 ;;		_begin
   638 ;;		_clear
   639 ;;		_home
   640 ;;		_pin_setup
   641 ;;		_print
   642 ;;		_print_long
   643 ;;		_setCursor
   644 ;; This function is called by:
   645 ;;		Startup code after reset
   646 ;; This function uses a non-reentrant model
   647 ;;
   648                           
   649                           	psect	text0
   650  0007AE                     __ptext0:
   651                           	callstack 0
   652  0007AE                     _main:
   653                           	callstack 20
   654  0007AE                     
   655                           ;calc.c: 28:     TRISC = 0x00;
   656  0007AE  0E00               	movlw	0
   657  0007B0  6E94               	movwf	148,c	;volatile
   658                           
   659                           ;calc.c: 33:     TRISD = 0x18;
   660  0007B2  0E18               	movlw	24
   661  0007B4  6E95               	movwf	149,c	;volatile
   662  0007B6                     
   663                           ;calc.c: 42:     pin_setup(&PORTC, &PORTD);
   664  0007B6  0E82               	movlw	130
   665  0007B8  6E11               	movwf	pin_setup@dp^0,c
   666  0007BA  0E0F               	movlw	15
   667  0007BC  6E12               	movwf	(pin_setup@dp+1)^0,c
   668  0007BE  0E83               	movlw	131
   669  0007C0  6E13               	movwf	pin_setup@sp^0,c
   670  0007C2  0E0F               	movlw	15
   671  0007C4  6E14               	movwf	(pin_setup@sp+1)^0,c
   672  0007C6  ECD3  F009         	call	_pin_setup	;wreg free
   673  0007CA                     
   674                           ;calc.c: 45:     begin(16, 2, 0x00);
   675  0007CA  0E02               	movlw	2
   676  0007CC  6E15               	movwf	begin@lines^0,c
   677  0007CE  0E00               	movlw	0
   678  0007D0  6E16               	movwf	begin@dotsize^0,c
   679  0007D2  0E10               	movlw	16
   680  0007D4  ECC3  F007         	call	_begin
   681  0007D8                     
   682                           ;calc.c: 53:     ADCON1 = 0x0D;
   683  0007D8  0E0D               	movlw	13
   684  0007DA  6EC1               	movwf	193,c	;volatile
   685  0007DC                     
   686                           ;calc.c: 54:     TRISAbits.RA0 = 1;
   687  0007DC  8092               	bsf	146,0,c	;volatile
   688  0007DE                     
   689                           ;calc.c: 55:     TRISAbits.RA1 = 1;
   690  0007DE  8292               	bsf	146,1,c	;volatile
   691  0007E0                     
   692                           ;calc.c: 60:     ADCON2bits.ADCS = 0;
   693  0007E0  0EF8               	movlw	-8
   694  0007E2  16C0               	andwf	192,f,c	;volatile
   695  0007E4                     
   696                           ;calc.c: 61:     ADCON2bits.ACQT = 1;
   697  0007E4  50C0               	movf	192,w,c	;volatile
   698  0007E6  0BC7               	andlw	-57
   699  0007E8  0908               	iorlw	8
   700  0007EA  6EC0               	movwf	192,c	;volatile
   701  0007EC                     
   702                           ;calc.c: 62:     ADCON2bits.ADFM = 1;
   703  0007EC  8EC0               	bsf	192,7,c	;volatile
   704  0007EE                     
   705                           ;calc.c: 65:     ADCON0bits.CHS = 0;
   706  0007EE  0EC3               	movlw	-61
   707  0007F0  16C2               	andwf	194,f,c	;volatile
   708  0007F2                     
   709                           ;calc.c: 68:     ADCON0bits.ADON = 1;
   710  0007F2  80C2               	bsf	194,0,c	;volatile
   711  0007F4                     
   712                           ;calc.c: 76:     PIR1bits.ADIF = 0;
   713  0007F4  9C9E               	bcf	158,6,c	;volatile
   714  0007F6                     
   715                           ;calc.c: 77:     PIE1bits.ADIE = 1;
   716  0007F6  8C9D               	bsf	157,6,c	;volatile
   717  0007F8                     
   718                           ;calc.c: 78:     IPR1bits.ADIP = 1;
   719  0007F8  8C9F               	bsf	159,6,c	;volatile
   720  0007FA                     
   721                           ;calc.c: 79:     RCONbits.IPEN = 0;
   722  0007FA  9ED0               	bcf	208,7,c	;volatile
   723  0007FC                     
   724                           ;calc.c: 80:     INTCONbits.PEIE = 1;
   725  0007FC  8CF2               	bsf	242,6,c	;volatile
   726  0007FE                     
   727                           ;calc.c: 81:     INTCONbits.GIE = 1;
   728  0007FE  8EF2               	bsf	242,7,c	;volatile
   729  000800                     l2634:
   730                           
   731                           ;calc.c: 86:     {;calc.c: 88:         ADCON0bits.GO = 1;
   732  000800  82C2               	bsf	194,1,c	;volatile
   733  000802                     
   734                           ;calc.c: 90:         if (PORTDbits.RD3 == 1 && PORTDbits.RD4 == 0)
   735  000802  A683               	btfss	131,3,c	;volatile
   736  000804  EF06  F004         	goto	u2021
   737  000808  EF08  F004         	goto	u2020
   738  00080C                     u2021:
   739  00080C  EF5C  F004         	goto	l84
   740  000810                     u2020:
   741  000810  B883               	btfsc	131,4,c	;volatile
   742  000812  EF0D  F004         	goto	u2031
   743  000816  EF0F  F004         	goto	u2030
   744  00081A                     u2031:
   745  00081A  EF5C  F004         	goto	l84
   746  00081E                     u2030:
   747  00081E                     
   748                           ;calc.c: 91:         {;calc.c: 92:             home();
   749  00081E  ECDC  F009         	call	_home	;wreg free
   750  000822                     
   751                           ;calc.c: 93:             print("(");
   752  000822  0E12               	movlw	low (STR_14+2)
   753  000824  6E16               	movwf	print@chr^0,c
   754  000826  0E02               	movlw	high (STR_14+2)
   755  000828  6E17               	movwf	(print@chr+1)^0,c
   756  00082A  EC7C  F008         	call	_print	;wreg free
   757  00082E                     
   758                           ;calc.c: 94:             print_long(new_POT1);
   759  00082E  C062  F0A8         	movff	_new_POT1,print_long@num	;volatile
   760  000832  C063  F0A9         	movff	_new_POT1+1,print_long@num+1	;volatile
   761  000836  C064  F0AA         	movff	_new_POT1+2,print_long@num+2	;volatile
   762  00083A  C065  F0AB         	movff	_new_POT1+3,print_long@num+3	;volatile
   763  00083E  EC78  F009         	call	_print_long	;wreg free
   764  000842                     
   765                           ;calc.c: 95:             print(")-(");
   766  000842  0E18               	movlw	low STR_2
   767  000844  6E16               	movwf	print@chr^0,c
   768  000846  0E02               	movlw	high STR_2
   769  000848  6E17               	movwf	(print@chr+1)^0,c
   770  00084A  EC7C  F008         	call	_print	;wreg free
   771  00084E                     
   772                           ;calc.c: 96:             print_long(new_POT2);
   773  00084E  C05E  F0A8         	movff	_new_POT2,print_long@num	;volatile
   774  000852  C05F  F0A9         	movff	_new_POT2+1,print_long@num+1	;volatile
   775  000856  C060  F0AA         	movff	_new_POT2+2,print_long@num+2	;volatile
   776  00085A  C061  F0AB         	movff	_new_POT2+3,print_long@num+3	;volatile
   777  00085E  EC78  F009         	call	_print_long	;wreg free
   778  000862                     
   779                           ;calc.c: 97:             print(")");
   780  000862  0E22               	movlw	low STR_3
   781  000864  6E16               	movwf	print@chr^0,c
   782  000866  0E02               	movlw	high STR_3
   783  000868  6E17               	movwf	(print@chr+1)^0,c
   784  00086A  EC7C  F008         	call	_print	;wreg free
   785  00086E                     
   786                           ;calc.c: 98:             print("=");
   787  00086E  0E24               	movlw	low STR_4
   788  000870  6E16               	movwf	print@chr^0,c
   789  000872  0E02               	movlw	high STR_4
   790  000874  6E17               	movwf	(print@chr+1)^0,c
   791  000876  EC7C  F008         	call	_print	;wreg free
   792  00087A                     
   793                           ;calc.c: 99:             print("          ");
   794  00087A  0E01               	movlw	low STR_5
   795  00087C  6E16               	movwf	print@chr^0,c
   796  00087E  0E02               	movlw	high STR_5
   797  000880  6E17               	movwf	(print@chr+1)^0,c
   798  000882  EC7C  F008         	call	_print	;wreg free
   799  000886                     
   800                           ;calc.c: 100:             setCursor(0,1);
   801  000886  0E00               	movlw	0
   802  000888  6E16               	movwf	(setCursor@row+1)^0,c
   803  00088A  0E01               	movlw	1
   804  00088C  6E15               	movwf	setCursor@row^0,c
   805  00088E  0E00               	movlw	0
   806  000890  EC1C  F009         	call	_setCursor
   807  000894                     
   808                           ;calc.c: 101:             print_long(TOTAL1);
   809  000894  C158  F0A8         	movff	_TOTAL1,print_long@num	;volatile
   810  000898  C159  F0A9         	movff	_TOTAL1+1,print_long@num+1	;volatile
   811  00089C  C15A  F0AA         	movff	_TOTAL1+2,print_long@num+2	;volatile
   812  0008A0  C15B  F0AB         	movff	_TOTAL1+3,print_long@num+3	;volatile
   813  0008A4  EC78  F009         	call	_print_long	;wreg free
   814  0008A8                     
   815                           ;calc.c: 102:             print("          ");
   816  0008A8  0E01               	movlw	low STR_5
   817  0008AA  6E16               	movwf	print@chr^0,c
   818  0008AC  0E02               	movlw	high STR_5
   819  0008AE  6E17               	movwf	(print@chr+1)^0,c
   820  0008B0  EC7C  F008         	call	_print	;wreg free
   821                           
   822                           ;calc.c: 103:         }
   823  0008B4  EF00  F004         	goto	l2634
   824  0008B8                     l84:
   825  0008B8  B683               	btfsc	131,3,c	;volatile
   826  0008BA  EF61  F004         	goto	u2041
   827  0008BE  EF63  F004         	goto	u2040
   828  0008C2                     u2041:
   829  0008C2  EFB7  F004         	goto	l86
   830  0008C6                     u2040:
   831  0008C6  A883               	btfss	131,4,c	;volatile
   832  0008C8  EF68  F004         	goto	u2051
   833  0008CC  EF6A  F004         	goto	u2050
   834  0008D0                     u2051:
   835  0008D0  EFB7  F004         	goto	l86
   836  0008D4                     u2050:
   837  0008D4                     
   838                           ;calc.c: 105:         {;calc.c: 107:             home();
   839  0008D4  ECDC  F009         	call	_home	;wreg free
   840  0008D8                     
   841                           ;calc.c: 108:             print("(");
   842  0008D8  0E12               	movlw	low (STR_14+2)
   843  0008DA  6E16               	movwf	print@chr^0,c
   844  0008DC  0E02               	movlw	high (STR_14+2)
   845  0008DE  6E17               	movwf	(print@chr+1)^0,c
   846  0008E0  EC7C  F008         	call	_print	;wreg free
   847  0008E4                     
   848                           ;calc.c: 109:             print_long(new_POT1);
   849  0008E4  C062  F0A8         	movff	_new_POT1,print_long@num	;volatile
   850  0008E8  C063  F0A9         	movff	_new_POT1+1,print_long@num+1	;volatile
   851  0008EC  C064  F0AA         	movff	_new_POT1+2,print_long@num+2	;volatile
   852  0008F0  C065  F0AB         	movff	_new_POT1+3,print_long@num+3	;volatile
   853  0008F4  EC78  F009         	call	_print_long	;wreg free
   854  0008F8                     
   855                           ;calc.c: 110:             print(")+(");
   856  0008F8  0E14               	movlw	low STR_8
   857  0008FA  6E16               	movwf	print@chr^0,c
   858  0008FC  0E02               	movlw	high STR_8
   859  0008FE  6E17               	movwf	(print@chr+1)^0,c
   860  000900  EC7C  F008         	call	_print	;wreg free
   861  000904                     
   862                           ;calc.c: 111:             print_long(new_POT2);
   863  000904  C05E  F0A8         	movff	_new_POT2,print_long@num	;volatile
   864  000908  C05F  F0A9         	movff	_new_POT2+1,print_long@num+1	;volatile
   865  00090C  C060  F0AA         	movff	_new_POT2+2,print_long@num+2	;volatile
   866  000910  C061  F0AB         	movff	_new_POT2+3,print_long@num+3	;volatile
   867  000914  EC78  F009         	call	_print_long	;wreg free
   868  000918                     
   869                           ;calc.c: 112:             print(")");
   870  000918  0E22               	movlw	low STR_3
   871  00091A  6E16               	movwf	print@chr^0,c
   872  00091C  0E02               	movlw	high STR_3
   873  00091E  6E17               	movwf	(print@chr+1)^0,c
   874  000920  EC7C  F008         	call	_print	;wreg free
   875  000924                     
   876                           ;calc.c: 113:             print("=");
   877  000924  0E24               	movlw	low STR_4
   878  000926  6E16               	movwf	print@chr^0,c
   879  000928  0E02               	movlw	high STR_4
   880  00092A  6E17               	movwf	(print@chr+1)^0,c
   881  00092C  EC7C  F008         	call	_print	;wreg free
   882  000930                     
   883                           ;calc.c: 114:             print("          ");
   884  000930  0E01               	movlw	low STR_5
   885  000932  6E16               	movwf	print@chr^0,c
   886  000934  0E02               	movlw	high STR_5
   887  000936  6E17               	movwf	(print@chr+1)^0,c
   888  000938  EC7C  F008         	call	_print	;wreg free
   889  00093C                     
   890                           ;calc.c: 115:             setCursor(0,1);
   891  00093C  0E00               	movlw	0
   892  00093E  6E16               	movwf	(setCursor@row+1)^0,c
   893  000940  0E01               	movlw	1
   894  000942  6E15               	movwf	setCursor@row^0,c
   895  000944  0E00               	movlw	0
   896  000946  EC1C  F009         	call	_setCursor
   897  00094A                     
   898                           ;calc.c: 116:             print_long(TOTAL2);
   899  00094A  C154  F0A8         	movff	_TOTAL2,print_long@num	;volatile
   900  00094E  C155  F0A9         	movff	_TOTAL2+1,print_long@num+1	;volatile
   901  000952  C156  F0AA         	movff	_TOTAL2+2,print_long@num+2	;volatile
   902  000956  C157  F0AB         	movff	_TOTAL2+3,print_long@num+3	;volatile
   903  00095A  EC78  F009         	call	_print_long	;wreg free
   904  00095E                     
   905                           ;calc.c: 117:             print("          ");
   906  00095E  0E01               	movlw	low STR_5
   907  000960  6E16               	movwf	print@chr^0,c
   908  000962  0E02               	movlw	high STR_5
   909  000964  6E17               	movwf	(print@chr+1)^0,c
   910  000966  EC7C  F008         	call	_print	;wreg free
   911                           
   912                           ;calc.c: 118:         }
   913  00096A  EF00  F004         	goto	l2634
   914  00096E                     l86:
   915  00096E  A683               	btfss	131,3,c	;volatile
   916  000970  EFBC  F004         	goto	u2061
   917  000974  EFBE  F004         	goto	u2060
   918  000978                     u2061:
   919  000978  EF12  F005         	goto	l2710
   920  00097C                     u2060:
   921  00097C  A883               	btfss	131,4,c	;volatile
   922  00097E  EFC3  F004         	goto	u2071
   923  000982  EFC5  F004         	goto	u2070
   924  000986                     u2071:
   925  000986  EF12  F005         	goto	l2710
   926  00098A                     u2070:
   927  00098A                     
   928                           ;calc.c: 120:         {;calc.c: 121:             home();
   929  00098A  ECDC  F009         	call	_home	;wreg free
   930  00098E                     
   931                           ;calc.c: 122:             print("(");
   932  00098E  0E12               	movlw	low (STR_14+2)
   933  000990  6E16               	movwf	print@chr^0,c
   934  000992  0E02               	movlw	high (STR_14+2)
   935  000994  6E17               	movwf	(print@chr+1)^0,c
   936  000996  EC7C  F008         	call	_print	;wreg free
   937  00099A                     
   938                           ;calc.c: 123:             print_long(new_POT1);
   939  00099A  C062  F0A8         	movff	_new_POT1,print_long@num	;volatile
   940  00099E  C063  F0A9         	movff	_new_POT1+1,print_long@num+1	;volatile
   941  0009A2  C064  F0AA         	movff	_new_POT1+2,print_long@num+2	;volatile
   942  0009A6  C065  F0AB         	movff	_new_POT1+3,print_long@num+3	;volatile
   943  0009AA  EC78  F009         	call	_print_long	;wreg free
   944  0009AE                     
   945                           ;calc.c: 124:             print(")*(");
   946  0009AE  0E10               	movlw	low STR_14
   947  0009B0  6E16               	movwf	print@chr^0,c
   948  0009B2  0E02               	movlw	high STR_14
   949  0009B4  6E17               	movwf	(print@chr+1)^0,c
   950  0009B6  EC7C  F008         	call	_print	;wreg free
   951  0009BA                     
   952                           ;calc.c: 125:             print_long(new_POT2);
   953  0009BA  C05E  F0A8         	movff	_new_POT2,print_long@num	;volatile
   954  0009BE  C05F  F0A9         	movff	_new_POT2+1,print_long@num+1	;volatile
   955  0009C2  C060  F0AA         	movff	_new_POT2+2,print_long@num+2	;volatile
   956  0009C6  C061  F0AB         	movff	_new_POT2+3,print_long@num+3	;volatile
   957  0009CA  EC78  F009         	call	_print_long	;wreg free
   958  0009CE                     
   959                           ;calc.c: 126:             print(")");
   960  0009CE  0E22               	movlw	low STR_3
   961  0009D0  6E16               	movwf	print@chr^0,c
   962  0009D2  0E02               	movlw	high STR_3
   963  0009D4  6E17               	movwf	(print@chr+1)^0,c
   964  0009D6  EC7C  F008         	call	_print	;wreg free
   965  0009DA                     
   966                           ;calc.c: 127:             print("=");
   967  0009DA  0E24               	movlw	low STR_4
   968  0009DC  6E16               	movwf	print@chr^0,c
   969  0009DE  0E02               	movlw	high STR_4
   970  0009E0  6E17               	movwf	(print@chr+1)^0,c
   971  0009E2  EC7C  F008         	call	_print	;wreg free
   972  0009E6                     
   973                           ;calc.c: 128:             print("          ");
   974  0009E6  0E01               	movlw	low STR_5
   975  0009E8  6E16               	movwf	print@chr^0,c
   976  0009EA  0E02               	movlw	high STR_5
   977  0009EC  6E17               	movwf	(print@chr+1)^0,c
   978  0009EE  EC7C  F008         	call	_print	;wreg free
   979  0009F2                     
   980                           ;calc.c: 129:             setCursor(0,1);
   981  0009F2  0E00               	movlw	0
   982  0009F4  6E16               	movwf	(setCursor@row+1)^0,c
   983  0009F6  0E01               	movlw	1
   984  0009F8  6E15               	movwf	setCursor@row^0,c
   985  0009FA  0E00               	movlw	0
   986  0009FC  EC1C  F009         	call	_setCursor
   987  000A00                     
   988                           ;calc.c: 130:             print_long(TOTAL3);
   989  000A00  C150  F0A8         	movff	_TOTAL3,print_long@num	;volatile
   990  000A04  C151  F0A9         	movff	_TOTAL3+1,print_long@num+1	;volatile
   991  000A08  C152  F0AA         	movff	_TOTAL3+2,print_long@num+2	;volatile
   992  000A0C  C153  F0AB         	movff	_TOTAL3+3,print_long@num+3	;volatile
   993  000A10  EC78  F009         	call	_print_long	;wreg free
   994  000A14                     
   995                           ;calc.c: 131:             print("          ");
   996  000A14  0E01               	movlw	low STR_5
   997  000A16  6E16               	movwf	print@chr^0,c
   998  000A18  0E02               	movlw	high STR_5
   999  000A1A  6E17               	movwf	(print@chr+1)^0,c
  1000  000A1C  EC7C  F008         	call	_print	;wreg free
  1001                           
  1002                           ;calc.c: 132:         }
  1003  000A20  EF00  F004         	goto	l2634
  1004  000A24                     l2710:
  1005                           
  1006                           ;calc.c: 134:         {;calc.c: 135:             clear();
  1007  000A24  ECE4  F009         	call	_clear	;wreg free
  1008  000A28  EF00  F004         	goto	l2634
  1009  000A2C  EFB9  F000         	goto	start
  1010  000A30                     __end_of_main:
  1011                           	callstack 0
  1012                           
  1013 ;; *************** function _setCursor *****************
  1014 ;; Defined at:
  1015 ;;		line 266 in file "LiquidCrystal.c"
  1016 ;; Parameters:    Size  Location     Type
  1017 ;;  col             1    wreg     unsigned char 
  1018 ;;  row             2   20[COMRAM] unsigned int 
  1019 ;; Auto vars:     Size  Location     Type
  1020 ;;  col             1   24[COMRAM] unsigned char 
  1021 ;; Return value:  Size  Location     Type
  1022 ;;                  1    wreg      void 
  1023 ;; Registers used:
  1024 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1025 ;; Tracked objects:
  1026 ;;		On entry : 0/0
  1027 ;;		On exit  : 0/0
  1028 ;;		Unchanged: 0/0
  1029 ;; Data sizes:     COMRAM   BANK0   BANK1
  1030 ;;      Params:         2       0       0
  1031 ;;      Locals:         1       0       0
  1032 ;;      Temps:          2       0       0
  1033 ;;      Totals:         5       0       0
  1034 ;;Total ram usage:        5 bytes
  1035 ;; Hardware stack levels used:    1
  1036 ;; Hardware stack levels required when called:    6
  1037 ;; This function calls:
  1038 ;;		_sendCommand
  1039 ;; This function is called by:
  1040 ;;		_main
  1041 ;; This function uses a non-reentrant model
  1042 ;;
  1043                           
  1044                           	psect	text1
  1045  001238                     __ptext1:
  1046                           	callstack 0
  1047  001238                     _setCursor:
  1048                           	callstack 24
  1049                           
  1050                           ;incstack = 0
  1051                           ;setCursor@col stored from wreg
  1052  001238  6E19               	movwf	setCursor@col^0,c
  1053  00123A                     
  1054                           ;LiquidCrystal.c: 266:     void setCursor(unsigned char col, unsigned row);LiquidCrystal
      +                          .c: 267:     {;LiquidCrystal.c: 270:         if (row >= _numlines)
  1055  00123A  506A               	movf	__numlines^0,w,c
  1056  00123C  6E17               	movwf	??_setCursor^0,c
  1057  00123E  6A18               	clrf	(??_setCursor+1)^0,c
  1058  001240  5017               	movf	??_setCursor^0,w,c
  1059  001242  5C15               	subwf	setCursor@row^0,w,c
  1060  001244  5018               	movf	(??_setCursor+1)^0,w,c
  1061  001246  5816               	subwfb	(setCursor@row+1)^0,w,c
  1062  001248  A0D8               	btfss	status,0,c
  1063  00124A  EF29  F009         	goto	u2011
  1064  00124E  EF2B  F009         	goto	u2010
  1065  001252                     u2011:
  1066  001252  EF31  F009         	goto	l2594
  1067  001256                     u2010:
  1068  001256                     
  1069                           ;LiquidCrystal.c: 271:             row = _numlines - 1;
  1070  001256  0EFF               	movlw	255
  1071  001258  246A               	addwf	__numlines^0,w,c
  1072  00125A  6E15               	movwf	setCursor@row^0,c
  1073  00125C  6A16               	clrf	(setCursor@row+1)^0,c
  1074  00125E  0EFF               	movlw	255
  1075  001260  2216               	addwfc	(setCursor@row+1)^0,f,c
  1076  001262                     l2594:
  1077                           
  1078                           ;LiquidCrystal.c: 273:         sendCommand(0x80 | (col + _rowOffsets[row]));
  1079  001262  0E5C               	movlw	low __rowOffsets
  1080  001264  2415               	addwf	setCursor@row^0,w,c
  1081  001266  6ED9               	movwf	fsr2l,c
  1082  001268  0E01               	movlw	high __rowOffsets
  1083  00126A  2016               	addwfc	(setCursor@row+1)^0,w,c
  1084  00126C  6EDA               	movwf	fsr2h,c
  1085  00126E  50DF               	movf	indf2,w,c
  1086  001270  2419               	addwf	setCursor@col^0,w,c
  1087  001272  0980               	iorlw	128
  1088  001274  ECF3  F009         	call	_sendCommand
  1089  001278  0012               	return		;funcret
  1090  00127A                     __end_of_setCursor:
  1091                           	callstack 0
  1092                           
  1093 ;; *************** function _print_long *****************
  1094 ;; Defined at:
  1095 ;;		line 156 in file "LiquidCrystal.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;  num             4   40[BANK0 ] long 
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;  s_num          80    0[BANK1 ] unsigned char [80]
  1100 ;; Return value:  Size  Location     Type
  1101 ;;                  1    wreg      void 
  1102 ;; Registers used:
  1103 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1104 ;; Tracked objects:
  1105 ;;		On entry : 0/0
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMRAM   BANK0   BANK1
  1109 ;;      Params:         0       4       0
  1110 ;;      Locals:         0       0      80
  1111 ;;      Temps:          0       0       0
  1112 ;;      Totals:         0       4      80
  1113 ;;Total ram usage:       84 bytes
  1114 ;; Hardware stack levels used:    1
  1115 ;; Hardware stack levels required when called:   10
  1116 ;; This function calls:
  1117 ;;		_print
  1118 ;;		_sprintf
  1119 ;; This function is called by:
  1120 ;;		_main
  1121 ;; This function uses a non-reentrant model
  1122 ;;
  1123                           
  1124                           	psect	text2
  1125  0012F0                     __ptext2:
  1126                           	callstack 0
  1127  0012F0                     _print_long:
  1128                           	callstack 20
  1129  0012F0                     
  1130                           ;LiquidCrystal.c: 156:         void print_long(long num);LiquidCrystal.c: 157:     {;Liq
      +                          uidCrystal.c: 158:         char s_num[80];;LiquidCrystal.c: 159:         sprintf(s_num, 
      +                          "%ld", num);
  1131  0012F0  0E00               	movlw	low print_long@s_num
  1132  0012F2  0100               	movlb	0	; () banked
  1133  0012F4  6F96               	movwf	sprintf@s& (0+255),b
  1134  0012F6  0E01               	movlw	high print_long@s_num
  1135  0012F8  6F97               	movwf	(sprintf@s+1)& (0+255),b
  1136  0012FA  0E0C               	movlw	low STR_20
  1137  0012FC  6F98               	movwf	sprintf@fmt& (0+255),b
  1138  0012FE  0E02               	movlw	high STR_20
  1139  001300  6F99               	movwf	(sprintf@fmt+1)& (0+255),b
  1140  001302  C0A8  F09A         	movff	print_long@num,?_sprintf+4
  1141  001306  C0A9  F09B         	movff	print_long@num+1,?_sprintf+5
  1142  00130A  C0AA  F09C         	movff	print_long@num+2,?_sprintf+6
  1143  00130E  C0AB  F09D         	movff	print_long@num+3,?_sprintf+7
  1144  001312  ECAB  F008         	call	_sprintf	;wreg free
  1145                           
  1146                           ;LiquidCrystal.c: 161:         print(s_num);
  1147  001316  0E00               	movlw	low print_long@s_num
  1148  001318  6E16               	movwf	print@chr^0,c
  1149  00131A  0E01               	movlw	high print_long@s_num
  1150  00131C  6E17               	movwf	(print@chr+1)^0,c
  1151  00131E  EC7C  F008         	call	_print	;wreg free
  1152  001322  0012               	return		;funcret
  1153  001324                     __end_of_print_long:
  1154                           	callstack 0
  1155                           
  1156 ;; *************** function _sprintf *****************
  1157 ;; Defined at:
  1158 ;;		line 9 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/nf_sprintf.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;  s               2   22[BANK0 ] PTR unsigned char 
  1161 ;;		 -> print_long@s_num(80), print_int@s_num(80), 
  1162 ;;  fmt             2   24[BANK0 ] PTR const unsigned char 
  1163 ;;		 -> STR_20(4), STR_19(3), 
  1164 ;; Auto vars:     Size  Location     Type
  1165 ;;  f               6   34[BANK0 ] struct _IO_FILE
  1166 ;;  ap              2   32[BANK0 ] PTR void [1]
  1167 ;;		 -> ?_sprintf(2), 
  1168 ;;  ret             2    0        int 
  1169 ;; Return value:  Size  Location     Type
  1170 ;;                  2   22[BANK0 ] int 
  1171 ;; Registers used:
  1172 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1173 ;; Tracked objects:
  1174 ;;		On entry : 0/0
  1175 ;;		On exit  : 0/0
  1176 ;;		Unchanged: 0/0
  1177 ;; Data sizes:     COMRAM   BANK0   BANK1
  1178 ;;      Params:         0       8       0
  1179 ;;      Locals:         0      10       0
  1180 ;;      Temps:          0       0       0
  1181 ;;      Totals:         0      18       0
  1182 ;;Total ram usage:       18 bytes
  1183 ;; Hardware stack levels used:    1
  1184 ;; Hardware stack levels required when called:    9
  1185 ;; This function calls:
  1186 ;;		_vfprintf
  1187 ;; This function is called by:
  1188 ;;		_print_long
  1189 ;;		_print_int
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           	psect	text3
  1194  001156                     __ptext3:
  1195                           	callstack 0
  1196  001156                     _sprintf:
  1197                           	callstack 20
  1198  001156  0E9A               	movlw	low (?_sprintf+4)
  1199  001158  0100               	movlb	0	; () banked
  1200  00115A  6FA0               	movwf	sprintf@ap& (0+255),b
  1201  00115C  0E00               	movlw	high (?_sprintf+4)
  1202  00115E  6FA1               	movwf	(sprintf@ap+1)& (0+255),b
  1203  001160  C096  F0A2         	movff	sprintf@s,sprintf@f
  1204  001164  C097  F0A3         	movff	sprintf@s+1,sprintf@f+1
  1205  001168                     
  1206                           ; BSR set to: 0
  1207  001168  0E00               	movlw	0
  1208  00116A  6FA5               	movwf	(sprintf@f+3)& (0+255),b
  1209  00116C  0E00               	movlw	0
  1210  00116E  6FA4               	movwf	(sprintf@f+2)& (0+255),b
  1211  001170                     
  1212                           ; BSR set to: 0
  1213  001170  0E00               	movlw	0
  1214  001172  6FA7               	movwf	(sprintf@f+5)& (0+255),b
  1215  001174  0E00               	movlw	0
  1216  001176  6FA6               	movwf	(sprintf@f+4)& (0+255),b
  1217  001178                     
  1218                           ; BSR set to: 0
  1219  001178  0EA2               	movlw	low sprintf@f
  1220  00117A  6F8E               	movwf	vfprintf@fp& (0+255),b
  1221  00117C  0E00               	movlw	high sprintf@f
  1222  00117E  6F8F               	movwf	(vfprintf@fp+1)& (0+255),b
  1223  001180  C098  F090         	movff	sprintf@fmt,vfprintf@fmt
  1224  001184  C099  F091         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1225  001188  0EA0               	movlw	low sprintf@ap
  1226  00118A  6F92               	movwf	vfprintf@ap& (0+255),b
  1227  00118C  0E00               	movlw	high sprintf@ap
  1228  00118E  6F93               	movwf	(vfprintf@ap+1)& (0+255),b
  1229  001190  EC4B  F008         	call	_vfprintf	;wreg free
  1230  001194  0100               	movlb	0	; () banked
  1231  001196  51A4               	movf	(sprintf@f+2)& (0+255),w,b
  1232  001198  2596               	addwf	sprintf@s& (0+255),w,b
  1233  00119A  6ED9               	movwf	fsr2l,c
  1234  00119C  51A5               	movf	(sprintf@f+3)& (0+255),w,b
  1235  00119E  2197               	addwfc	(sprintf@s+1)& (0+255),w,b
  1236  0011A0  6EDA               	movwf	fsr2h,c
  1237  0011A2  0E00               	movlw	0
  1238  0011A4  6EDF               	movwf	indf2,c
  1239  0011A6                     
  1240                           ; BSR set to: 0
  1241  0011A6  0012               	return		;funcret
  1242  0011A8                     __end_of_sprintf:
  1243                           	callstack 0
  1244                           
  1245 ;; *************** function _vfprintf *****************
  1246 ;; Defined at:
  1247 ;;		line 1368 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;  fp              2   14[BANK0 ] PTR struct _IO_FILE
  1250 ;;		 -> sprintf@f(6), 
  1251 ;;  fmt             2   16[BANK0 ] PTR const unsigned char 
  1252 ;;		 -> STR_20(4), STR_19(3), 
  1253 ;;  ap              2   18[BANK0 ] PTR PTR void 
  1254 ;;		 -> sprintf@ap(2), 
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;  cfmt            2   20[BANK0 ] PTR unsigned char 
  1257 ;;		 -> STR_20(4), STR_19(3), 
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  2   14[BANK0 ] int 
  1260 ;; Registers used:
  1261 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMRAM   BANK0   BANK1
  1267 ;;      Params:         0       6       0
  1268 ;;      Locals:         0       2       0
  1269 ;;      Temps:          0       0       0
  1270 ;;      Totals:         0       8       0
  1271 ;;Total ram usage:        8 bytes
  1272 ;; Hardware stack levels used:    1
  1273 ;; Hardware stack levels required when called:    8
  1274 ;; This function calls:
  1275 ;;		_vfpfcnvrt
  1276 ;; This function is called by:
  1277 ;;		_sprintf
  1278 ;; This function uses a non-reentrant model
  1279 ;;
  1280                           
  1281                           	psect	text4
  1282  001096                     __ptext4:
  1283                           	callstack 0
  1284  001096                     _vfprintf:
  1285                           	callstack 20
  1286  001096                     
  1287                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.20/pic/sources/c99/
      +                          common/doprnt.c: 1369: {;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt
      +                          .c: 1371:     char *cfmt;;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprn
      +                          t.c: 1373:     cfmt = (char *)fmt;
  1288  001096  C090  F094         	movff	vfprintf@fmt,vfprintf@cfmt
  1289  00109A  C091  F095         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1290  00109E                     
  1291                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  1292  00109E  0E00               	movlw	0
  1293  0010A0  0100               	movlb	0	; () banked
  1294  0010A2  6FB5               	movwf	(_nout+1)& (0+255),b
  1295  0010A4  0E00               	movlw	0
  1296  0010A6  6FB4               	movwf	_nout& (0+255),b
  1297                           
  1298                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
  1299  0010A8  EF69  F008         	goto	l2518
  1300  0010AC                     l2516:
  1301                           
  1302                           ; BSR set to: 0
  1303                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1376:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
  1304  0010AC  C08E  F050         	movff	vfprintf@fp,vfpfcnvrt@fp
  1305  0010B0  C08F  F051         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1306  0010B4  0E94               	movlw	low vfprintf@cfmt
  1307  0010B6  6E52               	movwf	vfpfcnvrt@fmt^0,c
  1308  0010B8  0E00               	movlw	high vfprintf@cfmt
  1309  0010BA  6E53               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1310  0010BC  C092  F054         	movff	vfprintf@ap,vfpfcnvrt@ap
  1311  0010C0  C093  F055         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1312  0010C4  EC83  F002         	call	_vfpfcnvrt	;wreg free
  1313  0010C8  5050               	movf	?_vfpfcnvrt^0,w,c
  1314  0010CA  0100               	movlb	0	; () banked
  1315  0010CC  27B4               	addwf	_nout& (0+255),f,b
  1316  0010CE  5051               	movf	(?_vfpfcnvrt+1)^0,w,c
  1317  0010D0  23B5               	addwfc	(_nout+1)& (0+255),f,b
  1318  0010D2                     l2518:
  1319                           
  1320                           ; BSR set to: 0
  1321                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
  1322  0010D2  C094  FFF6         	movff	vfprintf@cfmt,tblptrl
  1323  0010D6  C095  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1324  0010DA                     	if	0	;tblptru may be non-zero
  1325  0010DA                     	endif
  1326  0010DA                     	if	0	;tblptru may be non-zero
  1327  0010DA                     	endif
  1328  0010DA  0008               	tblrd		*
  1329  0010DC  50F5               	movf	tablat,w,c
  1330  0010DE  0900               	iorlw	0
  1331  0010E0  A4D8               	btfss	status,2,c
  1332  0010E2  EF75  F008         	goto	u1951
  1333  0010E6  EF77  F008         	goto	u1950
  1334  0010EA                     u1951:
  1335  0010EA  EF56  F008         	goto	l2516
  1336  0010EE                     u1950:
  1337  0010EE                     
  1338                           ; BSR set to: 0
  1339                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1378:     return nou
      +                          t;
  1340  0010EE  C0B4  F08E         	movff	_nout,?_vfprintf
  1341  0010F2  C0B5  F08F         	movff	_nout+1,?_vfprintf+1
  1342  0010F6                     
  1343                           ; BSR set to: 0
  1344  0010F6  0012               	return		;funcret
  1345  0010F8                     __end_of_vfprintf:
  1346                           	callstack 0
  1347                           
  1348 ;; *************** function _vfpfcnvrt *****************
  1349 ;; Defined at:
  1350 ;;		line 670 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c"
  1351 ;; Parameters:    Size  Location     Type
  1352 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  1353 ;;		 -> sprintf@f(6), 
  1354 ;;  fmt             2   81[COMRAM] PTR PTR unsigned char 
  1355 ;;		 -> vfprintf@cfmt(2), 
  1356 ;;  ap              2   83[COMRAM] PTR PTR void 
  1357 ;;		 -> sprintf@ap(2), 
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;  ll              8   85[COMRAM] long long 
  1360 ;;  llu             8    0        unsigned long long 
  1361 ;;  f               4    0        unsigned long long 
  1362 ;;  vp              3    0        PTR void 
  1363 ;;  ct              3    0        unsigned char [3]
  1364 ;;  cp              3    0        PTR unsigned char 
  1365 ;;  i               2    0        int 
  1366 ;;  done            2    0        int 
  1367 ;;  c               1    0        unsigned char 
  1368 ;; Return value:  Size  Location     Type
  1369 ;;                  2   79[COMRAM] int 
  1370 ;; Registers used:
  1371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1372 ;; Tracked objects:
  1373 ;;		On entry : 0/0
  1374 ;;		On exit  : 0/0
  1375 ;;		Unchanged: 0/0
  1376 ;; Data sizes:     COMRAM   BANK0   BANK1
  1377 ;;      Params:         6       0       0
  1378 ;;      Locals:         8       0       0
  1379 ;;      Temps:          0      14       0
  1380 ;;      Totals:        14      14       0
  1381 ;;Total ram usage:       28 bytes
  1382 ;; Hardware stack levels used:    1
  1383 ;; Hardware stack levels required when called:    7
  1384 ;; This function calls:
  1385 ;;		_dtoa
  1386 ;;		_fputc
  1387 ;;		_strncmp
  1388 ;; This function is called by:
  1389 ;;		_vfprintf
  1390 ;; This function uses a non-reentrant model
  1391 ;;
  1392                           
  1393                           	psect	text5
  1394  000506                     __ptext5:
  1395                           	callstack 0
  1396  000506                     _vfpfcnvrt:
  1397                           	callstack 20
  1398  000506                     
  1399                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 670: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.20/pic/sources/c
      +                          99/common/doprnt.c: 671: {;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/dopr
      +                          nt.c: 672:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.20/pic/sources/c99/com
      +                          mon/doprnt.c: 673:     int done, i;;/Applications/microchip/xc8/v2.20/pic/sources/c99/co
      +                          mmon/doprnt.c: 674:     long long ll;;/Applications/microchip/xc8/v2.20/pic/sources/c99/
      +                          common/doprnt.c: 675:     unsigned long long llu;
  1400  000506  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1401  00050A  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1402  00050E  CFDE FFF6          	movff	postinc2,tblptrl
  1403  000512  CFDD FFF7          	movff	postdec2,tblptrh
  1404  000516                     	if	0	;tblptru may be non-zero
  1405  000516                     	endif
  1406  000516                     	if	0	;tblptru may be non-zero
  1407  000516                     	endif
  1408  000516  0008               	tblrd		*
  1409  000518  50F5               	movf	tablat,w,c
  1410  00051A  0A25               	xorlw	37
  1411  00051C  A4D8               	btfss	status,2,c
  1412  00051E  EF93  F002         	goto	u1891
  1413  000522  EF95  F002         	goto	u1890
  1414  000526                     u1891:
  1415  000526  EFBB  F003         	goto	l2500
  1416  00052A                     u1890:
  1417  00052A                     
  1418                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  1419  00052A  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1420  00052E  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1421  000532  2ADE               	incf	postinc2,f,c
  1422  000534  0E00               	movlw	0
  1423  000536  22DD               	addwfc	postdec2,f,c
  1424  000538                     
  1425                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 683:         flags =
      +                           width = 0;
  1426  000538  0E00               	movlw	0
  1427  00053A  0100               	movlb	0	; () banked
  1428  00053C  6FB7               	movwf	(_width+1)& (0+255),b
  1429  00053E  0E00               	movlw	0
  1430  000540  6FB6               	movwf	_width& (0+255),b
  1431  000542  C0B6  F068         	movff	_width,_flags
  1432  000546  C0B7  F069         	movff	_width+1,_flags+1
  1433  00054A                     
  1434                           ; BSR set to: 0
  1435                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 684:         prec = 
      +                          -1;
  1436  00054A  6866               	setf	_prec^0,c
  1437  00054C  6867               	setf	(_prec+1)^0,c
  1438  00054E                     
  1439                           ; BSR set to: 0
  1440                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 825:         if ((*f
      +                          mt[0] == 'd') || (*fmt[0] == 'i')) {
  1441  00054E  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1442  000552  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1443  000556  CFDE FFF6          	movff	postinc2,tblptrl
  1444  00055A  CFDD FFF7          	movff	postdec2,tblptrh
  1445  00055E                     	if	0	;tblptru may be non-zero
  1446  00055E                     	endif
  1447  00055E                     	if	0	;tblptru may be non-zero
  1448  00055E                     	endif
  1449  00055E  0008               	tblrd		*
  1450  000560  50F5               	movf	tablat,w,c
  1451  000562  0A64               	xorlw	100
  1452  000564  B4D8               	btfsc	status,2,c
  1453  000566  EFB7  F002         	goto	u1901
  1454  00056A  EFB9  F002         	goto	u1900
  1455  00056E                     u1901:
  1456  00056E  EFCB  F002         	goto	l2468
  1457  000572                     u1900:
  1458  000572                     
  1459                           ; BSR set to: 0
  1460  000572  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1461  000576  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1462  00057A  CFDE FFF6          	movff	postinc2,tblptrl
  1463  00057E  CFDD FFF7          	movff	postdec2,tblptrh
  1464  000582                     	if	0	;tblptru may be non-zero
  1465  000582                     	endif
  1466  000582                     	if	0	;tblptru may be non-zero
  1467  000582                     	endif
  1468  000582  0008               	tblrd		*
  1469  000584  50F5               	movf	tablat,w,c
  1470  000586  0A69               	xorlw	105
  1471  000588  A4D8               	btfss	status,2,c
  1472  00058A  EFC9  F002         	goto	u1911
  1473  00058E  EFCB  F002         	goto	u1910
  1474  000592                     u1911:
  1475  000592  EF0B  F003         	goto	l2474
  1476  000596                     u1910:
  1477  000596                     l2468:
  1478                           
  1479                           ; BSR set to: 0
  1480                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 827:             ++*
      +                          fmt;
  1481  000596  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1482  00059A  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1483  00059E  2ADE               	incf	postinc2,f,c
  1484  0005A0  0E00               	movlw	0
  1485  0005A2  22DD               	addwfc	postdec2,f,c
  1486                           
  1487                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 828:             ll 
      +                          = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1488  0005A4  C054  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1489  0005A8  C055  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1490  0005AC  CFDF F080          	movff	indf2,??_vfpfcnvrt
  1491  0005B0  0E02               	movlw	2
  1492  0005B2  26DE               	addwf	postinc2,f,c
  1493  0005B4  CFDF F081          	movff	indf2,??_vfpfcnvrt+1
  1494  0005B8  0E00               	movlw	0
  1495  0005BA  22DD               	addwfc	postdec2,f,c
  1496  0005BC  C080  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1497  0005C0  C081  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1498  0005C4  CFDE F056          	movff	postinc2,vfpfcnvrt@ll
  1499  0005C8  CFDD F057          	movff	postdec2,vfpfcnvrt@ll+1
  1500  0005CC  0E00               	movlw	0
  1501  0005CE  BE57               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1502  0005D0  0EFF               	movlw	-1
  1503  0005D2  6E58               	movwf	(vfpfcnvrt@ll+2)^0,c
  1504  0005D4  6E59               	movwf	(vfpfcnvrt@ll+3)^0,c
  1505  0005D6  6E5A               	movwf	(vfpfcnvrt@ll+4)^0,c
  1506  0005D8  6E5B               	movwf	(vfpfcnvrt@ll+5)^0,c
  1507  0005DA  6E5C               	movwf	(vfpfcnvrt@ll+6)^0,c
  1508  0005DC  6E5D               	movwf	(vfpfcnvrt@ll+7)^0,c
  1509  0005DE                     l2470:
  1510                           
  1511                           ; BSR set to: 0
  1512                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 830:             ret
      +                          urn dtoa(fp, ll);
  1513  0005DE  C050  F02C         	movff	vfpfcnvrt@fp,dtoa@fp
  1514  0005E2  C051  F02D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1515  0005E6  C056  F02E         	movff	vfpfcnvrt@ll,dtoa@d
  1516  0005EA  C057  F02F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1517  0005EE  C058  F030         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1518  0005F2  C059  F031         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1519  0005F6  C05A  F032         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1520  0005FA  C05B  F033         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1521  0005FE  C05C  F034         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1522  000602  C05D  F035         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1523  000606  EC14  F001         	call	_dtoa	;wreg free
  1524  00060A  C02C  F050         	movff	?_dtoa,?_vfpfcnvrt
  1525  00060E  C02D  F051         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1526  000612  EFD6  F003         	goto	l975
  1527  000616                     l2474:
  1528                           
  1529                           ; BSR set to: 0
  1530                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 835:         if (!st
      +                          rncmp(*fmt, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("
      +                          li")/sizeof("li"[0]))-1))) {
  1531  000616  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1532  00061A  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1533  00061E  CFDE F011          	movff	postinc2,strncmp@_l
  1534  000622  CFDD F012          	movff	postdec2,strncmp@_l+1
  1535  000626  0E0D               	movlw	low (STR_20+1)
  1536  000628  6E13               	movwf	strncmp@_r^0,c
  1537  00062A  0E02               	movlw	high (STR_20+1)
  1538  00062C  6E14               	movwf	(strncmp@_r+1)^0,c
  1539  00062E  0E00               	movlw	0
  1540  000630  6E16               	movwf	(strncmp@n+1)^0,c
  1541  000632  0E02               	movlw	2
  1542  000634  6E15               	movwf	strncmp@n^0,c
  1543  000636  EC8E  F006         	call	_strncmp	;wreg free
  1544  00063A  5011               	movf	?_strncmp^0,w,c
  1545  00063C  1012               	iorwf	(?_strncmp+1)^0,w,c
  1546  00063E  B4D8               	btfsc	status,2,c
  1547  000640  EF24  F003         	goto	u1921
  1548  000644  EF26  F003         	goto	u1920
  1549  000648                     u1921:
  1550  000648  EF41  F003         	goto	l2478
  1551  00064C                     u1920:
  1552  00064C  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1553  000650  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1554  000654  CFDE F011          	movff	postinc2,strncmp@_l
  1555  000658  CFDD F012          	movff	postdec2,strncmp@_l+1
  1556  00065C  0E1C               	movlw	low STR_25
  1557  00065E  6E13               	movwf	strncmp@_r^0,c
  1558  000660  0E02               	movlw	high STR_25
  1559  000662  6E14               	movwf	(strncmp@_r+1)^0,c
  1560  000664  0E00               	movlw	0
  1561  000666  6E16               	movwf	(strncmp@n+1)^0,c
  1562  000668  0E02               	movlw	2
  1563  00066A  6E15               	movwf	strncmp@n^0,c
  1564  00066C  EC8E  F006         	call	_strncmp	;wreg free
  1565  000670  5011               	movf	?_strncmp^0,w,c
  1566  000672  1012               	iorwf	(?_strncmp+1)^0,w,c
  1567  000674  A4D8               	btfss	status,2,c
  1568  000676  EF3F  F003         	goto	u1931
  1569  00067A  EF41  F003         	goto	u1930
  1570  00067E                     u1931:
  1571  00067E  EF85  F003         	goto	l2484
  1572  000682                     u1930:
  1573  000682                     l2478:
  1574                           
  1575                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 836: ;/Applications/
      +                          microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("
      +                          ld")/sizeof("ld"[0]))-1);
  1576  000682  0E02               	movlw	2
  1577  000684  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1578  000688  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1579  00068C  26DE               	addwf	postinc2,f,c
  1580  00068E  0E00               	movlw	0
  1581  000690  22DD               	addwfc	postdec2,f,c
  1582                           
  1583                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 839:             ll 
      +                          = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
  1584  000692  C054  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1585  000696  C055  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1586  00069A  CFDF F080          	movff	indf2,??_vfpfcnvrt
  1587  00069E  0E04               	movlw	4
  1588  0006A0  26DE               	addwf	postinc2,f,c
  1589  0006A2  CFDF F081          	movff	indf2,??_vfpfcnvrt+1
  1590  0006A6  0E00               	movlw	0
  1591  0006A8  22DD               	addwfc	postdec2,f,c
  1592  0006AA  C080  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1593  0006AE  C081  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1594  0006B2  CFDE F082          	movff	postinc2,??_vfpfcnvrt+2
  1595  0006B6  CFDE F083          	movff	postinc2,??_vfpfcnvrt+3
  1596  0006BA  CFDE F084          	movff	postinc2,??_vfpfcnvrt+4
  1597  0006BE  CFDE F085          	movff	postinc2,??_vfpfcnvrt+5
  1598  0006C2  C082  F086         	movff	??_vfpfcnvrt+2,??_vfpfcnvrt+6
  1599  0006C6  C083  F087         	movff	??_vfpfcnvrt+3,??_vfpfcnvrt+7
  1600  0006CA  C084  F088         	movff	??_vfpfcnvrt+4,??_vfpfcnvrt+8
  1601  0006CE  C085  F089         	movff	??_vfpfcnvrt+5,??_vfpfcnvrt+9
  1602  0006D2  0100               	movlb	0	; () banked
  1603  0006D4  6B8A               	clrf	(??_vfpfcnvrt+10)& (0+255),b
  1604  0006D6  BF89               	btfsc	(??_vfpfcnvrt+9)& (0+255),7,b
  1605  0006D8  698A               	setf	(??_vfpfcnvrt+10)& (0+255),b
  1606  0006DA  C08A  F08B         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+11
  1607  0006DE  C08A  F08C         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+12
  1608  0006E2  C08A  F08D         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+13
  1609  0006E6  C086  F056         	movff	??_vfpfcnvrt+6,vfpfcnvrt@ll
  1610  0006EA  C087  F057         	movff	??_vfpfcnvrt+7,vfpfcnvrt@ll+1
  1611  0006EE  C088  F058         	movff	??_vfpfcnvrt+8,vfpfcnvrt@ll+2
  1612  0006F2  C089  F059         	movff	??_vfpfcnvrt+9,vfpfcnvrt@ll+3
  1613  0006F6  C08A  F05A         	movff	??_vfpfcnvrt+10,vfpfcnvrt@ll+4
  1614  0006FA  C08B  F05B         	movff	??_vfpfcnvrt+11,vfpfcnvrt@ll+5
  1615  0006FE  C08C  F05C         	movff	??_vfpfcnvrt+12,vfpfcnvrt@ll+6
  1616  000702  C08D  F05D         	movff	??_vfpfcnvrt+13,vfpfcnvrt@ll+7
  1617  000706  EFEF  F002         	goto	l2470
  1618  00070A                     l2484:
  1619                           
  1620                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1350:         if ((*
      +                          fmt)[0] == '%') {
  1621  00070A  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1622  00070E  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1623  000712  CFDE FFF6          	movff	postinc2,tblptrl
  1624  000716  CFDD FFF7          	movff	postdec2,tblptrh
  1625  00071A                     	if	0	;tblptru may be non-zero
  1626  00071A                     	endif
  1627  00071A                     	if	0	;tblptru may be non-zero
  1628  00071A                     	endif
  1629  00071A  0008               	tblrd		*
  1630  00071C  50F5               	movf	tablat,w,c
  1631  00071E  0A25               	xorlw	37
  1632  000720  A4D8               	btfss	status,2,c
  1633  000722  EF95  F003         	goto	u1941
  1634  000726  EF97  F003         	goto	u1940
  1635  00072A                     u1941:
  1636  00072A  EFAE  F003         	goto	l2494
  1637  00072E                     u1940:
  1638  00072E                     
  1639                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1351:             ++
      +                          *fmt;
  1640  00072E  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1641  000732  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1642  000736  2ADE               	incf	postinc2,f,c
  1643  000738  0E00               	movlw	0
  1644  00073A  22DD               	addwfc	postdec2,f,c
  1645  00073C                     
  1646                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1352:             fp
      +                          utc((int)'%', fp);
  1647  00073C  0E00               	movlw	0
  1648  00073E  6E12               	movwf	(fputc@c+1)^0,c
  1649  000740  0E25               	movlw	37
  1650  000742  6E11               	movwf	fputc@c^0,c
  1651  000744  C050  F013         	movff	vfpfcnvrt@fp,fputc@fp
  1652  000748  C051  F014         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1653  00074C  ECFD  F006         	call	_fputc	;wreg free
  1654  000750                     l2490:
  1655                           
  1656                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1353:             re
      +                          turn 1;
  1657  000750  0E00               	movlw	0
  1658  000752  6E51               	movwf	(?_vfpfcnvrt+1)^0,c
  1659  000754  0E01               	movlw	1
  1660  000756  6E50               	movwf	?_vfpfcnvrt^0,c
  1661  000758  EFD6  F003         	goto	l975
  1662  00075C                     l2494:
  1663                           
  1664                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt
      +                          ;
  1665  00075C  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1666  000760  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1667  000764  2ADE               	incf	postinc2,f,c
  1668  000766  0E00               	movlw	0
  1669  000768  22DD               	addwfc	postdec2,f,c
  1670  00076A                     
  1671                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1358:         return
      +                           0;
  1672  00076A  0E00               	movlw	0
  1673  00076C  6E51               	movwf	(?_vfpfcnvrt+1)^0,c
  1674  00076E  0E00               	movlw	0
  1675  000770  6E50               	movwf	?_vfpfcnvrt^0,c
  1676  000772  EFD6  F003         	goto	l975
  1677  000776                     l2500:
  1678                           
  1679                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1362:     fputc((int
      +                          )(*fmt)[0], fp);
  1680  000776  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1681  00077A  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1682  00077E  CFDE FFF6          	movff	postinc2,tblptrl
  1683  000782  CFDD FFF7          	movff	postdec2,tblptrh
  1684  000786                     	if	0	;tblptru may be non-zero
  1685  000786                     	endif
  1686  000786                     	if	0	;tblptru may be non-zero
  1687  000786                     	endif
  1688  000786  0008               	tblrd		*
  1689  000788  50F5               	movf	tablat,w,c
  1690  00078A  6E11               	movwf	fputc@c^0,c
  1691  00078C  6A12               	clrf	(fputc@c+1)^0,c
  1692  00078E  C050  F013         	movff	vfpfcnvrt@fp,fputc@fp
  1693  000792  C051  F014         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1694  000796  ECFD  F006         	call	_fputc	;wreg free
  1695  00079A                     
  1696                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  1697  00079A  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1698  00079E  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1699  0007A2  2ADE               	incf	postinc2,f,c
  1700  0007A4  0E00               	movlw	0
  1701  0007A6  22DD               	addwfc	postdec2,f,c
  1702  0007A8  EFA8  F003         	goto	l2490
  1703  0007AC                     l975:
  1704  0007AC  0012               	return		;funcret
  1705  0007AE                     __end_of_vfpfcnvrt:
  1706                           	callstack 0
  1707                           
  1708 ;; *************** function _strncmp *****************
  1709 ;; Defined at:
  1710 ;;		line 3 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/strncmp.c"
  1711 ;; Parameters:    Size  Location     Type
  1712 ;;  _l              2   16[COMRAM] PTR const unsigned char 
  1713 ;;		 -> STR_20(4), STR_19(3), 
  1714 ;;  _r              2   18[COMRAM] PTR const unsigned char 
  1715 ;;		 -> STR_27(3), STR_23(3), 
  1716 ;;  n               2   20[COMRAM] unsigned int 
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;  r               2   25[COMRAM] PTR const unsigned char 
  1719 ;;		 -> STR_27(3), STR_23(3), 
  1720 ;;  l               2   23[COMRAM] PTR const unsigned char 
  1721 ;;		 -> STR_20(4), STR_19(3), 
  1722 ;; Return value:  Size  Location     Type
  1723 ;;                  2   16[COMRAM] int 
  1724 ;; Registers used:
  1725 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1726 ;; Tracked objects:
  1727 ;;		On entry : 0/0
  1728 ;;		On exit  : 0/0
  1729 ;;		Unchanged: 0/0
  1730 ;; Data sizes:     COMRAM   BANK0   BANK1
  1731 ;;      Params:         6       0       0
  1732 ;;      Locals:         4       0       0
  1733 ;;      Temps:          1       0       0
  1734 ;;      Totals:        11       0       0
  1735 ;;Total ram usage:       11 bytes
  1736 ;; Hardware stack levels used:    1
  1737 ;; Hardware stack levels required when called:    2
  1738 ;; This function calls:
  1739 ;;		Nothing
  1740 ;; This function is called by:
  1741 ;;		_vfpfcnvrt
  1742 ;; This function uses a non-reentrant model
  1743 ;;
  1744                           
  1745                           	psect	text6
  1746  000D1C                     __ptext6:
  1747                           	callstack 0
  1748  000D1C                     _strncmp:
  1749                           	callstack 24
  1750  000D1C  C011  F018         	movff	strncmp@_l,strncmp@l
  1751  000D20  C012  F019         	movff	strncmp@_l+1,strncmp@l+1
  1752  000D24  C013  F01A         	movff	strncmp@_r,strncmp@r
  1753  000D28  C014  F01B         	movff	strncmp@_r+1,strncmp@r+1
  1754  000D2C  0615               	decf	strncmp@n^0,f,c
  1755  000D2E  A0D8               	btfss	status,0,c
  1756  000D30  0616               	decf	(strncmp@n+1)^0,f,c
  1757  000D32  2815               	incf	strncmp@n^0,w,c
  1758  000D34  E106               	bnz	u1841
  1759  000D36  2816               	incf	(strncmp@n+1)^0,w,c
  1760  000D38  A4D8               	btfss	status,2,c
  1761  000D3A  EFA1  F006         	goto	u1841
  1762  000D3E  EFA3  F006         	goto	u1840
  1763  000D42                     u1841:
  1764  000D42  EFB0  F006         	goto	l2442
  1765  000D46                     u1840:
  1766  000D46  0E00               	movlw	0
  1767  000D48  6E12               	movwf	(?_strncmp+1)^0,c
  1768  000D4A  0E00               	movlw	0
  1769  000D4C  6E11               	movwf	?_strncmp^0,c
  1770  000D4E  EFFC  F006         	goto	l1025
  1771  000D52                     l2440:
  1772  000D52  4A18               	infsnz	strncmp@l^0,f,c
  1773  000D54  2A19               	incf	(strncmp@l+1)^0,f,c
  1774  000D56  4A1A               	infsnz	strncmp@r^0,f,c
  1775  000D58  2A1B               	incf	(strncmp@r+1)^0,f,c
  1776  000D5A  0615               	decf	strncmp@n^0,f,c
  1777  000D5C  A0D8               	btfss	status,0,c
  1778  000D5E  0616               	decf	(strncmp@n+1)^0,f,c
  1779  000D60                     l2442:
  1780  000D60  C018  FFF6         	movff	strncmp@l,tblptrl
  1781  000D64  C019  FFF7         	movff	strncmp@l+1,tblptrh
  1782  000D68                     	if	0	;tblptru may be non-zero
  1783  000D68                     	endif
  1784  000D68                     	if	0	;tblptru may be non-zero
  1785  000D68                     	endif
  1786  000D68  0008               	tblrd		*
  1787  000D6A  50F5               	movf	tablat,w,c
  1788  000D6C  0900               	iorlw	0
  1789  000D6E  B4D8               	btfsc	status,2,c
  1790  000D70  EFBC  F006         	goto	u1851
  1791  000D74  EFBE  F006         	goto	u1850
  1792  000D78                     u1851:
  1793  000D78  EFEA  F006         	goto	l2450
  1794  000D7C                     u1850:
  1795  000D7C  C01A  FFF6         	movff	strncmp@r,tblptrl
  1796  000D80  C01B  FFF7         	movff	strncmp@r+1,tblptrh
  1797  000D84                     	if	0	;tblptru may be non-zero
  1798  000D84                     	endif
  1799  000D84                     	if	0	;tblptru may be non-zero
  1800  000D84                     	endif
  1801  000D84  0008               	tblrd		*
  1802  000D86  50F5               	movf	tablat,w,c
  1803  000D88  0900               	iorlw	0
  1804  000D8A  B4D8               	btfsc	status,2,c
  1805  000D8C  EFCA  F006         	goto	u1861
  1806  000D90  EFCC  F006         	goto	u1860
  1807  000D94                     u1861:
  1808  000D94  EFEA  F006         	goto	l2450
  1809  000D98                     u1860:
  1810  000D98  5015               	movf	strncmp@n^0,w,c
  1811  000D9A  1016               	iorwf	(strncmp@n+1)^0,w,c
  1812  000D9C  B4D8               	btfsc	status,2,c
  1813  000D9E  EFD3  F006         	goto	u1871
  1814  000DA2  EFD5  F006         	goto	u1870
  1815  000DA6                     u1871:
  1816  000DA6  EFEA  F006         	goto	l2450
  1817  000DAA                     u1870:
  1818  000DAA  C018  FFF6         	movff	strncmp@l,tblptrl
  1819  000DAE  C019  FFF7         	movff	strncmp@l+1,tblptrh
  1820  000DB2                     	if	0	;tblptru may be non-zero
  1821  000DB2                     	endif
  1822  000DB2                     	if	0	;tblptru may be non-zero
  1823  000DB2                     	endif
  1824  000DB2  0008               	tblrd		*
  1825  000DB4  CFF5 F017          	movff	tablat,??_strncmp
  1826  000DB8  C01A  FFF6         	movff	strncmp@r,tblptrl
  1827  000DBC  C01B  FFF7         	movff	strncmp@r+1,tblptrh
  1828  000DC0                     	if	0	;tblptru may be non-zero
  1829  000DC0                     	endif
  1830  000DC0                     	if	0	;tblptru may be non-zero
  1831  000DC0                     	endif
  1832  000DC0  0008               	tblrd		*
  1833  000DC2  50F5               	movf	tablat,w,c
  1834  000DC4  1817               	xorwf	??_strncmp^0,w,c
  1835  000DC6  B4D8               	btfsc	status,2,c
  1836  000DC8  EFE8  F006         	goto	u1881
  1837  000DCC  EFEA  F006         	goto	u1880
  1838  000DD0                     u1881:
  1839  000DD0  EFA9  F006         	goto	l2440
  1840  000DD4                     u1880:
  1841  000DD4                     l2450:
  1842  000DD4  C018  FFF6         	movff	strncmp@l,tblptrl
  1843  000DD8  C019  FFF7         	movff	strncmp@l+1,tblptrh
  1844  000DDC                     	if	0	;tblptru may be non-zero
  1845  000DDC                     	endif
  1846  000DDC                     	if	0	;tblptru may be non-zero
  1847  000DDC                     	endif
  1848  000DDC  0008               	tblrd		*
  1849  000DDE  CFF5 F017          	movff	tablat,??_strncmp
  1850  000DE2  C01A  FFF6         	movff	strncmp@r,tblptrl
  1851  000DE6  C01B  FFF7         	movff	strncmp@r+1,tblptrh
  1852  000DEA                     	if	0	;tblptru may be non-zero
  1853  000DEA                     	endif
  1854  000DEA                     	if	0	;tblptru may be non-zero
  1855  000DEA                     	endif
  1856  000DEA  0008               	tblrd		*
  1857  000DEC  50F5               	movf	tablat,w,c
  1858  000DEE  5C17               	subwf	??_strncmp^0,w,c
  1859  000DF0  6E11               	movwf	?_strncmp^0,c
  1860  000DF2  6A12               	clrf	(?_strncmp+1)^0,c
  1861  000DF4  A0D8               	btfss	status,0,c
  1862  000DF6  0612               	decf	(?_strncmp+1)^0,f,c
  1863  000DF8                     l1025:
  1864  000DF8  0012               	return		;funcret
  1865  000DFA                     __end_of_strncmp:
  1866                           	callstack 0
  1867                           
  1868 ;; *************** function _dtoa *****************
  1869 ;; Defined at:
  1870 ;;		line 274 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;  fp              2   43[COMRAM] PTR struct _IO_FILE
  1873 ;;		 -> sprintf@f(6), 
  1874 ;;  d               8   45[COMRAM] long long 
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;  n               8   69[COMRAM] long long 
  1877 ;;  i               2   77[COMRAM] int 
  1878 ;;  s               2   67[COMRAM] int 
  1879 ;;  w               2   65[COMRAM] int 
  1880 ;;  p               2   63[COMRAM] int 
  1881 ;; Return value:  Size  Location     Type
  1882 ;;                  2   43[COMRAM] int 
  1883 ;; Registers used:
  1884 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1885 ;; Tracked objects:
  1886 ;;		On entry : 0/0
  1887 ;;		On exit  : 0/0
  1888 ;;		Unchanged: 0/0
  1889 ;; Data sizes:     COMRAM   BANK0   BANK1
  1890 ;;      Params:        10       0       0
  1891 ;;      Locals:        18       0       0
  1892 ;;      Temps:          8       0       0
  1893 ;;      Totals:        36       0       0
  1894 ;;Total ram usage:       36 bytes
  1895 ;; Hardware stack levels used:    1
  1896 ;; Hardware stack levels required when called:    6
  1897 ;; This function calls:
  1898 ;;		___aodiv
  1899 ;;		___aomod
  1900 ;;		_abs
  1901 ;;		_pad
  1902 ;; This function is called by:
  1903 ;;		_vfpfcnvrt
  1904 ;; This function uses a non-reentrant model
  1905 ;;
  1906                           
  1907                           	psect	text7
  1908  000228                     __ptext7:
  1909                           	callstack 0
  1910  000228                     _dtoa:
  1911                           	callstack 20
  1912  000228                     
  1913                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 274: static int dtoa
      +                          (FILE *fp, long long d);/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.
      +                          c: 275: {;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 276:     in
      +                          t i, p, s, w;;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 277:   
      +                            long long n;;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 280:  
      +                             n = d;
  1914  000228  C02E  F046         	movff	dtoa@d,dtoa@n
  1915  00022C  C02F  F047         	movff	dtoa@d+1,dtoa@n+1
  1916  000230  C030  F048         	movff	dtoa@d+2,dtoa@n+2
  1917  000234  C031  F049         	movff	dtoa@d+3,dtoa@n+3
  1918  000238  C032  F04A         	movff	dtoa@d+4,dtoa@n+4
  1919  00023C  C033  F04B         	movff	dtoa@d+5,dtoa@n+5
  1920  000240  C034  F04C         	movff	dtoa@d+6,dtoa@n+6
  1921  000244  C035  F04D         	movff	dtoa@d+7,dtoa@n+7
  1922  000248                     
  1923                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ?
      +                           1 : 0;
  1924  000248  BE4D               	btfsc	(dtoa@n+7)^0,7,c
  1925  00024A  EF29  F001         	goto	u1691
  1926  00024E  EF2C  F001         	goto	u1690
  1927  000252                     u1691:
  1928  000252  0E01               	movlw	1
  1929  000254  EF2D  F001         	goto	u1700
  1930  000258                     u1690:
  1931  000258  0E00               	movlw	0
  1932  00025A                     u1700:
  1933  00025A  6E44               	movwf	dtoa@s^0,c
  1934  00025C  6A45               	clrf	(dtoa@s+1)^0,c
  1935                           
  1936                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  1937  00025E  5044               	movf	dtoa@s^0,w,c
  1938  000260  1045               	iorwf	(dtoa@s+1)^0,w,c
  1939  000262  B4D8               	btfsc	status,2,c
  1940  000264  EF36  F001         	goto	u1711
  1941  000268  EF38  F001         	goto	u1710
  1942  00026C                     u1711:
  1943  00026C  EF48  F001         	goto	l2378
  1944  000270                     u1710:
  1945  000270                     
  1946                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  1947  000270  1E4D               	comf	(dtoa@n+7)^0,f,c
  1948  000272  1E4C               	comf	(dtoa@n+6)^0,f,c
  1949  000274  1E4B               	comf	(dtoa@n+5)^0,f,c
  1950  000276  1E4A               	comf	(dtoa@n+4)^0,f,c
  1951  000278  1E49               	comf	(dtoa@n+3)^0,f,c
  1952  00027A  1E48               	comf	(dtoa@n+2)^0,f,c
  1953  00027C  1E47               	comf	(dtoa@n+1)^0,f,c
  1954  00027E  6C46               	negf	dtoa@n^0,c
  1955  000280  0E00               	movlw	0
  1956  000282  2247               	addwfc	(dtoa@n+1)^0,f,c
  1957  000284  2248               	addwfc	(dtoa@n+2)^0,f,c
  1958  000286  2249               	addwfc	(dtoa@n+3)^0,f,c
  1959  000288  224A               	addwfc	(dtoa@n+4)^0,f,c
  1960  00028A  224B               	addwfc	(dtoa@n+5)^0,f,c
  1961  00028C  224C               	addwfc	(dtoa@n+6)^0,f,c
  1962  00028E  224D               	addwfc	(dtoa@n+7)^0,f,c
  1963  000290                     l2378:
  1964                           
  1965                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 287:     if (!(prec 
      +                          < 0)) {
  1966  000290  BE67               	btfsc	(_prec+1)^0,7,c
  1967  000292  EF4D  F001         	goto	u1721
  1968  000296  EF4F  F001         	goto	u1720
  1969  00029A                     u1721:
  1970  00029A  EF50  F001         	goto	l2382
  1971  00029E                     u1720:
  1972  00029E                     
  1973                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 288:         flags &
      +                          = ~(1 << 1);
  1974  00029E  9268               	bcf	_flags^0,1,c
  1975  0002A0                     l2382:
  1976                           
  1977                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 290:     p = (0 < pr
      +                          ec) ? prec : 1;
  1978  0002A0  BE67               	btfsc	(_prec+1)^0,7,c
  1979  0002A2  EF5D  F001         	goto	u1730
  1980  0002A6  5067               	movf	(_prec+1)^0,w,c
  1981  0002A8  E106               	bnz	u1731
  1982  0002AA  0466               	decf	_prec^0,w,c
  1983  0002AC  B0D8               	btfsc	status,0,c
  1984  0002AE  EF5B  F001         	goto	u1731
  1985  0002B2  EF5D  F001         	goto	u1730
  1986  0002B6                     u1731:
  1987  0002B6  EF63  F001         	goto	l948
  1988  0002BA                     u1730:
  1989  0002BA  0E00               	movlw	0
  1990  0002BC  6E41               	movwf	(dtoa@p+1)^0,c
  1991  0002BE  0E01               	movlw	1
  1992  0002C0  6E40               	movwf	dtoa@p^0,c
  1993  0002C2  EF67  F001         	goto	l950
  1994  0002C6                     l948:
  1995  0002C6  C066  F040         	movff	_prec,dtoa@p
  1996  0002CA  C067  F041         	movff	_prec+1,dtoa@p+1
  1997  0002CE                     l950:
  1998                           
  1999                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 291:     w = width;
  2000  0002CE  C0B6  F042         	movff	_width,dtoa@w
  2001  0002D2  C0B7  F043         	movff	_width+1,dtoa@w+1
  2002  0002D6                     
  2003                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 292:     if (s || (f
      +                          lags & (1 << 2))) {
  2004  0002D6  5044               	movf	dtoa@s^0,w,c
  2005  0002D8  1045               	iorwf	(dtoa@s+1)^0,w,c
  2006  0002DA  A4D8               	btfss	status,2,c
  2007  0002DC  EF72  F001         	goto	u1741
  2008  0002E0  EF74  F001         	goto	u1740
  2009  0002E4                     u1741:
  2010  0002E4  EF7B  F001         	goto	l2390
  2011  0002E8                     u1740:
  2012  0002E8  A468               	btfss	_flags^0,2,c
  2013  0002EA  EF79  F001         	goto	u1751
  2014  0002EE  EF7B  F001         	goto	u1750
  2015  0002F2                     u1751:
  2016  0002F2  EF7E  F001         	goto	l2392
  2017  0002F6                     u1750:
  2018  0002F6                     l2390:
  2019                           
  2020                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 293:         --w;
  2021  0002F6  0642               	decf	dtoa@w^0,f,c
  2022  0002F8  A0D8               	btfss	status,0,c
  2023  0002FA  0643               	decf	(dtoa@w+1)^0,f,c
  2024  0002FC                     l2392:
  2025                           
  2026                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(
      +                          dbuf) - 1;
  2027  0002FC  0E00               	movlw	0
  2028  0002FE  6E4F               	movwf	(dtoa@i+1)^0,c
  2029  000300  0E1F               	movlw	31
  2030  000302  6E4E               	movwf	dtoa@i^0,c
  2031  000304                     
  2032                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '
      +                          \0';
  2033  000304  0E00               	movlw	0
  2034  000306  0101               	movlb	1	; () banked
  2035  000308  6F7F               	movwf	(_dbuf+31)& (0+255),b
  2036                           
  2037                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2038  00030A  EF03  F002         	goto	l2406
  2039  00030E                     l2396:
  2040                           
  2041                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 300:         --i;
  2042  00030E  064E               	decf	dtoa@i^0,f,c
  2043  000310  A0D8               	btfss	status,0,c
  2044  000312  064F               	decf	(dtoa@i+1)^0,f,c
  2045  000314                     
  2046                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 301:         dbuf[i]
      +                           = '0' + abs(n % 10);
  2047  000314  0E60               	movlw	low _dbuf
  2048  000316  244E               	addwf	dtoa@i^0,w,c
  2049  000318  6ED9               	movwf	fsr2l,c
  2050  00031A  0E01               	movlw	high _dbuf
  2051  00031C  204F               	addwfc	(dtoa@i+1)^0,w,c
  2052  00031E  6EDA               	movwf	fsr2h,c
  2053  000320  C046  F011         	movff	dtoa@n,___aomod@dividend
  2054  000324  C047  F012         	movff	dtoa@n+1,___aomod@dividend+1
  2055  000328  C048  F013         	movff	dtoa@n+2,___aomod@dividend+2
  2056  00032C  C049  F014         	movff	dtoa@n+3,___aomod@dividend+3
  2057  000330  C04A  F015         	movff	dtoa@n+4,___aomod@dividend+4
  2058  000334  C04B  F016         	movff	dtoa@n+5,___aomod@dividend+5
  2059  000338  C04C  F017         	movff	dtoa@n+6,___aomod@dividend+6
  2060  00033C  C04D  F018         	movff	dtoa@n+7,___aomod@dividend+7
  2061  000340  0E0A               	movlw	10
  2062  000342  6E19               	movwf	___aomod@divisor^0,c
  2063  000344  0E00               	movlw	0
  2064  000346  6E1A               	movwf	(___aomod@divisor+1)^0,c
  2065  000348  0E00               	movlw	0
  2066  00034A  6E1B               	movwf	(___aomod@divisor+2)^0,c
  2067  00034C  0E00               	movlw	0
  2068  00034E  6E1C               	movwf	(___aomod@divisor+3)^0,c
  2069  000350  0E00               	movlw	0
  2070  000352  6E1D               	movwf	(___aomod@divisor+4)^0,c
  2071  000354  0E00               	movlw	0
  2072  000356  6E1E               	movwf	(___aomod@divisor+5)^0,c
  2073  000358  0E00               	movlw	0
  2074  00035A  6E1F               	movwf	(___aomod@divisor+6)^0,c
  2075  00035C  0E00               	movlw	0
  2076  00035E  6E20               	movwf	(___aomod@divisor+7)^0,c
  2077  000360  ECDC  F005         	call	___aomod	;wreg free
  2078  000364  C011  F036         	movff	?___aomod,??_dtoa
  2079  000368  C012  F037         	movff	?___aomod+1,??_dtoa+1
  2080  00036C  C013  F038         	movff	?___aomod+2,??_dtoa+2
  2081  000370  C014  F039         	movff	?___aomod+3,??_dtoa+3
  2082  000374  C015  F03A         	movff	?___aomod+4,??_dtoa+4
  2083  000378  C016  F03B         	movff	?___aomod+5,??_dtoa+5
  2084  00037C  C017  F03C         	movff	?___aomod+6,??_dtoa+6
  2085  000380  C018  F03D         	movff	?___aomod+7,??_dtoa+7
  2086  000384  C036  F023         	movff	??_dtoa,abs@a
  2087  000388  C038  F024         	movff	??_dtoa+2,abs@a+1
  2088  00038C  EC3D  F009         	call	_abs	;wreg free
  2089  000390  5023               	movf	?_abs^0,w,c
  2090  000392  0F30               	addlw	48
  2091  000394  6EDF               	movwf	indf2,c
  2092  000396                     
  2093                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 302:         --p;
  2094  000396  0640               	decf	dtoa@p^0,f,c
  2095  000398  A0D8               	btfss	status,0,c
  2096  00039A  0641               	decf	(dtoa@p+1)^0,f,c
  2097  00039C                     
  2098                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 303:         --w;
  2099  00039C  0642               	decf	dtoa@w^0,f,c
  2100  00039E  A0D8               	btfss	status,0,c
  2101  0003A0  0643               	decf	(dtoa@w+1)^0,f,c
  2102  0003A2                     
  2103                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 304:         n = n /
      +                           10;
  2104  0003A2  C046  F011         	movff	dtoa@n,___aodiv@dividend
  2105  0003A6  C047  F012         	movff	dtoa@n+1,___aodiv@dividend+1
  2106  0003AA  C048  F013         	movff	dtoa@n+2,___aodiv@dividend+2
  2107  0003AE  C049  F014         	movff	dtoa@n+3,___aodiv@dividend+3
  2108  0003B2  C04A  F015         	movff	dtoa@n+4,___aodiv@dividend+4
  2109  0003B6  C04B  F016         	movff	dtoa@n+5,___aodiv@dividend+5
  2110  0003BA  C04C  F017         	movff	dtoa@n+6,___aodiv@dividend+6
  2111  0003BE  C04D  F018         	movff	dtoa@n+7,___aodiv@dividend+7
  2112  0003C2  0E0A               	movlw	10
  2113  0003C4  6E19               	movwf	___aodiv@divisor^0,c
  2114  0003C6  0E00               	movlw	0
  2115  0003C8  6E1A               	movwf	(___aodiv@divisor+1)^0,c
  2116  0003CA  0E00               	movlw	0
  2117  0003CC  6E1B               	movwf	(___aodiv@divisor+2)^0,c
  2118  0003CE  0E00               	movlw	0
  2119  0003D0  6E1C               	movwf	(___aodiv@divisor+3)^0,c
  2120  0003D2  0E00               	movlw	0
  2121  0003D4  6E1D               	movwf	(___aodiv@divisor+4)^0,c
  2122  0003D6  0E00               	movlw	0
  2123  0003D8  6E1E               	movwf	(___aodiv@divisor+5)^0,c
  2124  0003DA  0E00               	movlw	0
  2125  0003DC  6E1F               	movwf	(___aodiv@divisor+6)^0,c
  2126  0003DE  0E00               	movlw	0
  2127  0003E0  6E20               	movwf	(___aodiv@divisor+7)^0,c
  2128  0003E2  EC18  F005         	call	___aodiv	;wreg free
  2129  0003E6  C011  F046         	movff	?___aodiv,dtoa@n
  2130  0003EA  C012  F047         	movff	?___aodiv+1,dtoa@n+1
  2131  0003EE  C013  F048         	movff	?___aodiv+2,dtoa@n+2
  2132  0003F2  C014  F049         	movff	?___aodiv+3,dtoa@n+3
  2133  0003F6  C015  F04A         	movff	?___aodiv+4,dtoa@n+4
  2134  0003FA  C016  F04B         	movff	?___aodiv+5,dtoa@n+5
  2135  0003FE  C017  F04C         	movff	?___aodiv+6,dtoa@n+6
  2136  000402  C018  F04D         	movff	?___aodiv+7,dtoa@n+7
  2137  000406                     l2406:
  2138                           
  2139                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2140  000406  BE4F               	btfsc	(dtoa@i+1)^0,7,c
  2141  000408  EF0E  F002         	goto	u1761
  2142  00040C  504F               	movf	(dtoa@i+1)^0,w,c
  2143  00040E  E108               	bnz	u1760
  2144  000410  044E               	decf	dtoa@i^0,w,c
  2145  000412  A0D8               	btfss	status,0,c
  2146  000414  EF0E  F002         	goto	u1761
  2147  000418  EF10  F002         	goto	u1760
  2148  00041C                     u1761:
  2149  00041C  EF40  F002         	goto	l2416
  2150  000420                     u1760:
  2151  000420  5046               	movf	dtoa@n^0,w,c
  2152  000422  1047               	iorwf	(dtoa@n+1)^0,w,c
  2153  000424  1048               	iorwf	(dtoa@n+2)^0,w,c
  2154  000426  1049               	iorwf	(dtoa@n+3)^0,w,c
  2155  000428  104A               	iorwf	(dtoa@n+4)^0,w,c
  2156  00042A  104B               	iorwf	(dtoa@n+5)^0,w,c
  2157  00042C  104C               	iorwf	(dtoa@n+6)^0,w,c
  2158  00042E  104D               	iorwf	(dtoa@n+7)^0,w,c
  2159  000430  A4D8               	btfss	status,2,c
  2160  000432  EF1D  F002         	goto	u1771
  2161  000436  EF1F  F002         	goto	u1770
  2162  00043A                     u1771:
  2163  00043A  EF87  F001         	goto	l2396
  2164  00043E                     u1770:
  2165  00043E  BE41               	btfsc	(dtoa@p+1)^0,7,c
  2166  000440  EF2C  F002         	goto	u1780
  2167  000444  5041               	movf	(dtoa@p+1)^0,w,c
  2168  000446  E106               	bnz	u1781
  2169  000448  0440               	decf	dtoa@p^0,w,c
  2170  00044A  B0D8               	btfsc	status,0,c
  2171  00044C  EF2A  F002         	goto	u1781
  2172  000450  EF2C  F002         	goto	u1780
  2173  000454                     u1781:
  2174  000454  EF87  F001         	goto	l2396
  2175  000458                     u1780:
  2176  000458  BE43               	btfsc	(dtoa@w+1)^0,7,c
  2177  00045A  EF37  F002         	goto	u1791
  2178  00045E  5043               	movf	(dtoa@w+1)^0,w,c
  2179  000460  E108               	bnz	u1790
  2180  000462  0442               	decf	dtoa@w^0,w,c
  2181  000464  A0D8               	btfss	status,0,c
  2182  000466  EF37  F002         	goto	u1791
  2183  00046A  EF39  F002         	goto	u1790
  2184  00046E                     u1791:
  2185  00046E  EF40  F002         	goto	l2416
  2186  000472                     u1790:
  2187  000472  B268               	btfsc	_flags^0,1,c
  2188  000474  EF3E  F002         	goto	u1801
  2189  000478  EF40  F002         	goto	u1800
  2190  00047C                     u1801:
  2191  00047C  EF87  F001         	goto	l2396
  2192  000480                     u1800:
  2193  000480                     l2416:
  2194                           
  2195                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 308:     if (s || (f
      +                          lags & (1 << 2))) {
  2196  000480  5044               	movf	dtoa@s^0,w,c
  2197  000482  1045               	iorwf	(dtoa@s+1)^0,w,c
  2198  000484  A4D8               	btfss	status,2,c
  2199  000486  EF47  F002         	goto	u1811
  2200  00048A  EF49  F002         	goto	u1810
  2201  00048E                     u1811:
  2202  00048E  EF50  F002         	goto	l2420
  2203  000492                     u1810:
  2204  000492  A468               	btfss	_flags^0,2,c
  2205  000494  EF4E  F002         	goto	u1821
  2206  000498  EF50  F002         	goto	u1820
  2207  00049C                     u1821:
  2208  00049C  EF6E  F002         	goto	l2430
  2209  0004A0                     u1820:
  2210  0004A0                     l2420:
  2211                           
  2212                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 309:         --i;
  2213  0004A0  064E               	decf	dtoa@i^0,f,c
  2214  0004A2  A0D8               	btfss	status,0,c
  2215  0004A4  064F               	decf	(dtoa@i+1)^0,f,c
  2216  0004A6                     
  2217                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 310:         dbuf[i]
      +                           = s ? '-' : '+';
  2218  0004A6  5044               	movf	dtoa@s^0,w,c
  2219  0004A8  1045               	iorwf	(dtoa@s+1)^0,w,c
  2220  0004AA  A4D8               	btfss	status,2,c
  2221  0004AC  EF5A  F002         	goto	u1831
  2222  0004B0  EF5C  F002         	goto	u1830
  2223  0004B4                     u1831:
  2224  0004B4  EF62  F002         	goto	l2426
  2225  0004B8                     u1830:
  2226  0004B8  0E00               	movlw	0
  2227  0004BA  6E3F               	movwf	(_dtoa$1263+1)^0,c
  2228  0004BC  0E2B               	movlw	43
  2229  0004BE  6E3E               	movwf	_dtoa$1263^0,c
  2230  0004C0  EF66  F002         	goto	l2428
  2231  0004C4                     l2426:
  2232  0004C4  0E00               	movlw	0
  2233  0004C6  6E3F               	movwf	(_dtoa$1263+1)^0,c
  2234  0004C8  0E2D               	movlw	45
  2235  0004CA  6E3E               	movwf	_dtoa$1263^0,c
  2236  0004CC                     l2428:
  2237  0004CC  0E60               	movlw	low _dbuf
  2238  0004CE  244E               	addwf	dtoa@i^0,w,c
  2239  0004D0  6ED9               	movwf	fsr2l,c
  2240  0004D2  0E01               	movlw	high _dbuf
  2241  0004D4  204F               	addwfc	(dtoa@i+1)^0,w,c
  2242  0004D6  6EDA               	movwf	fsr2h,c
  2243  0004D8  C03E  FFDF         	movff	_dtoa$1263,indf2
  2244  0004DC                     l2430:
  2245                           
  2246                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 314:     return pad(
      +                          fp, &dbuf[i], w);
  2247  0004DC  C02C  F021         	movff	dtoa@fp,pad@fp
  2248  0004E0  C02D  F022         	movff	dtoa@fp+1,pad@fp+1
  2249  0004E4  0E60               	movlw	low _dbuf
  2250  0004E6  244E               	addwf	dtoa@i^0,w,c
  2251  0004E8  6E23               	movwf	pad@buf^0,c
  2252  0004EA  0E01               	movlw	high _dbuf
  2253  0004EC  204F               	addwfc	(dtoa@i+1)^0,w,c
  2254  0004EE  6E24               	movwf	(pad@buf+1)^0,c
  2255  0004F0  C042  F025         	movff	dtoa@w,pad@p
  2256  0004F4  C043  F026         	movff	dtoa@w+1,pad@p+1
  2257  0004F8  EC62  F007         	call	_pad	;wreg free
  2258  0004FC  C021  F02C         	movff	?_pad,?_dtoa
  2259  000500  C022  F02D         	movff	?_pad+1,?_dtoa+1
  2260  000504  0012               	return		;funcret
  2261  000506                     __end_of_dtoa:
  2262                           	callstack 0
  2263                           
  2264 ;; *************** function _pad *****************
  2265 ;; Defined at:
  2266 ;;		line 72 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c"
  2267 ;; Parameters:    Size  Location     Type
  2268 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  2269 ;;		 -> sprintf@f(6), 
  2270 ;;  buf             2   34[COMRAM] PTR unsigned char 
  2271 ;;		 -> dbuf(32), 
  2272 ;;  p               2   36[COMRAM] int 
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;  w               2   41[COMRAM] int 
  2275 ;;  i               2   39[COMRAM] int 
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  2   32[COMRAM] int 
  2278 ;; Registers used:
  2279 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2280 ;; Tracked objects:
  2281 ;;		On entry : 0/0
  2282 ;;		On exit  : 0/0
  2283 ;;		Unchanged: 0/0
  2284 ;; Data sizes:     COMRAM   BANK0   BANK1
  2285 ;;      Params:         6       0       0
  2286 ;;      Locals:         4       0       0
  2287 ;;      Temps:          1       0       0
  2288 ;;      Totals:        11       0       0
  2289 ;;Total ram usage:       11 bytes
  2290 ;; Hardware stack levels used:    1
  2291 ;; Hardware stack levels required when called:    5
  2292 ;; This function calls:
  2293 ;;		_fputc
  2294 ;;		_fputs
  2295 ;;		_strlen
  2296 ;; This function is called by:
  2297 ;;		_dtoa
  2298 ;; This function uses a non-reentrant model
  2299 ;;
  2300                           
  2301                           	psect	text8
  2302  000EC4                     __ptext8:
  2303                           	callstack 0
  2304  000EC4                     _pad:
  2305                           	callstack 20
  2306  000EC4                     
  2307                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.20/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
  2308  000EC4  A068               	btfss	_flags^0,0,c
  2309  000EC6  EF67  F007         	goto	u1621
  2310  000ECA  EF69  F007         	goto	u1620
  2311  000ECE                     u1621:
  2312  000ECE  EF73  F007         	goto	l2340
  2313  000ED2                     u1620:
  2314  000ED2                     
  2315                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
  2316  000ED2  C023  F01A         	movff	pad@buf,fputs@s
  2317  000ED6  C024  F01B         	movff	pad@buf+1,fputs@s+1
  2318  000EDA  C021  F01C         	movff	pad@fp,fputs@fp
  2319  000EDE  C022  F01D         	movff	pad@fp+1,fputs@fp+1
  2320  000EE2  ECFA  F008         	call	_fputs	;wreg free
  2321  000EE6                     l2340:
  2322                           
  2323                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
  2324  000EE6  BE26               	btfsc	(pad@p+1)^0,7,c
  2325  000EE8  EF78  F007         	goto	u1631
  2326  000EEC  EF7A  F007         	goto	u1630
  2327  000EF0                     u1631:
  2328  000EF0  EF80  F007         	goto	l2344
  2329  000EF4                     u1630:
  2330  000EF4  C025  F02A         	movff	pad@p,pad@w
  2331  000EF8  C026  F02B         	movff	pad@p+1,pad@w+1
  2332  000EFC  EF84  F007         	goto	l937
  2333  000F00                     l2344:
  2334  000F00  0E00               	movlw	0
  2335  000F02  6E2B               	movwf	(pad@w+1)^0,c
  2336  000F04  0E00               	movlw	0
  2337  000F06  6E2A               	movwf	pad@w^0,c
  2338  000F08                     l937:
  2339                           
  2340                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  2341  000F08  0E00               	movlw	0
  2342  000F0A  6E29               	movwf	(pad@i+1)^0,c
  2343  000F0C  0E00               	movlw	0
  2344  000F0E  6E28               	movwf	pad@i^0,c
  2345                           
  2346                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  2347  000F10  EF96  F007         	goto	l2350
  2348  000F14                     l2346:
  2349                           
  2350                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
  2351  000F14  0E00               	movlw	0
  2352  000F16  6E12               	movwf	(fputc@c+1)^0,c
  2353  000F18  0E20               	movlw	32
  2354  000F1A  6E11               	movwf	fputc@c^0,c
  2355  000F1C  C021  F013         	movff	pad@fp,fputc@fp
  2356  000F20  C022  F014         	movff	pad@fp+1,fputc@fp+1
  2357  000F24  ECFD  F006         	call	_fputc	;wreg free
  2358  000F28                     
  2359                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 86:         ++i;
  2360  000F28  4A28               	infsnz	pad@i^0,f,c
  2361  000F2A  2A29               	incf	(pad@i+1)^0,f,c
  2362  000F2C                     l2350:
  2363                           
  2364                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  2365  000F2C  502A               	movf	pad@w^0,w,c
  2366  000F2E  5C28               	subwf	pad@i^0,w,c
  2367  000F30  5029               	movf	(pad@i+1)^0,w,c
  2368  000F32  0A80               	xorlw	128
  2369  000F34  6E27               	movwf	??_pad^0,c
  2370  000F36  502B               	movf	(pad@w+1)^0,w,c
  2371  000F38  0A80               	xorlw	128
  2372  000F3A  5827               	subwfb	??_pad^0,w,c
  2373  000F3C  A0D8               	btfss	status,0,c
  2374  000F3E  EFA3  F007         	goto	u1641
  2375  000F42  EFA5  F007         	goto	u1640
  2376  000F46                     u1641:
  2377  000F46  EF8A  F007         	goto	l2346
  2378  000F4A                     u1640:
  2379  000F4A                     
  2380                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
  2381  000F4A  B068               	btfsc	_flags^0,0,c
  2382  000F4C  EFAA  F007         	goto	u1651
  2383  000F50  EFAC  F007         	goto	u1650
  2384  000F54                     u1651:
  2385  000F54  EFB6  F007         	goto	l2354
  2386  000F58                     u1650:
  2387  000F58                     
  2388                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
  2389  000F58  C023  F01A         	movff	pad@buf,fputs@s
  2390  000F5C  C024  F01B         	movff	pad@buf+1,fputs@s+1
  2391  000F60  C021  F01C         	movff	pad@fp,fputs@fp
  2392  000F64  C022  F01D         	movff	pad@fp+1,fputs@fp+1
  2393  000F68  ECFA  F008         	call	_fputs	;wreg free
  2394  000F6C                     l2354:
  2395                           
  2396                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 94:     return strle
      +                          n(buf) + w;
  2397  000F6C  C023  F011         	movff	pad@buf,strlen@s
  2398  000F70  C024  F012         	movff	pad@buf+1,strlen@s+1
  2399  000F74  EC5D  F009         	call	_strlen	;wreg free
  2400  000F78  502A               	movf	pad@w^0,w,c
  2401  000F7A  2411               	addwf	?_strlen^0,w,c
  2402  000F7C  6E21               	movwf	?_pad^0,c
  2403  000F7E  502B               	movf	(pad@w+1)^0,w,c
  2404  000F80  2012               	addwfc	(?_strlen+1)^0,w,c
  2405  000F82  6E22               	movwf	(?_pad+1)^0,c
  2406  000F84  0012               	return		;funcret
  2407  000F86                     __end_of_pad:
  2408                           	callstack 0
  2409                           
  2410 ;; *************** function _strlen *****************
  2411 ;; Defined at:
  2412 ;;		line 5 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/strlen.c"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;  s               2   16[COMRAM] PTR const unsigned char 
  2415 ;;		 -> dbuf(32), 
  2416 ;; Auto vars:     Size  Location     Type
  2417 ;;  a               2   18[COMRAM] PTR const unsigned char 
  2418 ;;		 -> dbuf(32), 
  2419 ;; Return value:  Size  Location     Type
  2420 ;;                  2   16[COMRAM] unsigned int 
  2421 ;; Registers used:
  2422 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMRAM   BANK0   BANK1
  2428 ;;      Params:         2       0       0
  2429 ;;      Locals:         2       0       0
  2430 ;;      Temps:          0       0       0
  2431 ;;      Totals:         4       0       0
  2432 ;;Total ram usage:        4 bytes
  2433 ;; Hardware stack levels used:    1
  2434 ;; Hardware stack levels required when called:    2
  2435 ;; This function calls:
  2436 ;;		Nothing
  2437 ;; This function is called by:
  2438 ;;		_pad
  2439 ;; This function uses a non-reentrant model
  2440 ;;
  2441                           
  2442                           	psect	text9
  2443  0012BA                     __ptext9:
  2444                           	callstack 0
  2445  0012BA                     _strlen:
  2446                           	callstack 22
  2447  0012BA  C011  F013         	movff	strlen@s,strlen@a
  2448  0012BE  C012  F014         	movff	strlen@s+1,strlen@a+1
  2449  0012C2  EF65  F009         	goto	l2246
  2450  0012C6                     l2244:
  2451  0012C6  4A11               	infsnz	strlen@s^0,f,c
  2452  0012C8  2A12               	incf	(strlen@s+1)^0,f,c
  2453  0012CA                     l2246:
  2454  0012CA  C011  FFD9         	movff	strlen@s,fsr2l
  2455  0012CE  C012  FFDA         	movff	strlen@s+1,fsr2h
  2456  0012D2  50DF               	movf	indf2,w,c
  2457  0012D4  A4D8               	btfss	status,2,c
  2458  0012D6  EF6F  F009         	goto	u1481
  2459  0012DA  EF71  F009         	goto	u1480
  2460  0012DE                     u1481:
  2461  0012DE  EF63  F009         	goto	l2244
  2462  0012E2                     u1480:
  2463  0012E2  5013               	movf	strlen@a^0,w,c
  2464  0012E4  5C11               	subwf	strlen@s^0,w,c
  2465  0012E6  6E11               	movwf	?_strlen^0,c
  2466  0012E8  5014               	movf	(strlen@a+1)^0,w,c
  2467  0012EA  5812               	subwfb	(strlen@s+1)^0,w,c
  2468  0012EC  6E12               	movwf	(?_strlen+1)^0,c
  2469  0012EE  0012               	return		;funcret
  2470  0012F0                     __end_of_strlen:
  2471                           	callstack 0
  2472                           
  2473 ;; *************** function _fputs *****************
  2474 ;; Defined at:
  2475 ;;		line 8 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/nf_fputs.c"
  2476 ;; Parameters:    Size  Location     Type
  2477 ;;  s               2   25[COMRAM] PTR const unsigned char 
  2478 ;;		 -> dbuf(32), 
  2479 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2480 ;;		 -> sprintf@f(6), 
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;  i               2   30[COMRAM] int 
  2483 ;;  c               1   29[COMRAM] unsigned char 
  2484 ;; Return value:  Size  Location     Type
  2485 ;;                  2   25[COMRAM] int 
  2486 ;; Registers used:
  2487 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMRAM   BANK0   BANK1
  2493 ;;      Params:         4       0       0
  2494 ;;      Locals:         3       0       0
  2495 ;;      Temps:          0       0       0
  2496 ;;      Totals:         7       0       0
  2497 ;;Total ram usage:        7 bytes
  2498 ;; Hardware stack levels used:    1
  2499 ;; Hardware stack levels required when called:    4
  2500 ;; This function calls:
  2501 ;;		_fputc
  2502 ;; This function is called by:
  2503 ;;		_pad
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507                           	psect	text10
  2508  0011F4                     __ptext10:
  2509                           	callstack 0
  2510  0011F4                     _fputs:
  2511                           	callstack 20
  2512  0011F4  0E00               	movlw	0
  2513  0011F6  6E20               	movwf	(fputs@i+1)^0,c
  2514  0011F8  0E00               	movlw	0
  2515  0011FA  6E1F               	movwf	fputs@i^0,c
  2516  0011FC  EF0B  F009         	goto	l2240
  2517  001200                     l2236:
  2518  001200  C01E  F011         	movff	fputs@c,fputc@c
  2519  001204  6A12               	clrf	(fputc@c+1)^0,c
  2520  001206  C01C  F013         	movff	fputs@fp,fputc@fp
  2521  00120A  C01D  F014         	movff	fputs@fp+1,fputc@fp+1
  2522  00120E  ECFD  F006         	call	_fputc	;wreg free
  2523  001212  4A1F               	infsnz	fputs@i^0,f,c
  2524  001214  2A20               	incf	(fputs@i+1)^0,f,c
  2525  001216                     l2240:
  2526  001216  501F               	movf	fputs@i^0,w,c
  2527  001218  241A               	addwf	fputs@s^0,w,c
  2528  00121A  6ED9               	movwf	fsr2l,c
  2529  00121C  5020               	movf	(fputs@i+1)^0,w,c
  2530  00121E  201B               	addwfc	(fputs@s+1)^0,w,c
  2531  001220  6EDA               	movwf	fsr2h,c
  2532  001222  50DF               	movf	indf2,w,c
  2533  001224  6E1E               	movwf	fputs@c^0,c
  2534  001226  501E               	movf	fputs@c^0,w,c
  2535  001228  A4D8               	btfss	status,2,c
  2536  00122A  EF19  F009         	goto	u1471
  2537  00122E  EF1B  F009         	goto	u1470
  2538  001232                     u1471:
  2539  001232  EF00  F009         	goto	l2236
  2540  001236                     u1470:
  2541  001236  0012               	return		;funcret
  2542  001238                     __end_of_fputs:
  2543                           	callstack 0
  2544                           
  2545 ;; *************** function _fputc *****************
  2546 ;; Defined at:
  2547 ;;		line 8 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/nf_fputc.c"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;  c               2   16[COMRAM] int 
  2550 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  2551 ;;		 -> sprintf@f(6), 
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;		None
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  2   16[COMRAM] int 
  2556 ;; Registers used:
  2557 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMRAM   BANK0   BANK1
  2563 ;;      Params:         4       0       0
  2564 ;;      Locals:         0       0       0
  2565 ;;      Temps:          5       0       0
  2566 ;;      Totals:         9       0       0
  2567 ;;Total ram usage:        9 bytes
  2568 ;; Hardware stack levels used:    1
  2569 ;; Hardware stack levels required when called:    3
  2570 ;; This function calls:
  2571 ;;		_putch
  2572 ;; This function is called by:
  2573 ;;		_pad
  2574 ;;		_vfpfcnvrt
  2575 ;;		_fputs
  2576 ;; This function uses a non-reentrant model
  2577 ;;
  2578                           
  2579                           	psect	text11
  2580  000DFA                     __ptext11:
  2581                           	callstack 0
  2582  000DFA                     _fputc:
  2583                           	callstack 23
  2584  000DFA  5013               	movf	fputc@fp^0,w,c
  2585  000DFC  1014               	iorwf	(fputc@fp+1)^0,w,c
  2586  000DFE  B4D8               	btfsc	status,2,c
  2587  000E00  EF04  F007         	goto	u1431
  2588  000E04  EF06  F007         	goto	u1430
  2589  000E08                     u1431:
  2590  000E08  EF0F  F007         	goto	l2216
  2591  000E0C                     u1430:
  2592  000E0C  5013               	movf	fputc@fp^0,w,c
  2593  000E0E  1014               	iorwf	(fputc@fp+1)^0,w,c
  2594  000E10  A4D8               	btfss	status,2,c
  2595  000E12  EF0D  F007         	goto	u1441
  2596  000E16  EF0F  F007         	goto	u1440
  2597  000E1A                     u1441:
  2598  000E1A  EF14  F007         	goto	l2218
  2599  000E1E                     u1440:
  2600  000E1E                     l2216:
  2601  000E1E  5011               	movf	fputc@c^0,w,c
  2602  000E20  EC05  F00A         	call	_putch
  2603  000E24  EF61  F007         	goto	l1004
  2604  000E28                     l2218:
  2605  000E28  EE20 F004          	lfsr	2,4
  2606  000E2C  5013               	movf	fputc@fp^0,w,c
  2607  000E2E  26D9               	addwf	fsr2l,f,c
  2608  000E30  5014               	movf	(fputc@fp+1)^0,w,c
  2609  000E32  22DA               	addwfc	fsr2h,f,c
  2610  000E34  50DE               	movf	postinc2,w,c
  2611  000E36  10DE               	iorwf	postinc2,w,c
  2612  000E38  B4D8               	btfsc	status,2,c
  2613  000E3A  EF21  F007         	goto	u1451
  2614  000E3E  EF23  F007         	goto	u1450
  2615  000E42                     u1451:
  2616  000E42  EF3E  F007         	goto	l2222
  2617  000E46                     u1450:
  2618  000E46  EE20 F004          	lfsr	2,4
  2619  000E4A  5013               	movf	fputc@fp^0,w,c
  2620  000E4C  26D9               	addwf	fsr2l,f,c
  2621  000E4E  5014               	movf	(fputc@fp+1)^0,w,c
  2622  000E50  22DA               	addwfc	fsr2h,f,c
  2623  000E52  EE10 F002          	lfsr	1,2
  2624  000E56  5013               	movf	fputc@fp^0,w,c
  2625  000E58  26E1               	addwf	fsr1l,f,c
  2626  000E5A  5014               	movf	(fputc@fp+1)^0,w,c
  2627  000E5C  22E2               	addwfc	fsr1h,f,c
  2628  000E5E  50DE               	movf	postinc2,w,c
  2629  000E60  5CE6               	subwf	postinc1,w,c
  2630  000E62  50E6               	movf	postinc1,w,c
  2631  000E64  0A80               	xorlw	128
  2632  000E66  6E19               	movwf	(??_fputc+4)^0,c
  2633  000E68  50DE               	movf	postinc2,w,c
  2634  000E6A  0A80               	xorlw	128
  2635  000E6C  5819               	subwfb	(??_fputc+4)^0,w,c
  2636  000E6E  B0D8               	btfsc	status,0,c
  2637  000E70  EF3C  F007         	goto	u1461
  2638  000E74  EF3E  F007         	goto	u1460
  2639  000E78                     u1461:
  2640  000E78  EF61  F007         	goto	l1004
  2641  000E7C                     u1460:
  2642  000E7C                     l2222:
  2643  000E7C  EE20 F002          	lfsr	2,2
  2644  000E80  5013               	movf	fputc@fp^0,w,c
  2645  000E82  26D9               	addwf	fsr2l,f,c
  2646  000E84  5014               	movf	(fputc@fp+1)^0,w,c
  2647  000E86  22DA               	addwfc	fsr2h,f,c
  2648  000E88  CFDE F015          	movff	postinc2,??_fputc
  2649  000E8C  CFDD F016          	movff	postdec2,??_fputc+1
  2650  000E90  C013  FFD9         	movff	fputc@fp,fsr2l
  2651  000E94  C014  FFDA         	movff	fputc@fp+1,fsr2h
  2652  000E98  CFDE F017          	movff	postinc2,??_fputc+2
  2653  000E9C  CFDD F018          	movff	postdec2,??_fputc+3
  2654  000EA0  5015               	movf	??_fputc^0,w,c
  2655  000EA2  2417               	addwf	(??_fputc+2)^0,w,c
  2656  000EA4  6ED9               	movwf	fsr2l,c
  2657  000EA6  5016               	movf	(??_fputc+1)^0,w,c
  2658  000EA8  2018               	addwfc	(??_fputc+3)^0,w,c
  2659  000EAA  6EDA               	movwf	fsr2h,c
  2660  000EAC  C011  FFDF         	movff	fputc@c,indf2
  2661  000EB0  EE20 F002          	lfsr	2,2
  2662  000EB4  5013               	movf	fputc@fp^0,w,c
  2663  000EB6  26D9               	addwf	fsr2l,f,c
  2664  000EB8  5014               	movf	(fputc@fp+1)^0,w,c
  2665  000EBA  22DA               	addwfc	fsr2h,f,c
  2666  000EBC  2ADE               	incf	postinc2,f,c
  2667  000EBE  0E00               	movlw	0
  2668  000EC0  22DD               	addwfc	postdec2,f,c
  2669  000EC2                     l1004:
  2670  000EC2  0012               	return		;funcret
  2671  000EC4                     __end_of_fputc:
  2672                           	callstack 0
  2673                           
  2674 ;; *************** function _putch *****************
  2675 ;; Defined at:
  2676 ;;		line 7 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/putch.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;  c               1    wreg     unsigned char 
  2679 ;; Auto vars:     Size  Location     Type
  2680 ;;  c               1    0[COMRAM] unsigned char 
  2681 ;; Return value:  Size  Location     Type
  2682 ;;                  1    wreg      void 
  2683 ;; Registers used:
  2684 ;;		wreg
  2685 ;; Tracked objects:
  2686 ;;		On entry : 0/0
  2687 ;;		On exit  : 0/0
  2688 ;;		Unchanged: 0/0
  2689 ;; Data sizes:     COMRAM   BANK0   BANK1
  2690 ;;      Params:         0       0       0
  2691 ;;      Locals:         0       0       0
  2692 ;;      Temps:          0       0       0
  2693 ;;      Totals:         0       0       0
  2694 ;;Total ram usage:        0 bytes
  2695 ;; Hardware stack levels used:    1
  2696 ;; Hardware stack levels required when called:    2
  2697 ;; This function calls:
  2698 ;;		Nothing
  2699 ;; This function is called by:
  2700 ;;		_fputc
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           
  2704                           	psect	text12
  2705  00140A                     __ptext12:
  2706                           	callstack 0
  2707  00140A                     _putch:
  2708                           	callstack 23
  2709  00140A  0012               	return		;funcret
  2710  00140C                     __end_of_putch:
  2711                           	callstack 0
  2712                           
  2713 ;; *************** function _abs *****************
  2714 ;; Defined at:
  2715 ;;		line 1 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/abs.c"
  2716 ;; Parameters:    Size  Location     Type
  2717 ;;  a               2   34[COMRAM] int 
  2718 ;; Auto vars:     Size  Location     Type
  2719 ;;		None
  2720 ;; Return value:  Size  Location     Type
  2721 ;;                  2   34[COMRAM] int 
  2722 ;; Registers used:
  2723 ;;		wreg, status,2, status,0
  2724 ;; Tracked objects:
  2725 ;;		On entry : 0/0
  2726 ;;		On exit  : 0/0
  2727 ;;		Unchanged: 0/0
  2728 ;; Data sizes:     COMRAM   BANK0   BANK1
  2729 ;;      Params:         2       0       0
  2730 ;;      Locals:         0       0       0
  2731 ;;      Temps:          2       0       0
  2732 ;;      Totals:         4       0       0
  2733 ;;Total ram usage:        4 bytes
  2734 ;; Hardware stack levels used:    1
  2735 ;; Hardware stack levels required when called:    2
  2736 ;; This function calls:
  2737 ;;		Nothing
  2738 ;; This function is called by:
  2739 ;;		_dtoa
  2740 ;; This function uses a non-reentrant model
  2741 ;;
  2742                           
  2743                           	psect	text13
  2744  00127A                     __ptext13:
  2745                           	callstack 0
  2746  00127A                     _abs:
  2747                           	callstack 23
  2748  00127A  BE24               	btfsc	(abs@a+1)^0,7,c
  2749  00127C  EF4A  F009         	goto	u1660
  2750  001280  5024               	movf	(abs@a+1)^0,w,c
  2751  001282  E106               	bnz	u1661
  2752  001284  0423               	decf	abs@a^0,w,c
  2753  001286  B0D8               	btfsc	status,0,c
  2754  001288  EF48  F009         	goto	u1661
  2755  00128C  EF4A  F009         	goto	u1660
  2756  001290                     u1661:
  2757  001290  EF58  F009         	goto	l989
  2758  001294                     u1660:
  2759  001294  C023  F025         	movff	abs@a,??_abs
  2760  001298  C024  F026         	movff	abs@a+1,??_abs+1
  2761  00129C  1E25               	comf	??_abs^0,f,c
  2762  00129E  1E26               	comf	(??_abs+1)^0,f,c
  2763  0012A0  4A25               	infsnz	??_abs^0,f,c
  2764  0012A2  2A26               	incf	(??_abs+1)^0,f,c
  2765  0012A4  C025  F023         	movff	??_abs,?_abs
  2766  0012A8  C026  F024         	movff	??_abs+1,?_abs+1
  2767  0012AC  EF5C  F009         	goto	l992
  2768  0012B0                     l989:
  2769  0012B0  C023  F023         	movff	abs@a,?_abs
  2770  0012B4  C024  F024         	movff	abs@a+1,?_abs+1
  2771  0012B8                     l992:
  2772  0012B8  0012               	return		;funcret
  2773  0012BA                     __end_of_abs:
  2774                           	callstack 0
  2775                           
  2776 ;; *************** function ___aomod *****************
  2777 ;; Defined at:
  2778 ;;		line 9 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/aomod.c"
  2779 ;; Parameters:    Size  Location     Type
  2780 ;;  dividend        8   16[COMRAM] long long 
  2781 ;;  divisor         8   24[COMRAM] long long 
  2782 ;; Auto vars:     Size  Location     Type
  2783 ;;  sign            1   33[COMRAM] unsigned char 
  2784 ;;  counter         1   32[COMRAM] unsigned char 
  2785 ;; Return value:  Size  Location     Type
  2786 ;;                  8   16[COMRAM] long long 
  2787 ;; Registers used:
  2788 ;;		wreg, status,2, status,0
  2789 ;; Tracked objects:
  2790 ;;		On entry : 0/0
  2791 ;;		On exit  : 0/0
  2792 ;;		Unchanged: 0/0
  2793 ;; Data sizes:     COMRAM   BANK0   BANK1
  2794 ;;      Params:        16       0       0
  2795 ;;      Locals:         2       0       0
  2796 ;;      Temps:          0       0       0
  2797 ;;      Totals:        18       0       0
  2798 ;;Total ram usage:       18 bytes
  2799 ;; Hardware stack levels used:    1
  2800 ;; Hardware stack levels required when called:    2
  2801 ;; This function calls:
  2802 ;;		Nothing
  2803 ;; This function is called by:
  2804 ;;		_dtoa
  2805 ;; This function uses a non-reentrant model
  2806 ;;
  2807                           
  2808                           	psect	text14
  2809  000BB8                     __ptext14:
  2810                           	callstack 0
  2811  000BB8                     ___aomod:
  2812                           	callstack 23
  2813  000BB8  0E00               	movlw	0
  2814  000BBA  6E22               	movwf	___aomod@sign^0,c
  2815  000BBC  BE18               	btfsc	(___aomod@dividend+7)^0,7,c
  2816  000BBE  EFE5  F005         	goto	u1560
  2817  000BC2  EFE3  F005         	goto	u1561
  2818  000BC6                     u1561:
  2819  000BC6  EFF7  F005         	goto	l2308
  2820  000BCA                     u1560:
  2821  000BCA  1E18               	comf	(___aomod@dividend+7)^0,f,c
  2822  000BCC  1E17               	comf	(___aomod@dividend+6)^0,f,c
  2823  000BCE  1E16               	comf	(___aomod@dividend+5)^0,f,c
  2824  000BD0  1E15               	comf	(___aomod@dividend+4)^0,f,c
  2825  000BD2  1E14               	comf	(___aomod@dividend+3)^0,f,c
  2826  000BD4  1E13               	comf	(___aomod@dividend+2)^0,f,c
  2827  000BD6  1E12               	comf	(___aomod@dividend+1)^0,f,c
  2828  000BD8  6C11               	negf	___aomod@dividend^0,c
  2829  000BDA  0E00               	movlw	0
  2830  000BDC  2212               	addwfc	(___aomod@dividend+1)^0,f,c
  2831  000BDE  2213               	addwfc	(___aomod@dividend+2)^0,f,c
  2832  000BE0  2214               	addwfc	(___aomod@dividend+3)^0,f,c
  2833  000BE2  2215               	addwfc	(___aomod@dividend+4)^0,f,c
  2834  000BE4  2216               	addwfc	(___aomod@dividend+5)^0,f,c
  2835  000BE6  2217               	addwfc	(___aomod@dividend+6)^0,f,c
  2836  000BE8  2218               	addwfc	(___aomod@dividend+7)^0,f,c
  2837  000BEA  0E01               	movlw	1
  2838  000BEC  6E22               	movwf	___aomod@sign^0,c
  2839  000BEE                     l2308:
  2840  000BEE  BE20               	btfsc	(___aomod@divisor+7)^0,7,c
  2841  000BF0  EFFE  F005         	goto	u1570
  2842  000BF4  EFFC  F005         	goto	u1571
  2843  000BF8                     u1571:
  2844  000BF8  EF0E  F006         	goto	l2312
  2845  000BFC                     u1570:
  2846  000BFC  1E20               	comf	(___aomod@divisor+7)^0,f,c
  2847  000BFE  1E1F               	comf	(___aomod@divisor+6)^0,f,c
  2848  000C00  1E1E               	comf	(___aomod@divisor+5)^0,f,c
  2849  000C02  1E1D               	comf	(___aomod@divisor+4)^0,f,c
  2850  000C04  1E1C               	comf	(___aomod@divisor+3)^0,f,c
  2851  000C06  1E1B               	comf	(___aomod@divisor+2)^0,f,c
  2852  000C08  1E1A               	comf	(___aomod@divisor+1)^0,f,c
  2853  000C0A  6C19               	negf	___aomod@divisor^0,c
  2854  000C0C  0E00               	movlw	0
  2855  000C0E  221A               	addwfc	(___aomod@divisor+1)^0,f,c
  2856  000C10  221B               	addwfc	(___aomod@divisor+2)^0,f,c
  2857  000C12  221C               	addwfc	(___aomod@divisor+3)^0,f,c
  2858  000C14  221D               	addwfc	(___aomod@divisor+4)^0,f,c
  2859  000C16  221E               	addwfc	(___aomod@divisor+5)^0,f,c
  2860  000C18  221F               	addwfc	(___aomod@divisor+6)^0,f,c
  2861  000C1A  2220               	addwfc	(___aomod@divisor+7)^0,f,c
  2862  000C1C                     l2312:
  2863  000C1C  5019               	movf	___aomod@divisor^0,w,c
  2864  000C1E  101A               	iorwf	(___aomod@divisor+1)^0,w,c
  2865  000C20  101B               	iorwf	(___aomod@divisor+2)^0,w,c
  2866  000C22  101C               	iorwf	(___aomod@divisor+3)^0,w,c
  2867  000C24  101D               	iorwf	(___aomod@divisor+4)^0,w,c
  2868  000C26  101E               	iorwf	(___aomod@divisor+5)^0,w,c
  2869  000C28  101F               	iorwf	(___aomod@divisor+6)^0,w,c
  2870  000C2A  1020               	iorwf	(___aomod@divisor+7)^0,w,c
  2871  000C2C  B4D8               	btfsc	status,2,c
  2872  000C2E  EF1B  F006         	goto	u1581
  2873  000C32  EF1D  F006         	goto	u1580
  2874  000C36                     u1581:
  2875  000C36  EF65  F006         	goto	l2328
  2876  000C3A                     u1580:
  2877  000C3A  0E01               	movlw	1
  2878  000C3C  6E21               	movwf	___aomod@counter^0,c
  2879  000C3E  EF2B  F006         	goto	l2318
  2880  000C42                     l2316:
  2881  000C42  90D8               	bcf	status,0,c
  2882  000C44  3619               	rlcf	___aomod@divisor^0,f,c
  2883  000C46  361A               	rlcf	(___aomod@divisor+1)^0,f,c
  2884  000C48  361B               	rlcf	(___aomod@divisor+2)^0,f,c
  2885  000C4A  361C               	rlcf	(___aomod@divisor+3)^0,f,c
  2886  000C4C  361D               	rlcf	(___aomod@divisor+4)^0,f,c
  2887  000C4E  361E               	rlcf	(___aomod@divisor+5)^0,f,c
  2888  000C50  361F               	rlcf	(___aomod@divisor+6)^0,f,c
  2889  000C52  3620               	rlcf	(___aomod@divisor+7)^0,f,c
  2890  000C54  2A21               	incf	___aomod@counter^0,f,c
  2891  000C56                     l2318:
  2892  000C56  AE20               	btfss	(___aomod@divisor+7)^0,7,c
  2893  000C58  EF30  F006         	goto	u1591
  2894  000C5C  EF32  F006         	goto	u1590
  2895  000C60                     u1591:
  2896  000C60  EF21  F006         	goto	l2316
  2897  000C64                     u1590:
  2898  000C64                     l2320:
  2899  000C64  5019               	movf	___aomod@divisor^0,w,c
  2900  000C66  5C11               	subwf	___aomod@dividend^0,w,c
  2901  000C68  501A               	movf	(___aomod@divisor+1)^0,w,c
  2902  000C6A  5812               	subwfb	(___aomod@dividend+1)^0,w,c
  2903  000C6C  501B               	movf	(___aomod@divisor+2)^0,w,c
  2904  000C6E  5813               	subwfb	(___aomod@dividend+2)^0,w,c
  2905  000C70  501C               	movf	(___aomod@divisor+3)^0,w,c
  2906  000C72  5814               	subwfb	(___aomod@dividend+3)^0,w,c
  2907  000C74  501D               	movf	(___aomod@divisor+4)^0,w,c
  2908  000C76  5815               	subwfb	(___aomod@dividend+4)^0,w,c
  2909  000C78  501E               	movf	(___aomod@divisor+5)^0,w,c
  2910  000C7A  5816               	subwfb	(___aomod@dividend+5)^0,w,c
  2911  000C7C  501F               	movf	(___aomod@divisor+6)^0,w,c
  2912  000C7E  5817               	subwfb	(___aomod@dividend+6)^0,w,c
  2913  000C80  5020               	movf	(___aomod@divisor+7)^0,w,c
  2914  000C82  5818               	subwfb	(___aomod@dividend+7)^0,w,c
  2915  000C84  A0D8               	btfss	status,0,c
  2916  000C86  EF47  F006         	goto	u1601
  2917  000C8A  EF49  F006         	goto	u1600
  2918  000C8E                     u1601:
  2919  000C8E  EF59  F006         	goto	l2324
  2920  000C92                     u1600:
  2921  000C92  5019               	movf	___aomod@divisor^0,w,c
  2922  000C94  5E11               	subwf	___aomod@dividend^0,f,c
  2923  000C96  501A               	movf	(___aomod@divisor+1)^0,w,c
  2924  000C98  5A12               	subwfb	(___aomod@dividend+1)^0,f,c
  2925  000C9A  501B               	movf	(___aomod@divisor+2)^0,w,c
  2926  000C9C  5A13               	subwfb	(___aomod@dividend+2)^0,f,c
  2927  000C9E  501C               	movf	(___aomod@divisor+3)^0,w,c
  2928  000CA0  5A14               	subwfb	(___aomod@dividend+3)^0,f,c
  2929  000CA2  501D               	movf	(___aomod@divisor+4)^0,w,c
  2930  000CA4  5A15               	subwfb	(___aomod@dividend+4)^0,f,c
  2931  000CA6  501E               	movf	(___aomod@divisor+5)^0,w,c
  2932  000CA8  5A16               	subwfb	(___aomod@dividend+5)^0,f,c
  2933  000CAA  501F               	movf	(___aomod@divisor+6)^0,w,c
  2934  000CAC  5A17               	subwfb	(___aomod@dividend+6)^0,f,c
  2935  000CAE  5020               	movf	(___aomod@divisor+7)^0,w,c
  2936  000CB0  5A18               	subwfb	(___aomod@dividend+7)^0,f,c
  2937  000CB2                     l2324:
  2938  000CB2  90D8               	bcf	status,0,c
  2939  000CB4  3220               	rrcf	(___aomod@divisor+7)^0,f,c
  2940  000CB6  321F               	rrcf	(___aomod@divisor+6)^0,f,c
  2941  000CB8  321E               	rrcf	(___aomod@divisor+5)^0,f,c
  2942  000CBA  321D               	rrcf	(___aomod@divisor+4)^0,f,c
  2943  000CBC  321C               	rrcf	(___aomod@divisor+3)^0,f,c
  2944  000CBE  321B               	rrcf	(___aomod@divisor+2)^0,f,c
  2945  000CC0  321A               	rrcf	(___aomod@divisor+1)^0,f,c
  2946  000CC2  3219               	rrcf	___aomod@divisor^0,f,c
  2947  000CC4  2E21               	decfsz	___aomod@counter^0,f,c
  2948  000CC6  EF32  F006         	goto	l2320
  2949  000CCA                     l2328:
  2950  000CCA  5022               	movf	___aomod@sign^0,w,c
  2951  000CCC  B4D8               	btfsc	status,2,c
  2952  000CCE  EF6B  F006         	goto	u1611
  2953  000CD2  EF6D  F006         	goto	u1610
  2954  000CD6                     u1611:
  2955  000CD6  EF7D  F006         	goto	l2332
  2956  000CDA                     u1610:
  2957  000CDA  1E18               	comf	(___aomod@dividend+7)^0,f,c
  2958  000CDC  1E17               	comf	(___aomod@dividend+6)^0,f,c
  2959  000CDE  1E16               	comf	(___aomod@dividend+5)^0,f,c
  2960  000CE0  1E15               	comf	(___aomod@dividend+4)^0,f,c
  2961  000CE2  1E14               	comf	(___aomod@dividend+3)^0,f,c
  2962  000CE4  1E13               	comf	(___aomod@dividend+2)^0,f,c
  2963  000CE6  1E12               	comf	(___aomod@dividend+1)^0,f,c
  2964  000CE8  6C11               	negf	___aomod@dividend^0,c
  2965  000CEA  0E00               	movlw	0
  2966  000CEC  2212               	addwfc	(___aomod@dividend+1)^0,f,c
  2967  000CEE  2213               	addwfc	(___aomod@dividend+2)^0,f,c
  2968  000CF0  2214               	addwfc	(___aomod@dividend+3)^0,f,c
  2969  000CF2  2215               	addwfc	(___aomod@dividend+4)^0,f,c
  2970  000CF4  2216               	addwfc	(___aomod@dividend+5)^0,f,c
  2971  000CF6  2217               	addwfc	(___aomod@dividend+6)^0,f,c
  2972  000CF8  2218               	addwfc	(___aomod@dividend+7)^0,f,c
  2973  000CFA                     l2332:
  2974  000CFA  C011  F011         	movff	___aomod@dividend,?___aomod
  2975  000CFE  C012  F012         	movff	___aomod@dividend+1,?___aomod+1
  2976  000D02  C013  F013         	movff	___aomod@dividend+2,?___aomod+2
  2977  000D06  C014  F014         	movff	___aomod@dividend+3,?___aomod+3
  2978  000D0A  C015  F015         	movff	___aomod@dividend+4,?___aomod+4
  2979  000D0E  C016  F016         	movff	___aomod@dividend+5,?___aomod+5
  2980  000D12  C017  F017         	movff	___aomod@dividend+6,?___aomod+6
  2981  000D16  C018  F018         	movff	___aomod@dividend+7,?___aomod+7
  2982  000D1A  0012               	return		;funcret
  2983  000D1C                     __end_of___aomod:
  2984                           	callstack 0
  2985                           
  2986 ;; *************** function ___aodiv *****************
  2987 ;; Defined at:
  2988 ;;		line 9 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/aodiv.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;  dividend        8   16[COMRAM] long long 
  2991 ;;  divisor         8   24[COMRAM] long long 
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;  quotient        8   34[COMRAM] long long 
  2994 ;;  sign            1   33[COMRAM] unsigned char 
  2995 ;;  counter         1   32[COMRAM] unsigned char 
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  8   16[COMRAM] long long 
  2998 ;; Registers used:
  2999 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMRAM   BANK0   BANK1
  3005 ;;      Params:        16       0       0
  3006 ;;      Locals:        10       0       0
  3007 ;;      Temps:          0       0       0
  3008 ;;      Totals:        26       0       0
  3009 ;;Total ram usage:       26 bytes
  3010 ;; Hardware stack levels used:    1
  3011 ;; Hardware stack levels required when called:    2
  3012 ;; This function calls:
  3013 ;;		Nothing
  3014 ;; This function is called by:
  3015 ;;		_dtoa
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019                           	psect	text15
  3020  000A30                     __ptext15:
  3021                           	callstack 0
  3022  000A30                     ___aodiv:
  3023                           	callstack 23
  3024  000A30  0E00               	movlw	0
  3025  000A32  6E22               	movwf	___aodiv@sign^0,c
  3026  000A34  BE20               	btfsc	(___aodiv@divisor+7)^0,7,c
  3027  000A36  EF21  F005         	goto	u1490
  3028  000A3A  EF1F  F005         	goto	u1491
  3029  000A3E                     u1491:
  3030  000A3E  EF33  F005         	goto	l2264
  3031  000A42                     u1490:
  3032  000A42  1E20               	comf	(___aodiv@divisor+7)^0,f,c
  3033  000A44  1E1F               	comf	(___aodiv@divisor+6)^0,f,c
  3034  000A46  1E1E               	comf	(___aodiv@divisor+5)^0,f,c
  3035  000A48  1E1D               	comf	(___aodiv@divisor+4)^0,f,c
  3036  000A4A  1E1C               	comf	(___aodiv@divisor+3)^0,f,c
  3037  000A4C  1E1B               	comf	(___aodiv@divisor+2)^0,f,c
  3038  000A4E  1E1A               	comf	(___aodiv@divisor+1)^0,f,c
  3039  000A50  6C19               	negf	___aodiv@divisor^0,c
  3040  000A52  0E00               	movlw	0
  3041  000A54  221A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3042  000A56  221B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3043  000A58  221C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3044  000A5A  221D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3045  000A5C  221E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3046  000A5E  221F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3047  000A60  2220               	addwfc	(___aodiv@divisor+7)^0,f,c
  3048  000A62  0E01               	movlw	1
  3049  000A64  6E22               	movwf	___aodiv@sign^0,c
  3050  000A66                     l2264:
  3051  000A66  BE18               	btfsc	(___aodiv@dividend+7)^0,7,c
  3052  000A68  EF3A  F005         	goto	u1500
  3053  000A6C  EF38  F005         	goto	u1501
  3054  000A70                     u1501:
  3055  000A70  EF4C  F005         	goto	l2270
  3056  000A74                     u1500:
  3057  000A74  1E18               	comf	(___aodiv@dividend+7)^0,f,c
  3058  000A76  1E17               	comf	(___aodiv@dividend+6)^0,f,c
  3059  000A78  1E16               	comf	(___aodiv@dividend+5)^0,f,c
  3060  000A7A  1E15               	comf	(___aodiv@dividend+4)^0,f,c
  3061  000A7C  1E14               	comf	(___aodiv@dividend+3)^0,f,c
  3062  000A7E  1E13               	comf	(___aodiv@dividend+2)^0,f,c
  3063  000A80  1E12               	comf	(___aodiv@dividend+1)^0,f,c
  3064  000A82  6C11               	negf	___aodiv@dividend^0,c
  3065  000A84  0E00               	movlw	0
  3066  000A86  2212               	addwfc	(___aodiv@dividend+1)^0,f,c
  3067  000A88  2213               	addwfc	(___aodiv@dividend+2)^0,f,c
  3068  000A8A  2214               	addwfc	(___aodiv@dividend+3)^0,f,c
  3069  000A8C  2215               	addwfc	(___aodiv@dividend+4)^0,f,c
  3070  000A8E  2216               	addwfc	(___aodiv@dividend+5)^0,f,c
  3071  000A90  2217               	addwfc	(___aodiv@dividend+6)^0,f,c
  3072  000A92  2218               	addwfc	(___aodiv@dividend+7)^0,f,c
  3073  000A94  0E01               	movlw	1
  3074  000A96  1A22               	xorwf	___aodiv@sign^0,f,c
  3075  000A98                     l2270:
  3076  000A98  EE20  F023         	lfsr	2,___aodiv@quotient
  3077  000A9C  0E07               	movlw	7
  3078  000A9E                     u1511:
  3079  000A9E  6ADE               	clrf	postinc2,c
  3080  000AA0  06E8               	decf	wreg,f,c
  3081  000AA2  E2FD               	bc	u1511
  3082  000AA4  5019               	movf	___aodiv@divisor^0,w,c
  3083  000AA6  101A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3084  000AA8  101B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3085  000AAA  101C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3086  000AAC  101D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3087  000AAE  101E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3088  000AB0  101F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3089  000AB2  1020               	iorwf	(___aodiv@divisor+7)^0,w,c
  3090  000AB4  B4D8               	btfsc	status,2,c
  3091  000AB6  EF5F  F005         	goto	u1521
  3092  000ABA  EF61  F005         	goto	u1520
  3093  000ABE                     u1521:
  3094  000ABE  EFB3  F005         	goto	l2292
  3095  000AC2                     u1520:
  3096  000AC2  0E01               	movlw	1
  3097  000AC4  6E21               	movwf	___aodiv@counter^0,c
  3098  000AC6  EF6F  F005         	goto	l2278
  3099  000ACA                     l2276:
  3100  000ACA  90D8               	bcf	status,0,c
  3101  000ACC  3619               	rlcf	___aodiv@divisor^0,f,c
  3102  000ACE  361A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3103  000AD0  361B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3104  000AD2  361C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3105  000AD4  361D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3106  000AD6  361E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3107  000AD8  361F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3108  000ADA  3620               	rlcf	(___aodiv@divisor+7)^0,f,c
  3109  000ADC  2A21               	incf	___aodiv@counter^0,f,c
  3110  000ADE                     l2278:
  3111  000ADE  AE20               	btfss	(___aodiv@divisor+7)^0,7,c
  3112  000AE0  EF74  F005         	goto	u1531
  3113  000AE4  EF76  F005         	goto	u1530
  3114  000AE8                     u1531:
  3115  000AE8  EF65  F005         	goto	l2276
  3116  000AEC                     u1530:
  3117  000AEC                     l2280:
  3118  000AEC  90D8               	bcf	status,0,c
  3119  000AEE  3623               	rlcf	___aodiv@quotient^0,f,c
  3120  000AF0  3624               	rlcf	(___aodiv@quotient+1)^0,f,c
  3121  000AF2  3625               	rlcf	(___aodiv@quotient+2)^0,f,c
  3122  000AF4  3626               	rlcf	(___aodiv@quotient+3)^0,f,c
  3123  000AF6  3627               	rlcf	(___aodiv@quotient+4)^0,f,c
  3124  000AF8  3628               	rlcf	(___aodiv@quotient+5)^0,f,c
  3125  000AFA  3629               	rlcf	(___aodiv@quotient+6)^0,f,c
  3126  000AFC  362A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3127  000AFE  5019               	movf	___aodiv@divisor^0,w,c
  3128  000B00  5C11               	subwf	___aodiv@dividend^0,w,c
  3129  000B02  501A               	movf	(___aodiv@divisor+1)^0,w,c
  3130  000B04  5812               	subwfb	(___aodiv@dividend+1)^0,w,c
  3131  000B06  501B               	movf	(___aodiv@divisor+2)^0,w,c
  3132  000B08  5813               	subwfb	(___aodiv@dividend+2)^0,w,c
  3133  000B0A  501C               	movf	(___aodiv@divisor+3)^0,w,c
  3134  000B0C  5814               	subwfb	(___aodiv@dividend+3)^0,w,c
  3135  000B0E  501D               	movf	(___aodiv@divisor+4)^0,w,c
  3136  000B10  5815               	subwfb	(___aodiv@dividend+4)^0,w,c
  3137  000B12  501E               	movf	(___aodiv@divisor+5)^0,w,c
  3138  000B14  5816               	subwfb	(___aodiv@dividend+5)^0,w,c
  3139  000B16  501F               	movf	(___aodiv@divisor+6)^0,w,c
  3140  000B18  5817               	subwfb	(___aodiv@dividend+6)^0,w,c
  3141  000B1A  5020               	movf	(___aodiv@divisor+7)^0,w,c
  3142  000B1C  5818               	subwfb	(___aodiv@dividend+7)^0,w,c
  3143  000B1E  A0D8               	btfss	status,0,c
  3144  000B20  EF94  F005         	goto	u1541
  3145  000B24  EF96  F005         	goto	u1540
  3146  000B28                     u1541:
  3147  000B28  EFA7  F005         	goto	l2288
  3148  000B2C                     u1540:
  3149  000B2C  5019               	movf	___aodiv@divisor^0,w,c
  3150  000B2E  5E11               	subwf	___aodiv@dividend^0,f,c
  3151  000B30  501A               	movf	(___aodiv@divisor+1)^0,w,c
  3152  000B32  5A12               	subwfb	(___aodiv@dividend+1)^0,f,c
  3153  000B34  501B               	movf	(___aodiv@divisor+2)^0,w,c
  3154  000B36  5A13               	subwfb	(___aodiv@dividend+2)^0,f,c
  3155  000B38  501C               	movf	(___aodiv@divisor+3)^0,w,c
  3156  000B3A  5A14               	subwfb	(___aodiv@dividend+3)^0,f,c
  3157  000B3C  501D               	movf	(___aodiv@divisor+4)^0,w,c
  3158  000B3E  5A15               	subwfb	(___aodiv@dividend+4)^0,f,c
  3159  000B40  501E               	movf	(___aodiv@divisor+5)^0,w,c
  3160  000B42  5A16               	subwfb	(___aodiv@dividend+5)^0,f,c
  3161  000B44  501F               	movf	(___aodiv@divisor+6)^0,w,c
  3162  000B46  5A17               	subwfb	(___aodiv@dividend+6)^0,f,c
  3163  000B48  5020               	movf	(___aodiv@divisor+7)^0,w,c
  3164  000B4A  5A18               	subwfb	(___aodiv@dividend+7)^0,f,c
  3165  000B4C  8023               	bsf	___aodiv@quotient^0,0,c
  3166  000B4E                     l2288:
  3167  000B4E  90D8               	bcf	status,0,c
  3168  000B50  3220               	rrcf	(___aodiv@divisor+7)^0,f,c
  3169  000B52  321F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3170  000B54  321E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3171  000B56  321D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3172  000B58  321C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3173  000B5A  321B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3174  000B5C  321A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3175  000B5E  3219               	rrcf	___aodiv@divisor^0,f,c
  3176  000B60  2E21               	decfsz	___aodiv@counter^0,f,c
  3177  000B62  EF76  F005         	goto	l2280
  3178  000B66                     l2292:
  3179  000B66  5022               	movf	___aodiv@sign^0,w,c
  3180  000B68  B4D8               	btfsc	status,2,c
  3181  000B6A  EFB9  F005         	goto	u1551
  3182  000B6E  EFBB  F005         	goto	u1550
  3183  000B72                     u1551:
  3184  000B72  EFCB  F005         	goto	l2296
  3185  000B76                     u1550:
  3186  000B76  1E2A               	comf	(___aodiv@quotient+7)^0,f,c
  3187  000B78  1E29               	comf	(___aodiv@quotient+6)^0,f,c
  3188  000B7A  1E28               	comf	(___aodiv@quotient+5)^0,f,c
  3189  000B7C  1E27               	comf	(___aodiv@quotient+4)^0,f,c
  3190  000B7E  1E26               	comf	(___aodiv@quotient+3)^0,f,c
  3191  000B80  1E25               	comf	(___aodiv@quotient+2)^0,f,c
  3192  000B82  1E24               	comf	(___aodiv@quotient+1)^0,f,c
  3193  000B84  6C23               	negf	___aodiv@quotient^0,c
  3194  000B86  0E00               	movlw	0
  3195  000B88  2224               	addwfc	(___aodiv@quotient+1)^0,f,c
  3196  000B8A  2225               	addwfc	(___aodiv@quotient+2)^0,f,c
  3197  000B8C  2226               	addwfc	(___aodiv@quotient+3)^0,f,c
  3198  000B8E  2227               	addwfc	(___aodiv@quotient+4)^0,f,c
  3199  000B90  2228               	addwfc	(___aodiv@quotient+5)^0,f,c
  3200  000B92  2229               	addwfc	(___aodiv@quotient+6)^0,f,c
  3201  000B94  222A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3202  000B96                     l2296:
  3203  000B96  C023  F011         	movff	___aodiv@quotient,?___aodiv
  3204  000B9A  C024  F012         	movff	___aodiv@quotient+1,?___aodiv+1
  3205  000B9E  C025  F013         	movff	___aodiv@quotient+2,?___aodiv+2
  3206  000BA2  C026  F014         	movff	___aodiv@quotient+3,?___aodiv+3
  3207  000BA6  C027  F015         	movff	___aodiv@quotient+4,?___aodiv+4
  3208  000BAA  C028  F016         	movff	___aodiv@quotient+5,?___aodiv+5
  3209  000BAE  C029  F017         	movff	___aodiv@quotient+6,?___aodiv+6
  3210  000BB2  C02A  F018         	movff	___aodiv@quotient+7,?___aodiv+7
  3211  000BB6  0012               	return		;funcret
  3212  000BB8                     __end_of___aodiv:
  3213                           	callstack 0
  3214                           
  3215 ;; *************** function _print *****************
  3216 ;; Defined at:
  3217 ;;		line 135 in file "LiquidCrystal.c"
  3218 ;; Parameters:    Size  Location     Type
  3219 ;;  chr             2   21[COMRAM] PTR unsigned char 
  3220 ;;		 -> print_long@s_num(80), print_int@s_num(80), STR_18(11), STR_17(11), 
  3221 ;;		 -> STR_16(2), STR_15(2), STR_14(4), STR_13(2), 
  3222 ;;		 -> STR_12(11), STR_11(11), STR_10(2), STR_9(2), 
  3223 ;;		 -> STR_8(4), STR_7(2), STR_6(11), STR_5(11), 
  3224 ;;		 -> STR_4(2), STR_3(2), STR_2(4), STR_1(2), 
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;		None
  3227 ;; Return value:  Size  Location     Type
  3228 ;;                  1    wreg      void 
  3229 ;; Registers used:
  3230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3231 ;; Tracked objects:
  3232 ;;		On entry : 0/0
  3233 ;;		On exit  : 0/0
  3234 ;;		Unchanged: 0/0
  3235 ;; Data sizes:     COMRAM   BANK0   BANK1
  3236 ;;      Params:         2       0       0
  3237 ;;      Locals:         0       0       0
  3238 ;;      Temps:          0       0       0
  3239 ;;      Totals:         2       0       0
  3240 ;;Total ram usage:        2 bytes
  3241 ;; Hardware stack levels used:    1
  3242 ;; Hardware stack levels required when called:    7
  3243 ;; This function calls:
  3244 ;;		_write
  3245 ;; This function is called by:
  3246 ;;		_main
  3247 ;;		_print_long
  3248 ;;		_print_int
  3249 ;; This function uses a non-reentrant model
  3250 ;;
  3251                           
  3252                           	psect	text16
  3253  0010F8                     __ptext16:
  3254                           	callstack 0
  3255  0010F8                     _print:
  3256                           	callstack 22
  3257  0010F8                     
  3258                           ;LiquidCrystal.c: 135:     void print(unsigned char *chr);LiquidCrystal.c: 136:     {;Li
      +                          quidCrystal.c: 137:         while (*chr != '\0')
  3259  0010F8  EF92  F008         	goto	l2526
  3260  0010FC                     l2522:
  3261                           
  3262                           ;LiquidCrystal.c: 138:         {;LiquidCrystal.c: 139:             write(*chr);
  3263  0010FC  C016  FFF6         	movff	print@chr,tblptrl
  3264  001100  C017  FFF7         	movff	print@chr+1,tblptrh
  3265  001104  6AF8               	clrf	tblptru,c
  3266  001106  0E01               	movlw	(high __ramtop+-1)
  3267  001108  64F7               	cpfsgt	tblptrh,c
  3268  00110A  D003               	bra	u1967
  3269  00110C  0008               	tblrd		*
  3270  00110E  50F5               	movf	tablat,w,c
  3271  001110  D005               	bra	u1960
  3272  001112                     u1967:
  3273  001112  CFF6 FFE1          	movff	tblptrl,fsr1l
  3274  001116  CFF7 FFE2          	movff	tblptrh,fsr1h
  3275  00111A  50E7               	movf	indf1,w,c
  3276  00111C                     u1960:
  3277  00111C  EC00  F00A         	call	_write
  3278  001120                     
  3279                           ;LiquidCrystal.c: 140:             chr++;
  3280  001120  4A16               	infsnz	print@chr^0,f,c
  3281  001122  2A17               	incf	(print@chr+1)^0,f,c
  3282  001124                     l2526:
  3283                           
  3284                           ;LiquidCrystal.c: 137:         while (*chr != '\0')
  3285  001124  C016  FFF6         	movff	print@chr,tblptrl
  3286  001128  C017  FFF7         	movff	print@chr+1,tblptrh
  3287  00112C  6AF8               	clrf	tblptru,c
  3288  00112E  0E01               	movlw	(high __ramtop+-1)
  3289  001130  64F7               	cpfsgt	tblptrh,c
  3290  001132  D003               	bra	u1977
  3291  001134  0008               	tblrd		*
  3292  001136  50F5               	movf	tablat,w,c
  3293  001138  D005               	bra	u1970
  3294  00113A                     u1977:
  3295  00113A  CFF6 FFE1          	movff	tblptrl,fsr1l
  3296  00113E  CFF7 FFE2          	movff	tblptrh,fsr1h
  3297  001142  50E7               	movf	indf1,w,c
  3298  001144                     u1970:
  3299  001144  0900               	iorlw	0
  3300  001146  A4D8               	btfss	status,2,c
  3301  001148  EFA8  F008         	goto	u1981
  3302  00114C  EFAA  F008         	goto	u1980
  3303  001150                     u1981:
  3304  001150  EF7E  F008         	goto	l2522
  3305  001154                     u1980:
  3306  001154  0012               	return		;funcret
  3307  001156                     __end_of_print:
  3308                           	callstack 0
  3309                           
  3310 ;; *************** function _write *****************
  3311 ;; Defined at:
  3312 ;;		line 125 in file "LiquidCrystal.c"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;  chr             1    wreg     unsigned char 
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;  chr             1   20[COMRAM] unsigned char 
  3317 ;; Return value:  Size  Location     Type
  3318 ;;                  1    wreg      void 
  3319 ;; Registers used:
  3320 ;;		wreg, fsr2l, fsr2h, status,2, cstack
  3321 ;; Tracked objects:
  3322 ;;		On entry : 0/0
  3323 ;;		On exit  : 0/0
  3324 ;;		Unchanged: 0/0
  3325 ;; Data sizes:     COMRAM   BANK0   BANK1
  3326 ;;      Params:         0       0       0
  3327 ;;      Locals:         1       0       0
  3328 ;;      Temps:          0       0       0
  3329 ;;      Totals:         1       0       0
  3330 ;;Total ram usage:        1 bytes
  3331 ;; Hardware stack levels used:    1
  3332 ;; Hardware stack levels required when called:    6
  3333 ;; This function calls:
  3334 ;;		_sendData
  3335 ;; This function is called by:
  3336 ;;		_print
  3337 ;; This function uses a non-reentrant model
  3338 ;;
  3339                           
  3340                           	psect	text17
  3341  001400                     __ptext17:
  3342                           	callstack 0
  3343  001400                     _write:
  3344                           	callstack 22
  3345                           
  3346                           ;incstack = 0
  3347                           ;write@chr stored from wreg
  3348  001400  6E15               	movwf	write@chr^0,c
  3349  001402                     
  3350                           ;LiquidCrystal.c: 125:     void write(unsigned char chr);LiquidCrystal.c: 126:     {;Liq
      +                          uidCrystal.c: 127:         sendData(chr);
  3351  001402  5015               	movf	write@chr^0,w,c
  3352  001404  ECEC  F009         	call	_sendData
  3353  001408  0012               	return		;funcret
  3354  00140A                     __end_of_write:
  3355                           	callstack 0
  3356                           
  3357 ;; *************** function _sendData *****************
  3358 ;; Defined at:
  3359 ;;		line 425 in file "LiquidCrystal.c"
  3360 ;; Parameters:    Size  Location     Type
  3361 ;;  value           1    wreg     unsigned char 
  3362 ;; Auto vars:     Size  Location     Type
  3363 ;;  value           1   19[COMRAM] unsigned char 
  3364 ;; Return value:  Size  Location     Type
  3365 ;;                  1    wreg      void 
  3366 ;; Registers used:
  3367 ;;		wreg, fsr2l, fsr2h, status,2, cstack
  3368 ;; Tracked objects:
  3369 ;;		On entry : 0/0
  3370 ;;		On exit  : 0/0
  3371 ;;		Unchanged: 0/0
  3372 ;; Data sizes:     COMRAM   BANK0   BANK1
  3373 ;;      Params:         0       0       0
  3374 ;;      Locals:         1       0       0
  3375 ;;      Temps:          0       0       0
  3376 ;;      Totals:         1       0       0
  3377 ;;Total ram usage:        1 bytes
  3378 ;; Hardware stack levels used:    1
  3379 ;; Hardware stack levels required when called:    5
  3380 ;; This function calls:
  3381 ;;		_send
  3382 ;; This function is called by:
  3383 ;;		_write
  3384 ;; This function uses a non-reentrant model
  3385 ;;
  3386                           
  3387                           	psect	text18
  3388  0013D8                     __ptext18:
  3389                           	callstack 0
  3390  0013D8                     _sendData:
  3391                           	callstack 22
  3392                           
  3393                           ;incstack = 0
  3394                           ;sendData@value stored from wreg
  3395  0013D8  6E14               	movwf	sendData@value^0,c
  3396  0013DA                     
  3397                           ;LiquidCrystal.c: 425:     void sendData(unsigned char value);LiquidCrystal.c: 426:     
      +                          {;LiquidCrystal.c: 427:         send(value, 1);
  3398  0013DA  0E01               	movlw	1
  3399  0013DC  6E12               	movwf	send@mode^0,c
  3400  0013DE  5014               	movf	sendData@value^0,w,c
  3401  0013E0  ECD4  F008         	call	_send
  3402  0013E4  0012               	return		;funcret
  3403  0013E6                     __end_of_sendData:
  3404                           	callstack 0
  3405                           
  3406 ;; *************** function _pin_setup *****************
  3407 ;; Defined at:
  3408 ;;		line 33 in file "LiquidCrystal.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;  dp              2   16[COMRAM] PTR volatile struct .
  3411 ;;		 -> PORTC(1), 
  3412 ;;  sp              2   18[COMRAM] PTR volatile struct .
  3413 ;;		 -> PORTD(1), 
  3414 ;; Auto vars:     Size  Location     Type
  3415 ;;		None
  3416 ;; Return value:  Size  Location     Type
  3417 ;;                  1    wreg      void 
  3418 ;; Registers used:
  3419 ;;		wreg, status,2, status,0
  3420 ;; Tracked objects:
  3421 ;;		On entry : 0/0
  3422 ;;		On exit  : 0/0
  3423 ;;		Unchanged: 0/0
  3424 ;; Data sizes:     COMRAM   BANK0   BANK1
  3425 ;;      Params:         4       0       0
  3426 ;;      Locals:         0       0       0
  3427 ;;      Temps:          0       0       0
  3428 ;;      Totals:         4       0       0
  3429 ;;Total ram usage:        4 bytes
  3430 ;; Hardware stack levels used:    1
  3431 ;; Hardware stack levels required when called:    2
  3432 ;; This function calls:
  3433 ;;		Nothing
  3434 ;; This function is called by:
  3435 ;;		_main
  3436 ;; This function uses a non-reentrant model
  3437 ;;
  3438                           
  3439                           	psect	text19
  3440  0013A6                     __ptext19:
  3441                           	callstack 0
  3442  0013A6                     _pin_setup:
  3443                           	callstack 28
  3444  0013A6                     
  3445                           ;LiquidCrystal.c: 33:     void pin_setup(volatile PORTx_t *dp, volatile PORTx_t *sp);Liq
      +                          uidCrystal.c: 34:     {;LiquidCrystal.c: 36:         dataPORT = dp;
  3446  0013A6  C011  F0BC         	movff	pin_setup@dp,_dataPORT
  3447  0013AA  C012  F0BD         	movff	pin_setup@dp+1,_dataPORT+1
  3448                           
  3449                           ;LiquidCrystal.c: 39:         signalPORT = sp;
  3450  0013AE  C013  F06D         	movff	pin_setup@sp,_signalPORT
  3451  0013B2  C014  F06E         	movff	pin_setup@sp+1,_signalPORT+1
  3452  0013B6  0012               	return		;funcret
  3453  0013B8                     __end_of_pin_setup:
  3454                           	callstack 0
  3455                           
  3456 ;; *************** function _home *****************
  3457 ;; Defined at:
  3458 ;;		line 227 in file "LiquidCrystal.c"
  3459 ;; Parameters:    Size  Location     Type
  3460 ;;		None
  3461 ;; Auto vars:     Size  Location     Type
  3462 ;;		None
  3463 ;; Return value:  Size  Location     Type
  3464 ;;                  1    wreg      void 
  3465 ;; Registers used:
  3466 ;;		wreg, fsr2l, fsr2h, status,2, cstack
  3467 ;; Tracked objects:
  3468 ;;		On entry : 0/0
  3469 ;;		On exit  : 0/0
  3470 ;;		Unchanged: 0/0
  3471 ;; Data sizes:     COMRAM   BANK0   BANK1
  3472 ;;      Params:         0       0       0
  3473 ;;      Locals:         0       0       0
  3474 ;;      Temps:          0       0       0
  3475 ;;      Totals:         0       0       0
  3476 ;;Total ram usage:        0 bytes
  3477 ;; Hardware stack levels used:    1
  3478 ;; Hardware stack levels required when called:    6
  3479 ;; This function calls:
  3480 ;;		_sendCommand
  3481 ;; This function is called by:
  3482 ;;		_main
  3483 ;; This function uses a non-reentrant model
  3484 ;;
  3485                           
  3486                           	psect	text20
  3487  0013B8                     __ptext20:
  3488                           	callstack 0
  3489  0013B8                     _home:
  3490                           	callstack 24
  3491  0013B8                     
  3492                           ;LiquidCrystal.c: 229:         sendCommand(0x02);
  3493  0013B8  0E02               	movlw	2
  3494  0013BA  ECF3  F009         	call	_sendCommand
  3495  0013BE                     
  3496                           ;LiquidCrystal.c: 230:         _delay((unsigned long)((2)*(1000000/4000.0)));
  3497  0013BE  0EA6               	movlw	166
  3498  0013C0                     u2087:
  3499  0013C0  2EE8               	decfsz	wreg,f,c
  3500  0013C2  D7FE               	bra	u2087
  3501  0013C4  D000               	nop2	
  3502  0013C6  0012               	return		;funcret
  3503  0013C8                     __end_of_home:
  3504                           	callstack 0
  3505                           
  3506 ;; *************** function _begin *****************
  3507 ;; Defined at:
  3508 ;;		line 55 in file "LiquidCrystal.c"
  3509 ;; Parameters:    Size  Location     Type
  3510 ;;  cols            1    wreg     unsigned char 
  3511 ;;  lines           1   20[COMRAM] unsigned char 
  3512 ;;  dotsize         1   21[COMRAM] unsigned char 
  3513 ;; Auto vars:     Size  Location     Type
  3514 ;;  cols            1   23[COMRAM] unsigned char 
  3515 ;; Return value:  Size  Location     Type
  3516 ;;                  1    wreg      void 
  3517 ;; Registers used:
  3518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3519 ;; Tracked objects:
  3520 ;;		On entry : 0/0
  3521 ;;		On exit  : 0/0
  3522 ;;		Unchanged: 0/0
  3523 ;; Data sizes:     COMRAM   BANK0   BANK1
  3524 ;;      Params:         2       0       0
  3525 ;;      Locals:         1       0       0
  3526 ;;      Temps:          1       0       0
  3527 ;;      Totals:         4       0       0
  3528 ;;Total ram usage:        4 bytes
  3529 ;; Hardware stack levels used:    1
  3530 ;; Hardware stack levels required when called:    7
  3531 ;; This function calls:
  3532 ;;		_clear
  3533 ;;		_displayON
  3534 ;;		_sendCommand
  3535 ;;		_setRowOffsets
  3536 ;; This function is called by:
  3537 ;;		_main
  3538 ;; This function uses a non-reentrant model
  3539 ;;
  3540                           
  3541                           	psect	text21
  3542  000F86                     __ptext21:
  3543                           	callstack 0
  3544  000F86                     _begin:
  3545                           	callstack 23
  3546                           
  3547                           ;incstack = 0
  3548                           ;begin@cols stored from wreg
  3549  000F86  6E18               	movwf	begin@cols^0,c
  3550  000F88                     
  3551                           ;LiquidCrystal.c: 55:     void begin(unsigned char cols, unsigned char lines, unsigned c
      +                          har dotsize);LiquidCrystal.c: 56:     {;LiquidCrystal.c: 60:         _displayfunction = 
      +                          0x10 | 0x00 | 0x00;
  3552  000F88  0E10               	movlw	16
  3553  000F8A  0100               	movlb	0	; () banked
  3554  000F8C  6FBE               	movwf	__displayfunction& (0+255),b
  3555  000F8E                     
  3556                           ; BSR set to: 0
  3557                           ;LiquidCrystal.c: 62:          if (lines > 1)
  3558  000F8E  0E01               	movlw	1
  3559  000F90  6415               	cpfsgt	begin@lines^0,c
  3560  000F92  EFCD  F007         	goto	u1991
  3561  000F96  EFCF  F007         	goto	u1990
  3562  000F9A                     u1991:
  3563  000F9A  EFD0  F007         	goto	l2554
  3564  000F9E                     u1990:
  3565  000F9E                     
  3566                           ; BSR set to: 0
  3567                           ;LiquidCrystal.c: 63:         {;LiquidCrystal.c: 64:             _displayfunction |= 0x0
      +                          8;
  3568  000F9E  87BE               	bsf	__displayfunction& (0+255),3,b
  3569  000FA0                     l2554:
  3570                           
  3571                           ; BSR set to: 0
  3572                           ;LiquidCrystal.c: 67:         _numlines = lines;
  3573  000FA0  C015  F06A         	movff	begin@lines,__numlines
  3574  000FA4                     
  3575                           ; BSR set to: 0
  3576                           ;LiquidCrystal.c: 74:         setRowOffsets(0x00, 0x40, 0x00 + cols, 0x40 + cols);
  3577  000FA4  0E40               	movlw	64
  3578  000FA6  6E11               	movwf	setRowOffsets@row1^0,c
  3579  000FA8  C018  F012         	movff	begin@cols,setRowOffsets@row2
  3580  000FAC  5018               	movf	begin@cols^0,w,c
  3581  000FAE  0F40               	addlw	64
  3582  000FB0  6E13               	movwf	setRowOffsets@row3^0,c
  3583  000FB2  0E00               	movlw	0
  3584  000FB4  ECBF  F009         	call	_setRowOffsets
  3585  000FB8                     
  3586                           ;LiquidCrystal.c: 76:         if (dotsize != 0x00)
  3587  000FB8  5016               	movf	begin@dotsize^0,w,c
  3588  000FBA  B4D8               	btfsc	status,2,c
  3589  000FBC  EFE2  F007         	goto	u2001
  3590  000FC0  EFE4  F007         	goto	u2000
  3591  000FC4                     u2001:
  3592  000FC4  EFE6  F007         	goto	l2562
  3593  000FC8                     u2000:
  3594  000FC8                     
  3595                           ;LiquidCrystal.c: 77:             _displayfunction |= 0x04;
  3596  000FC8  0100               	movlb	0	; () banked
  3597  000FCA  85BE               	bsf	__displayfunction& (0+255),2,b
  3598  000FCC                     l2562:
  3599                           
  3600                           ;LiquidCrystal.c: 82:         _delay((unsigned long)((41)*(1000000/4000.0)));
  3601  000FCC  0E0E               	movlw	14
  3602  000FCE  6E17               	movwf	??_begin^0,c
  3603  000FD0  0E4E               	movlw	78
  3604  000FD2                     u2097:
  3605  000FD2  2EE8               	decfsz	wreg,f,c
  3606  000FD4  D7FE               	bra	u2097
  3607  000FD6  2E17               	decfsz	??_begin^0,f,c
  3608  000FD8  D7FC               	bra	u2097
  3609  000FDA  D000               	nop2	
  3610  000FDC                     
  3611                           ;LiquidCrystal.c: 83:         sendCommand(0x20 | _displayfunction);
  3612  000FDC  0100               	movlb	0	; () banked
  3613  000FDE  51BE               	movf	__displayfunction& (0+255),w,b
  3614  000FE0  0920               	iorlw	32
  3615  000FE2  ECF3  F009         	call	_sendCommand
  3616  000FE6                     
  3617                           ;LiquidCrystal.c: 84:         _delay((unsigned long)((5)*(1000000/4000.0)));
  3618  000FE6  0EFA               	movlw	250
  3619  000FE8                     u2107:
  3620  000FE8  D000               	nop2	
  3621  000FEA  2EE8               	decfsz	wreg,f,c
  3622  000FEC  D7FD               	bra	u2107
  3623  000FEE                     
  3624                           ;LiquidCrystal.c: 85:         sendCommand(0x20 | _displayfunction);
  3625  000FEE  0100               	movlb	0	; () banked
  3626  000FF0  51BE               	movf	__displayfunction& (0+255),w,b
  3627  000FF2  0920               	iorlw	32
  3628  000FF4  ECF3  F009         	call	_sendCommand
  3629  000FF8                     
  3630                           ;LiquidCrystal.c: 86:         _delay((unsigned long)((120)*(1000000/4000000.0)));
  3631  000FF8  0E0A               	movlw	10
  3632  000FFA                     u2117:
  3633  000FFA  2EE8               	decfsz	wreg,f,c
  3634  000FFC  D7FE               	bra	u2117
  3635  000FFE                     
  3636                           ;LiquidCrystal.c: 87:         sendCommand(0x20 | _displayfunction);
  3637  000FFE  0100               	movlb	0	; () banked
  3638  001000  51BE               	movf	__displayfunction& (0+255),w,b
  3639  001002  0920               	iorlw	32
  3640  001004  ECF3  F009         	call	_sendCommand
  3641  001008                     
  3642                           ;LiquidCrystal.c: 105:         sendCommand(0x20 | _displayfunction);
  3643  001008  0100               	movlb	0	; () banked
  3644  00100A  51BE               	movf	__displayfunction& (0+255),w,b
  3645  00100C  0920               	iorlw	32
  3646  00100E  ECF3  F009         	call	_sendCommand
  3647  001012                     
  3648                           ;LiquidCrystal.c: 109:         _displaycontrol = 0x04 | 0x00 | 0x00;
  3649  001012  0E04               	movlw	4
  3650  001014  6E6C               	movwf	__displaycontrol^0,c
  3651  001016                     
  3652                           ;LiquidCrystal.c: 110:         displayON();
  3653  001016  ECFA  F009         	call	_displayON	;wreg free
  3654                           
  3655                           ;LiquidCrystal.c: 113:         clear();
  3656  00101A  ECE4  F009         	call	_clear	;wreg free
  3657  00101E                     
  3658                           ;LiquidCrystal.c: 116:         _displaymode = 0x02 | 0x00;
  3659  00101E  0E02               	movlw	2
  3660  001020  6E6B               	movwf	__displaymode^0,c
  3661  001022                     
  3662                           ;LiquidCrystal.c: 117:         sendCommand(0x04 | _displaymode);
  3663  001022  506B               	movf	__displaymode^0,w,c
  3664  001024  0904               	iorlw	4
  3665  001026  ECF3  F009         	call	_sendCommand
  3666  00102A  0012               	return		;funcret
  3667  00102C                     __end_of_begin:
  3668                           	callstack 0
  3669                           
  3670 ;; *************** function _setRowOffsets *****************
  3671 ;; Defined at:
  3672 ;;		line 249 in file "LiquidCrystal.c"
  3673 ;; Parameters:    Size  Location     Type
  3674 ;;  row0            1    wreg     unsigned char 
  3675 ;;  row1            1   16[COMRAM] unsigned char 
  3676 ;;  row2            1   17[COMRAM] unsigned char 
  3677 ;;  row3            1   18[COMRAM] unsigned char 
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;  row0            1   19[COMRAM] unsigned char 
  3680 ;; Return value:  Size  Location     Type
  3681 ;;                  1    wreg      void 
  3682 ;; Registers used:
  3683 ;;		wreg
  3684 ;; Tracked objects:
  3685 ;;		On entry : 0/0
  3686 ;;		On exit  : 0/0
  3687 ;;		Unchanged: 0/0
  3688 ;; Data sizes:     COMRAM   BANK0   BANK1
  3689 ;;      Params:         3       0       0
  3690 ;;      Locals:         1       0       0
  3691 ;;      Temps:          0       0       0
  3692 ;;      Totals:         4       0       0
  3693 ;;Total ram usage:        4 bytes
  3694 ;; Hardware stack levels used:    1
  3695 ;; Hardware stack levels required when called:    2
  3696 ;; This function calls:
  3697 ;;		Nothing
  3698 ;; This function is called by:
  3699 ;;		_begin
  3700 ;; This function uses a non-reentrant model
  3701 ;;
  3702                           
  3703                           	psect	text22
  3704  00137E                     __ptext22:
  3705                           	callstack 0
  3706  00137E                     _setRowOffsets:
  3707                           	callstack 27
  3708                           
  3709                           ;incstack = 0
  3710                           ;setRowOffsets@row0 stored from wreg
  3711  00137E  6E14               	movwf	setRowOffsets@row0^0,c
  3712  001380                     
  3713                           ;LiquidCrystal.c: 249:     void setRowOffsets(unsigned char row0, unsigned char row1, un
      +                          signed char row2, unsigned char row3);LiquidCrystal.c: 250:     {;LiquidCrystal.c: 251: 
      +                                  _rowOffsets[0] = row0;
  3714  001380  C014  F15C         	movff	setRowOffsets@row0,__rowOffsets
  3715  001384                     
  3716                           ;LiquidCrystal.c: 252:         _rowOffsets[1] = row1;
  3717  001384  C011  F15D         	movff	setRowOffsets@row1,__rowOffsets+1
  3718  001388                     
  3719                           ;LiquidCrystal.c: 253:         _rowOffsets[2] = row2;
  3720  001388  C012  F15E         	movff	setRowOffsets@row2,__rowOffsets+2
  3721  00138C                     
  3722                           ;LiquidCrystal.c: 254:         _rowOffsets[3] = row3;
  3723  00138C  C013  F15F         	movff	setRowOffsets@row3,__rowOffsets+3
  3724  001390  0012               	return		;funcret
  3725  001392                     __end_of_setRowOffsets:
  3726                           	callstack 0
  3727                           
  3728 ;; *************** function _displayON *****************
  3729 ;; Defined at:
  3730 ;;		line 168 in file "LiquidCrystal.c"
  3731 ;; Parameters:    Size  Location     Type
  3732 ;;		None
  3733 ;; Auto vars:     Size  Location     Type
  3734 ;;		None
  3735 ;; Return value:  Size  Location     Type
  3736 ;;                  1    wreg      void 
  3737 ;; Registers used:
  3738 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3739 ;; Tracked objects:
  3740 ;;		On entry : 0/0
  3741 ;;		On exit  : 0/0
  3742 ;;		Unchanged: 0/0
  3743 ;; Data sizes:     COMRAM   BANK0   BANK1
  3744 ;;      Params:         0       0       0
  3745 ;;      Locals:         0       0       0
  3746 ;;      Temps:          0       0       0
  3747 ;;      Totals:         0       0       0
  3748 ;;Total ram usage:        0 bytes
  3749 ;; Hardware stack levels used:    1
  3750 ;; Hardware stack levels required when called:    6
  3751 ;; This function calls:
  3752 ;;		_sendCommand
  3753 ;; This function is called by:
  3754 ;;		_begin
  3755 ;;		_display
  3756 ;; This function uses a non-reentrant model
  3757 ;;
  3758                           
  3759                           	psect	text23
  3760  0013F4                     __ptext23:
  3761                           	callstack 0
  3762  0013F4                     _displayON:
  3763                           	callstack 23
  3764  0013F4                     
  3765                           ;LiquidCrystal.c: 170:         _displaycontrol |= 0x04;
  3766  0013F4  846C               	bsf	__displaycontrol^0,2,c
  3767  0013F6                     
  3768                           ;LiquidCrystal.c: 171:         sendCommand(0x08 | _displaycontrol);
  3769  0013F6  506C               	movf	__displaycontrol^0,w,c
  3770  0013F8  0908               	iorlw	8
  3771  0013FA  ECF3  F009         	call	_sendCommand
  3772  0013FE  0012               	return		;funcret
  3773  001400                     __end_of_displayON:
  3774                           	callstack 0
  3775                           
  3776 ;; *************** function _clear *****************
  3777 ;; Defined at:
  3778 ;;		line 215 in file "LiquidCrystal.c"
  3779 ;; Parameters:    Size  Location     Type
  3780 ;;		None
  3781 ;; Auto vars:     Size  Location     Type
  3782 ;;		None
  3783 ;; Return value:  Size  Location     Type
  3784 ;;                  1    wreg      void 
  3785 ;; Registers used:
  3786 ;;		wreg, fsr2l, fsr2h, status,2, cstack
  3787 ;; Tracked objects:
  3788 ;;		On entry : 0/0
  3789 ;;		On exit  : 0/0
  3790 ;;		Unchanged: 0/0
  3791 ;; Data sizes:     COMRAM   BANK0   BANK1
  3792 ;;      Params:         0       0       0
  3793 ;;      Locals:         0       0       0
  3794 ;;      Temps:          0       0       0
  3795 ;;      Totals:         0       0       0
  3796 ;;Total ram usage:        0 bytes
  3797 ;; Hardware stack levels used:    1
  3798 ;; Hardware stack levels required when called:    6
  3799 ;; This function calls:
  3800 ;;		_sendCommand
  3801 ;; This function is called by:
  3802 ;;		_main
  3803 ;;		_begin
  3804 ;; This function uses a non-reentrant model
  3805 ;;
  3806                           
  3807                           	psect	text24
  3808  0013C8                     __ptext24:
  3809                           	callstack 0
  3810  0013C8                     _clear:
  3811                           	callstack 24
  3812  0013C8                     
  3813                           ;LiquidCrystal.c: 217:         sendCommand(0x01);
  3814  0013C8  0E01               	movlw	1
  3815  0013CA  ECF3  F009         	call	_sendCommand
  3816  0013CE                     
  3817                           ;LiquidCrystal.c: 218:         _delay((unsigned long)((2)*(1000000/4000.0)));
  3818  0013CE  0EA6               	movlw	166
  3819  0013D0                     u2127:
  3820  0013D0  2EE8               	decfsz	wreg,f,c
  3821  0013D2  D7FE               	bra	u2127
  3822  0013D4  D000               	nop2	
  3823  0013D6  0012               	return		;funcret
  3824  0013D8                     __end_of_clear:
  3825                           	callstack 0
  3826                           
  3827 ;; *************** function _sendCommand *****************
  3828 ;; Defined at:
  3829 ;;		line 439 in file "LiquidCrystal.c"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;  value           1    wreg     unsigned char 
  3832 ;; Auto vars:     Size  Location     Type
  3833 ;;  value           1   19[COMRAM] unsigned char 
  3834 ;; Return value:  Size  Location     Type
  3835 ;;                  1    wreg      void 
  3836 ;; Registers used:
  3837 ;;		wreg, fsr2l, fsr2h, status,2, cstack
  3838 ;; Tracked objects:
  3839 ;;		On entry : 0/0
  3840 ;;		On exit  : 0/0
  3841 ;;		Unchanged: 0/0
  3842 ;; Data sizes:     COMRAM   BANK0   BANK1
  3843 ;;      Params:         0       0       0
  3844 ;;      Locals:         1       0       0
  3845 ;;      Temps:          0       0       0
  3846 ;;      Totals:         1       0       0
  3847 ;;Total ram usage:        1 bytes
  3848 ;; Hardware stack levels used:    1
  3849 ;; Hardware stack levels required when called:    5
  3850 ;; This function calls:
  3851 ;;		_send
  3852 ;; This function is called by:
  3853 ;;		_begin
  3854 ;;		_displayON
  3855 ;;		_clear
  3856 ;;		_home
  3857 ;;		_setCursor
  3858 ;;		_displayOFF
  3859 ;;		_cursor
  3860 ;;		_noCursor
  3861 ;;		_blink
  3862 ;;		_noBlink
  3863 ;;		_scrollDisplayLeft
  3864 ;;		_scrollDisplayRight
  3865 ;;		_leftToRight
  3866 ;;		_rightToLeft
  3867 ;;		_autoscroll
  3868 ;;		_noAutoscroll
  3869 ;; This function uses a non-reentrant model
  3870 ;;
  3871                           
  3872                           	psect	text25
  3873  0013E6                     __ptext25:
  3874                           	callstack 0
  3875  0013E6                     _sendCommand:
  3876                           	callstack 24
  3877                           
  3878                           ;incstack = 0
  3879                           ;sendCommand@value stored from wreg
  3880  0013E6  6E14               	movwf	sendCommand@value^0,c
  3881  0013E8                     
  3882                           ;LiquidCrystal.c: 439:     void sendCommand(unsigned char value);LiquidCrystal.c: 440:  
      +                             {;LiquidCrystal.c: 441:         send(value, 0);
  3883  0013E8  0E00               	movlw	0
  3884  0013EA  6E12               	movwf	send@mode^0,c
  3885  0013EC  5014               	movf	sendCommand@value^0,w,c
  3886  0013EE  ECD4  F008         	call	_send
  3887  0013F2  0012               	return		;funcret
  3888  0013F4                     __end_of_sendCommand:
  3889                           	callstack 0
  3890                           
  3891 ;; *************** function _send *****************
  3892 ;; Defined at:
  3893 ;;		line 398 in file "LiquidCrystal.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;  value           1    wreg     unsigned char 
  3896 ;;  mode            1   17[COMRAM] unsigned char 
  3897 ;; Auto vars:     Size  Location     Type
  3898 ;;  value           1   18[COMRAM] unsigned char 
  3899 ;; Return value:  Size  Location     Type
  3900 ;;                  1    wreg      void 
  3901 ;; Registers used:
  3902 ;;		wreg, fsr2l, fsr2h, status,2, cstack
  3903 ;; Tracked objects:
  3904 ;;		On entry : 0/0
  3905 ;;		On exit  : 0/0
  3906 ;;		Unchanged: 0/0
  3907 ;; Data sizes:     COMRAM   BANK0   BANK1
  3908 ;;      Params:         1       0       0
  3909 ;;      Locals:         1       0       0
  3910 ;;      Temps:          0       0       0
  3911 ;;      Totals:         2       0       0
  3912 ;;Total ram usage:        2 bytes
  3913 ;; Hardware stack levels used:    1
  3914 ;; Hardware stack levels required when called:    4
  3915 ;; This function calls:
  3916 ;;		_write8bits
  3917 ;; This function is called by:
  3918 ;;		_sendData
  3919 ;;		_sendCommand
  3920 ;; This function uses a non-reentrant model
  3921 ;;
  3922                           
  3923                           	psect	text26
  3924  0011A8                     __ptext26:
  3925                           	callstack 0
  3926  0011A8                     _send:
  3927                           	callstack 24
  3928                           
  3929                           ;incstack = 0
  3930                           ;send@value stored from wreg
  3931  0011A8  6E13               	movwf	send@value^0,c
  3932  0011AA                     
  3933                           ;LiquidCrystal.c: 398:     void send(unsigned char value, unsigned char mode);LiquidCrys
      +                          tal.c: 399:     {;LiquidCrystal.c: 400:         if (mode)
  3934  0011AA  5012               	movf	send@mode^0,w,c
  3935  0011AC  B4D8               	btfsc	status,2,c
  3936  0011AE  EFDB  F008         	goto	u1671
  3937  0011B2  EFDD  F008         	goto	u1670
  3938  0011B6                     u1671:
  3939  0011B6  EFE4  F008         	goto	l2366
  3940  0011BA                     u1670:
  3941  0011BA                     
  3942                           ;LiquidCrystal.c: 401:             signalPORT->_rs = 1;
  3943  0011BA  C06D  FFD9         	movff	_signalPORT,fsr2l
  3944  0011BE  C06E  FFDA         	movff	_signalPORT+1,fsr2h
  3945  0011C2  80DF               	bsf	indf2,0,c
  3946  0011C4  EFE9  F008         	goto	l213
  3947  0011C8                     l2366:
  3948                           
  3949                           ;LiquidCrystal.c: 403:             signalPORT->_rs = 0;
  3950  0011C8  C06D  FFD9         	movff	_signalPORT,fsr2l
  3951  0011CC  C06E  FFDA         	movff	_signalPORT+1,fsr2h
  3952  0011D0  90DF               	bcf	indf2,0,c
  3953  0011D2                     l213:
  3954                           
  3955                           ;LiquidCrystal.c: 406:         signalPORT->_rw = 0;
  3956  0011D2  C06D  FFD9         	movff	_signalPORT,fsr2l
  3957  0011D6  C06E  FFDA         	movff	_signalPORT+1,fsr2h
  3958  0011DA  92DF               	bcf	indf2,1,c
  3959  0011DC                     
  3960                           ;LiquidCrystal.c: 409:         if (_displayfunction & 0x10)
  3961  0011DC  0100               	movlb	0	; () banked
  3962  0011DE  A9BE               	btfss	__displayfunction& (0+255),4,b
  3963  0011E0  EFF4  F008         	goto	u1681
  3964  0011E4  EFF6  F008         	goto	u1680
  3965  0011E8                     u1681:
  3966  0011E8  EFF9  F008         	goto	l215
  3967  0011EC                     u1680:
  3968  0011EC                     
  3969                           ; BSR set to: 0
  3970                           ;LiquidCrystal.c: 410:         {;LiquidCrystal.c: 411:             write8bits(value);
  3971  0011EC  5013               	movf	send@value^0,w,c
  3972  0011EE  ECC9  F009         	call	_write8bits
  3973  0011F2                     l215:
  3974  0011F2  0012               	return		;funcret
  3975  0011F4                     __end_of_send:
  3976                           	callstack 0
  3977                           
  3978 ;; *************** function _write8bits *****************
  3979 ;; Defined at:
  3980 ;;		line 469 in file "LiquidCrystal.c"
  3981 ;; Parameters:    Size  Location     Type
  3982 ;;  value           1    wreg     unsigned char 
  3983 ;; Auto vars:     Size  Location     Type
  3984 ;;  value           1   16[COMRAM] unsigned char 
  3985 ;; Return value:  Size  Location     Type
  3986 ;;                  1    wreg      void 
  3987 ;; Registers used:
  3988 ;;		wreg, fsr2l, fsr2h, cstack
  3989 ;; Tracked objects:
  3990 ;;		On entry : 0/0
  3991 ;;		On exit  : 0/0
  3992 ;;		Unchanged: 0/0
  3993 ;; Data sizes:     COMRAM   BANK0   BANK1
  3994 ;;      Params:         0       0       0
  3995 ;;      Locals:         1       0       0
  3996 ;;      Temps:          0       0       0
  3997 ;;      Totals:         1       0       0
  3998 ;;Total ram usage:        1 bytes
  3999 ;; Hardware stack levels used:    1
  4000 ;; Hardware stack levels required when called:    3
  4001 ;; This function calls:
  4002 ;;		_pulseEnable
  4003 ;; This function is called by:
  4004 ;;		_send
  4005 ;; This function uses a non-reentrant model
  4006 ;;
  4007                           
  4008                           	psect	text27
  4009  001392                     __ptext27:
  4010                           	callstack 0
  4011  001392                     _write8bits:
  4012                           	callstack 24
  4013                           
  4014                           ;incstack = 0
  4015                           ;write8bits@value stored from wreg
  4016  001392  6E11               	movwf	write8bits@value^0,c
  4017  001394                     
  4018                           ;LiquidCrystal.c: 469:     void write8bits(unsigned char value);LiquidCrystal.c: 470:   
      +                            {;LiquidCrystal.c: 471:         dataPORT->_data = value;
  4019  001394  C0BC  FFD9         	movff	_dataPORT,fsr2l
  4020  001398  C0BD  FFDA         	movff	_dataPORT+1,fsr2h
  4021  00139C  C011  FFDF         	movff	write8bits@value,indf2
  4022  0013A0                     
  4023                           ;LiquidCrystal.c: 473:         pulseEnable();
  4024  0013A0  ECAB  F009         	call	_pulseEnable	;wreg free
  4025  0013A4  0012               	return		;funcret
  4026  0013A6                     __end_of_write8bits:
  4027                           	callstack 0
  4028                           
  4029 ;; *************** function _pulseEnable *****************
  4030 ;; Defined at:
  4031 ;;		line 452 in file "LiquidCrystal.c"
  4032 ;; Parameters:    Size  Location     Type
  4033 ;;		None
  4034 ;; Auto vars:     Size  Location     Type
  4035 ;;		None
  4036 ;; Return value:  Size  Location     Type
  4037 ;;                  1    wreg      void 
  4038 ;; Registers used:
  4039 ;;		wreg, fsr2l, fsr2h
  4040 ;; Tracked objects:
  4041 ;;		On entry : 0/0
  4042 ;;		On exit  : 0/0
  4043 ;;		Unchanged: 0/0
  4044 ;; Data sizes:     COMRAM   BANK0   BANK1
  4045 ;;      Params:         0       0       0
  4046 ;;      Locals:         0       0       0
  4047 ;;      Temps:          0       0       0
  4048 ;;      Totals:         0       0       0
  4049 ;;Total ram usage:        0 bytes
  4050 ;; Hardware stack levels used:    1
  4051 ;; Hardware stack levels required when called:    2
  4052 ;; This function calls:
  4053 ;;		Nothing
  4054 ;; This function is called by:
  4055 ;;		_write8bits
  4056 ;; This function uses a non-reentrant model
  4057 ;;
  4058                           
  4059                           	psect	text28
  4060  001356                     __ptext28:
  4061                           	callstack 0
  4062  001356                     _pulseEnable:
  4063                           	callstack 24
  4064  001356                     
  4065                           ;LiquidCrystal.c: 454:         signalPORT->_enable = 0;
  4066  001356  C06D  FFD9         	movff	_signalPORT,fsr2l
  4067  00135A  C06E  FFDA         	movff	_signalPORT+1,fsr2h
  4068  00135E  94DF               	bcf	indf2,2,c
  4069  001360                     
  4070                           ;LiquidCrystal.c: 455:         _delay((unsigned long)((1)*(1000000/4000000.0)));
  4071                           ;LiquidCrystal.c: 456:         signalPORT->_enable = 1;
  4072  001360  C06D  FFD9         	movff	_signalPORT,fsr2l
  4073  001364  C06E  FFDA         	movff	_signalPORT+1,fsr2h
  4074  001368  84DF               	bsf	indf2,2,c
  4075  00136A                     
  4076                           ;LiquidCrystal.c: 457:         _delay((unsigned long)((1)*(1000000/4000000.0)));
  4077                           ;LiquidCrystal.c: 458:         signalPORT->_enable = 0;
  4078  00136A  C06D  FFD9         	movff	_signalPORT,fsr2l
  4079  00136E  C06E  FFDA         	movff	_signalPORT+1,fsr2h
  4080  001372  94DF               	bcf	indf2,2,c
  4081  001374                     
  4082                           ;LiquidCrystal.c: 459:         _delay((unsigned long)((100)*(1000000/4000000.0)));
  4083  001374  0E08               	movlw	8
  4084  001376                     u2137:
  4085  001376  2EE8               	decfsz	wreg,f,c
  4086  001378  D7FE               	bra	u2137
  4087  00137A  F000               	nop	
  4088  00137C  0012               	return		;funcret
  4089  00137E                     __end_of_pulseEnable:
  4090                           	callstack 0
  4091                           
  4092 ;; *************** function _adc_sample *****************
  4093 ;; Defined at:
  4094 ;;		line 142 in file "calc.c"
  4095 ;; Parameters:    Size  Location     Type
  4096 ;;		None
  4097 ;; Auto vars:     Size  Location     Type
  4098 ;;		None
  4099 ;; Return value:  Size  Location     Type
  4100 ;;                  1    wreg      void 
  4101 ;; Registers used:
  4102 ;;		wreg, status,2, status,0, cstack
  4103 ;; Tracked objects:
  4104 ;;		On entry : 0/0
  4105 ;;		On exit  : 0/0
  4106 ;;		Unchanged: 0/0
  4107 ;; Data sizes:     COMRAM   BANK0   BANK1
  4108 ;;      Params:         0       0       0
  4109 ;;      Locals:         0       0       0
  4110 ;;      Temps:          4       0       0
  4111 ;;      Totals:         4       0       0
  4112 ;;Total ram usage:        4 bytes
  4113 ;; Hardware stack levels used:    1
  4114 ;; Hardware stack levels required when called:    1
  4115 ;; This function calls:
  4116 ;;		___lmul
  4117 ;; This function is called by:
  4118 ;;		Interrupt level 2
  4119 ;; This function uses a non-reentrant model
  4120 ;;
  4121                           
  4122                           	psect	intcode
  4123  000008                     __pintcode:
  4124                           	callstack 0
  4125  000008                     _adc_sample:
  4126                           	callstack 20
  4127                           
  4128                           ;incstack = 0
  4129  000008  826F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4130  00000A                     
  4131                           ;calc.c: 147:     if (PIR1bits.ADIF && PIE1bits.ADIE)
  4132  00000A  AC9E               	btfss	158,6,c	;volatile
  4133  00000C  EF0A  F000         	goto	i2u139_41
  4134  000010  EF0C  F000         	goto	i2u139_40
  4135  000014                     i2u139_41:
  4136  000014  EFB7  F000         	goto	i2l101
  4137  000018                     i2u139_40:
  4138  000018  AC9D               	btfss	157,6,c	;volatile
  4139  00001A  EF11  F000         	goto	i2u140_41
  4140  00001E  EF13  F000         	goto	i2u140_40
  4141  000022                     i2u140_41:
  4142  000022  EFB7  F000         	goto	i2l101
  4143  000026                     i2u140_40:
  4144  000026                     
  4145                           ;calc.c: 148:     {;calc.c: 156:         PIR1bits.ADIF = 0;
  4146  000026  9C9E               	bcf	158,6,c	;volatile
  4147  000028                     
  4148                           ;calc.c: 158:         if (ADCON0bits.CHS == 0)
  4149  000028  30C2               	rrcf	194,w,c	;volatile
  4150  00002A  32E8               	rrcf	wreg,f,c
  4151  00002C  0B0F               	andlw	15
  4152  00002E  0900               	iorlw	0
  4153  000030  A4D8               	btfss	status,2,c
  4154  000032  EF1D  F000         	goto	i2u141_41
  4155  000036  EF1F  F000         	goto	i2u141_40
  4156  00003A                     i2u141_41:
  4157  00003A  EF4E  F000         	goto	i2l2156
  4158  00003E                     i2u141_40:
  4159  00003E                     
  4160                           ;calc.c: 159:         {;calc.c: 160:             POT1 = (ADRESH << 8) | ADRESL;
  4161  00003E  50C3               	movf	195,w,c	;volatile
  4162  000040  CFC4 F00D          	movff	4036,??_adc_sample	;volatile
  4163  000044  6A0E               	clrf	(??_adc_sample+1)^0,c
  4164  000046  C00D  F00E         	movff	??_adc_sample,??_adc_sample+1
  4165  00004A  6A0D               	clrf	??_adc_sample^0,c
  4166  00004C  100D               	iorwf	??_adc_sample^0,w,c
  4167  00004E  0100               	movlb	0	; () banked
  4168  000050  6FBA               	movwf	_POT1& (0+255),b	;volatile
  4169  000052  500E               	movf	(??_adc_sample+1)^0,w,c
  4170  000054  6FBB               	movwf	(_POT1+1)& (0+255),b	;volatile
  4171  000056                     
  4172                           ; BSR set to: 0
  4173                           ;calc.c: 161:             halfer1 = 511;
  4174  000056  0EFF               	movlw	255
  4175  000058  6FB0               	movwf	_halfer1& (0+255),b	;volatile
  4176  00005A  0E01               	movlw	1
  4177  00005C  6FB1               	movwf	(_halfer1+1)& (0+255),b	;volatile
  4178  00005E  0E00               	movlw	0
  4179  000060  6FB2               	movwf	(_halfer1+2)& (0+255),b	;volatile
  4180  000062  0E00               	movlw	0
  4181  000064  6FB3               	movwf	(_halfer1+3)& (0+255),b	;volatile
  4182  000066                     
  4183                           ; BSR set to: 0
  4184                           ;calc.c: 162:             new_POT1 = POT1 - halfer1;
  4185  000066  C0BA  F00D         	movff	_POT1,??_adc_sample	;volatile
  4186  00006A  C0BB  F00E         	movff	_POT1+1,??_adc_sample+1	;volatile
  4187  00006E  0E00               	movlw	0
  4188  000070  BE0E               	btfsc	(??_adc_sample+1)^0,7,c
  4189  000072  0EFF               	movlw	255
  4190  000074  6E0F               	movwf	(??_adc_sample+2)^0,c
  4191  000076  6E10               	movwf	(??_adc_sample+3)^0,c
  4192  000078  51B0               	movf	_halfer1& (0+255),w,b	;volatile
  4193  00007A  5C0D               	subwf	??_adc_sample^0,w,c
  4194  00007C  6E62               	movwf	_new_POT1^0,c	;volatile
  4195  00007E  51B1               	movf	(_halfer1+1)& (0+255),w,b	;volatile
  4196  000080  580E               	subwfb	(??_adc_sample+1)^0,w,c
  4197  000082  6E63               	movwf	(_new_POT1+1)^0,c	;volatile
  4198  000084  51B2               	movf	(_halfer1+2)& (0+255),w,b	;volatile
  4199  000086  580F               	subwfb	(??_adc_sample+2)^0,w,c
  4200  000088  6E64               	movwf	(_new_POT1+2)^0,c	;volatile
  4201  00008A  51B3               	movf	(_halfer1+3)& (0+255),w,b	;volatile
  4202  00008C  5810               	subwfb	(??_adc_sample+3)^0,w,c
  4203  00008E  6E65               	movwf	(_new_POT1+3)^0,c	;volatile
  4204                           
  4205                           ;calc.c: 163:             ADCON0bits.CHS = 1;
  4206  000090  50C2               	movf	194,w,c	;volatile
  4207  000092  0BC3               	andlw	-61
  4208  000094  0904               	iorlw	4
  4209  000096  6EC2               	movwf	194,c	;volatile
  4210                           
  4211                           ;calc.c: 164:         }
  4212  000098  EF84  F000         	goto	i2l2164
  4213  00009C                     i2l2156:
  4214  00009C  30C2               	rrcf	194,w,c	;volatile
  4215  00009E  32E8               	rrcf	wreg,f,c
  4216  0000A0  0B0F               	andlw	15
  4217  0000A2  06E8               	decf	wreg,f,c
  4218  0000A4  A4D8               	btfss	status,2,c
  4219  0000A6  EF57  F000         	goto	i2u142_41
  4220  0000AA  EF59  F000         	goto	i2u142_40
  4221  0000AE                     i2u142_41:
  4222  0000AE  EF84  F000         	goto	i2l2164
  4223  0000B2                     i2u142_40:
  4224  0000B2                     
  4225                           ;calc.c: 166:         {;calc.c: 167:             POT2 = (ADRESH << 8) | ADRESL;
  4226  0000B2  50C3               	movf	195,w,c	;volatile
  4227  0000B4  CFC4 F00D          	movff	4036,??_adc_sample	;volatile
  4228  0000B8  6A0E               	clrf	(??_adc_sample+1)^0,c
  4229  0000BA  C00D  F00E         	movff	??_adc_sample,??_adc_sample+1
  4230  0000BE  6A0D               	clrf	??_adc_sample^0,c
  4231  0000C0  100D               	iorwf	??_adc_sample^0,w,c
  4232  0000C2  0100               	movlb	0	; () banked
  4233  0000C4  6FB8               	movwf	_POT2& (0+255),b	;volatile
  4234  0000C6  500E               	movf	(??_adc_sample+1)^0,w,c
  4235  0000C8  6FB9               	movwf	(_POT2+1)& (0+255),b	;volatile
  4236  0000CA                     
  4237                           ; BSR set to: 0
  4238                           ;calc.c: 168:             halfer2 = 511;
  4239  0000CA  0EFF               	movlw	255
  4240  0000CC  6FAC               	movwf	_halfer2& (0+255),b	;volatile
  4241  0000CE  0E01               	movlw	1
  4242  0000D0  6FAD               	movwf	(_halfer2+1)& (0+255),b	;volatile
  4243  0000D2  0E00               	movlw	0
  4244  0000D4  6FAE               	movwf	(_halfer2+2)& (0+255),b	;volatile
  4245  0000D6  0E00               	movlw	0
  4246  0000D8  6FAF               	movwf	(_halfer2+3)& (0+255),b	;volatile
  4247  0000DA                     
  4248                           ; BSR set to: 0
  4249                           ;calc.c: 169:             new_POT2 = POT2 - halfer2;
  4250  0000DA  C0B8  F00D         	movff	_POT2,??_adc_sample	;volatile
  4251  0000DE  C0B9  F00E         	movff	_POT2+1,??_adc_sample+1	;volatile
  4252  0000E2  0E00               	movlw	0
  4253  0000E4  BE0E               	btfsc	(??_adc_sample+1)^0,7,c
  4254  0000E6  0EFF               	movlw	255
  4255  0000E8  6E0F               	movwf	(??_adc_sample+2)^0,c
  4256  0000EA  6E10               	movwf	(??_adc_sample+3)^0,c
  4257  0000EC  51AC               	movf	_halfer2& (0+255),w,b	;volatile
  4258  0000EE  5C0D               	subwf	??_adc_sample^0,w,c
  4259  0000F0  6E5E               	movwf	_new_POT2^0,c	;volatile
  4260  0000F2  51AD               	movf	(_halfer2+1)& (0+255),w,b	;volatile
  4261  0000F4  580E               	subwfb	(??_adc_sample+1)^0,w,c
  4262  0000F6  6E5F               	movwf	(_new_POT2+1)^0,c	;volatile
  4263  0000F8  51AE               	movf	(_halfer2+2)& (0+255),w,b	;volatile
  4264  0000FA  580F               	subwfb	(??_adc_sample+2)^0,w,c
  4265  0000FC  6E60               	movwf	(_new_POT2+2)^0,c	;volatile
  4266  0000FE  51AF               	movf	(_halfer2+3)& (0+255),w,b	;volatile
  4267  000100  5810               	subwfb	(??_adc_sample+3)^0,w,c
  4268  000102  6E61               	movwf	(_new_POT2+3)^0,c	;volatile
  4269                           
  4270                           ;calc.c: 170:             ADCON0bits.CHS = 0;
  4271  000104  0EC3               	movlw	-61
  4272  000106  16C2               	andwf	194,f,c	;volatile
  4273  000108                     i2l2164:
  4274                           
  4275                           ;calc.c: 173:         TOTAL1 = new_POT1 - new_POT2;
  4276  000108  505E               	movf	_new_POT2^0,w,c	;volatile
  4277  00010A  5C62               	subwf	_new_POT1^0,w,c	;volatile
  4278  00010C  0101               	movlb	1	; () banked
  4279  00010E  6F58               	movwf	_TOTAL1& (0+255),b	;volatile
  4280  000110  505F               	movf	(_new_POT2+1)^0,w,c	;volatile
  4281  000112  5863               	subwfb	(_new_POT1+1)^0,w,c	;volatile
  4282  000114  6F59               	movwf	(_TOTAL1+1)& (0+255),b	;volatile
  4283  000116  5060               	movf	(_new_POT2+2)^0,w,c	;volatile
  4284  000118  5864               	subwfb	(_new_POT1+2)^0,w,c	;volatile
  4285  00011A  6F5A               	movwf	(_TOTAL1+2)& (0+255),b	;volatile
  4286  00011C  5061               	movf	(_new_POT2+3)^0,w,c	;volatile
  4287  00011E  5865               	subwfb	(_new_POT1+3)^0,w,c	;volatile
  4288  000120  6F5B               	movwf	(_TOTAL1+3)& (0+255),b	;volatile
  4289  000122                     
  4290                           ; BSR set to: 1
  4291                           ;calc.c: 174:         TOTAL2 = new_POT1 + new_POT2;
  4292  000122  505E               	movf	_new_POT2^0,w,c	;volatile
  4293  000124  2462               	addwf	_new_POT1^0,w,c	;volatile
  4294  000126  6F54               	movwf	_TOTAL2& (0+255),b	;volatile
  4295  000128  505F               	movf	(_new_POT2+1)^0,w,c	;volatile
  4296  00012A  2063               	addwfc	(_new_POT1+1)^0,w,c	;volatile
  4297  00012C  6F55               	movwf	(_TOTAL2+1)& (0+255),b	;volatile
  4298  00012E  5060               	movf	(_new_POT2+2)^0,w,c	;volatile
  4299  000130  2064               	addwfc	(_new_POT1+2)^0,w,c	;volatile
  4300  000132  6F56               	movwf	(_TOTAL2+2)& (0+255),b	;volatile
  4301  000134  5061               	movf	(_new_POT2+3)^0,w,c	;volatile
  4302  000136  2065               	addwfc	(_new_POT1+3)^0,w,c	;volatile
  4303  000138  6F57               	movwf	(_TOTAL2+3)& (0+255),b	;volatile
  4304  00013A                     
  4305                           ; BSR set to: 1
  4306                           ;calc.c: 175:         TOTAL3 = new_POT1 * new_POT2;
  4307  00013A  C062  F001         	movff	_new_POT1,___lmul@multiplier	;volatile
  4308  00013E  C063  F002         	movff	_new_POT1+1,___lmul@multiplier+1	;volatile
  4309  000142  C064  F003         	movff	_new_POT1+2,___lmul@multiplier+2	;volatile
  4310  000146  C065  F004         	movff	_new_POT1+3,___lmul@multiplier+3	;volatile
  4311  00014A  C05E  F005         	movff	_new_POT2,___lmul@multiplicand	;volatile
  4312  00014E  C05F  F006         	movff	_new_POT2+1,___lmul@multiplicand+1	;volatile
  4313  000152  C060  F007         	movff	_new_POT2+2,___lmul@multiplicand+2	;volatile
  4314  000156  C061  F008         	movff	_new_POT2+3,___lmul@multiplicand+3	;volatile
  4315  00015A  EC16  F008         	call	___lmul	;wreg free
  4316  00015E  C001  F150         	movff	?___lmul,_TOTAL3	;volatile
  4317  000162  C002  F151         	movff	?___lmul+1,_TOTAL3+1	;volatile
  4318  000166  C003  F152         	movff	?___lmul+2,_TOTAL3+2	;volatile
  4319  00016A  C004  F153         	movff	?___lmul+3,_TOTAL3+3	;volatile
  4320  00016E                     i2l101:
  4321  00016E  926F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4322  000170  0011               	retfie		f
  4323  000172                     __end_of_adc_sample:
  4324                           	callstack 0
  4325                           
  4326 ;; *************** function ___lmul *****************
  4327 ;; Defined at:
  4328 ;;		line 15 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/Umul32.c"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;  multiplier      4    0[COMRAM] unsigned long 
  4331 ;;  multiplicand    4    4[COMRAM] unsigned long 
  4332 ;; Auto vars:     Size  Location     Type
  4333 ;;  product         4    8[COMRAM] unsigned long 
  4334 ;; Return value:  Size  Location     Type
  4335 ;;                  4    0[COMRAM] unsigned long 
  4336 ;; Registers used:
  4337 ;;		wreg, status,2, status,0
  4338 ;; Tracked objects:
  4339 ;;		On entry : 0/0
  4340 ;;		On exit  : 0/0
  4341 ;;		Unchanged: 0/0
  4342 ;; Data sizes:     COMRAM   BANK0   BANK1
  4343 ;;      Params:         8       0       0
  4344 ;;      Locals:         4       0       0
  4345 ;;      Temps:          0       0       0
  4346 ;;      Totals:        12       0       0
  4347 ;;Total ram usage:       12 bytes
  4348 ;; Hardware stack levels used:    1
  4349 ;; This function calls:
  4350 ;;		Nothing
  4351 ;; This function is called by:
  4352 ;;		_adc_sample
  4353 ;; This function uses a non-reentrant model
  4354 ;;
  4355                           
  4356                           	psect	text30
  4357  00102C                     __ptext30:
  4358                           	callstack 0
  4359  00102C                     ___lmul:
  4360                           	callstack 20
  4361  00102C  0E00               	movlw	0
  4362  00102E  6E09               	movwf	___lmul@product^0,c
  4363  001030  0E00               	movlw	0
  4364  001032  6E0A               	movwf	(___lmul@product+1)^0,c
  4365  001034  0E00               	movlw	0
  4366  001036  6E0B               	movwf	(___lmul@product+2)^0,c
  4367  001038  0E00               	movlw	0
  4368  00103A  6E0C               	movwf	(___lmul@product+3)^0,c
  4369  00103C                     i2l2022:
  4370  00103C  A001               	btfss	___lmul@multiplier^0,0,c
  4371  00103E  EF23  F008         	goto	i2u131_41
  4372  001042  EF25  F008         	goto	i2u131_40
  4373  001046                     i2u131_41:
  4374  001046  EF2D  F008         	goto	i2l2026
  4375  00104A                     i2u131_40:
  4376  00104A  5005               	movf	___lmul@multiplicand^0,w,c
  4377  00104C  2609               	addwf	___lmul@product^0,f,c
  4378  00104E  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  4379  001050  220A               	addwfc	(___lmul@product+1)^0,f,c
  4380  001052  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  4381  001054  220B               	addwfc	(___lmul@product+2)^0,f,c
  4382  001056  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  4383  001058  220C               	addwfc	(___lmul@product+3)^0,f,c
  4384  00105A                     i2l2026:
  4385  00105A  90D8               	bcf	status,0,c
  4386  00105C  3605               	rlcf	___lmul@multiplicand^0,f,c
  4387  00105E  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  4388  001060  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  4389  001062  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  4390  001064  90D8               	bcf	status,0,c
  4391  001066  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  4392  001068  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  4393  00106A  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  4394  00106C  3201               	rrcf	___lmul@multiplier^0,f,c
  4395  00106E  5001               	movf	___lmul@multiplier^0,w,c
  4396  001070  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  4397  001072  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  4398  001074  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  4399  001076  A4D8               	btfss	status,2,c
  4400  001078  EF40  F008         	goto	i2u132_41
  4401  00107C  EF42  F008         	goto	i2u132_40
  4402  001080                     i2u132_41:
  4403  001080  EF1E  F008         	goto	i2l2022
  4404  001084                     i2u132_40:
  4405  001084  C009  F001         	movff	___lmul@product,?___lmul
  4406  001088  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  4407  00108C  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  4408  001090  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  4409  001094  0012               	return		;funcret
  4410  001096                     __end_of___lmul:
  4411                           	callstack 0
  4412                           
  4413                           	psect	rparam
  4414  0000                     
  4415                           	psect	temp
  4416  00006F                     btemp:
  4417                           	callstack 0
  4418  00006F                     	ds	1
  4419  0000                     int$flags	set	btemp
  4420  0000                     wtemp8	set	btemp+1
  4421  0000                     ttemp5	set	btemp+1
  4422  0000                     ttemp6	set	btemp+4
  4423  0000                     ttemp7	set	btemp+8
  4424                           
  4425                           	psect	idloc
  4426                           
  4427                           ;Config register IDLOC0 @ 0x200000
  4428                           ;	unspecified, using default values
  4429  200000                     	org	2097152
  4430  200000  FF                 	db	255
  4431                           
  4432                           ;Config register IDLOC1 @ 0x200001
  4433                           ;	unspecified, using default values
  4434  200001                     	org	2097153
  4435  200001  FF                 	db	255
  4436                           
  4437                           ;Config register IDLOC2 @ 0x200002
  4438                           ;	unspecified, using default values
  4439  200002                     	org	2097154
  4440  200002  FF                 	db	255
  4441                           
  4442                           ;Config register IDLOC3 @ 0x200003
  4443                           ;	unspecified, using default values
  4444  200003                     	org	2097155
  4445  200003  FF                 	db	255
  4446                           
  4447                           ;Config register IDLOC4 @ 0x200004
  4448                           ;	unspecified, using default values
  4449  200004                     	org	2097156
  4450  200004  FF                 	db	255
  4451                           
  4452                           ;Config register IDLOC5 @ 0x200005
  4453                           ;	unspecified, using default values
  4454  200005                     	org	2097157
  4455  200005  FF                 	db	255
  4456                           
  4457                           ;Config register IDLOC6 @ 0x200006
  4458                           ;	unspecified, using default values
  4459  200006                     	org	2097158
  4460  200006  FF                 	db	255
  4461                           
  4462                           ;Config register IDLOC7 @ 0x200007
  4463                           ;	unspecified, using default values
  4464  200007                     	org	2097159
  4465  200007  FF                 	db	255
  4466                           
  4467                           	psect	config
  4468                           
  4469                           ; Padding undefined space
  4470  300000                     	org	3145728
  4471  300000  FF                 	db	255
  4472                           
  4473                           ;Config register CONFIG1H @ 0x300001
  4474                           ;	Oscillator
  4475                           ;	OSC = INTIO2, Internal oscillator block, port function on RA6 and RA7
  4476                           ;	Fail-Safe Clock Monitor Enable bit
  4477                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4478                           ;	Internal/External Oscillator Switchover bit
  4479                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4480  300001                     	org	3145729
  4481  300001  08                 	db	8
  4482                           
  4483                           ;Config register CONFIG2L @ 0x300002
  4484                           ;	Power-up Timer Enable bit
  4485                           ;	PWRT = OFF, PWRT disabled
  4486                           ;	Brown-out Reset Enable bits
  4487                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  4488                           ;	Brown-out Reset Voltage bits
  4489                           ;	BORV = 3, Minimum Setting
  4490  300002                     	org	3145730
  4491  300002  19                 	db	25
  4492                           
  4493                           ;Config register CONFIG2H @ 0x300003
  4494                           ;	Watchdog Timer Enable bit
  4495                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4496                           ;	Watchdog Timer Postscale Select bits
  4497                           ;	WDTPS = 32768, 1:32768
  4498  300003                     	org	3145731
  4499  300003  1E                 	db	30
  4500                           
  4501                           ; Padding undefined space
  4502  300004                     	org	3145732
  4503  300004  FF                 	db	255
  4504                           
  4505                           ;Config register CONFIG3H @ 0x300005
  4506                           ;	CCP2 MUX bit
  4507                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  4508                           ;	PORTB A/D Enable bit
  4509                           ;	PBADEN = ANA, PORTB<4:0> pins are configured as analog input channels on Reset
  4510                           ;	Low-Power Timer1 Oscillator Enable bit
  4511                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4512                           ;	MCLR Pin Enable bit
  4513                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4514  300005                     	org	3145733
  4515  300005  83                 	db	131
  4516                           
  4517                           ;Config register CONFIG4L @ 0x300006
  4518                           ;	Stack Full/Underflow Reset Enable bit
  4519                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  4520                           ;	Single-Supply ICSP Enable bit
  4521                           ;	LVP = OFF, Single-Supply ICSP disabled
  4522                           ;	Boot Block Size Select bits
  4523                           ;	BBSIZ = BB256, 256 Word
  4524                           ;	Extended Instruction Set Enable bit
  4525                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4526                           ;	Background Debugger Enable bit
  4527                           ;	DEBUG = 0x1, unprogrammed default
  4528  300006                     	org	3145734
  4529  300006  80                 	db	128
  4530                           
  4531                           ; Padding undefined space
  4532  300007                     	org	3145735
  4533  300007  FF                 	db	255
  4534                           
  4535                           ;Config register CONFIG5L @ 0x300008
  4536                           ;	Code Protection bit
  4537                           ;	CP0 = OFF, Block 0 not code-protected
  4538                           ;	Code Protection bit
  4539                           ;	CP1 = OFF, Block 1 not code-protected
  4540  300008                     	org	3145736
  4541  300008  03                 	db	3
  4542                           
  4543                           ;Config register CONFIG5H @ 0x300009
  4544                           ;	Boot Block Code Protection bitProtect Boot
  4545                           ;	CPB = OFF, Boot block not code-protected
  4546                           ;	Data EEPROM Code Protection bit
  4547                           ;	CPD = OFF, Data EEPROM not code-protected
  4548  300009                     	org	3145737
  4549  300009  C0                 	db	192
  4550                           
  4551                           ;Config register CONFIG6L @ 0x30000A
  4552                           ;	Write Protection bit
  4553                           ;	WRT0 = OFF, Block 0 not write-protected
  4554                           ;	Write Protection bit
  4555                           ;	WRT1 = OFF, Block 1 not write-protected
  4556  30000A                     	org	3145738
  4557  30000A  03                 	db	3
  4558                           
  4559                           ;Config register CONFIG6H @ 0x30000B
  4560                           ;	Configuration Register Write Protection bit
  4561                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4562                           ;	Boot Block Write Protection bit
  4563                           ;	WRTB = OFF, Boot block not write-protected
  4564                           ;	Data EEPROM Write Protection bit
  4565                           ;	WRTD = OFF, Data EEPROM not write-protected
  4566  30000B                     	org	3145739
  4567  30000B  E0                 	db	224
  4568                           
  4569                           ;Config register CONFIG7L @ 0x30000C
  4570                           ;	Table Read Protection bit
  4571                           ;	EBTR0 = OFF, Block 0 not protected from table reads executed in other blocks
  4572                           ;	Table Read Protection bit
  4573                           ;	EBTR1 = OFF, Block 1 not protected from table reads executed in other blocks
  4574  30000C                     	org	3145740
  4575  30000C  03                 	db	3
  4576                           
  4577                           ;Config register CONFIG7H @ 0x30000D
  4578                           ;	Boot Block Table Read Protection bit
  4579                           ;	EBTRB = OFF, Boot block not protected from table reads executed in other blocks
  4580  30000D                     	org	3145741
  4581  30000D  40                 	db	64
  4582                           tosu	equ	0xFFF
  4583                           tosh	equ	0xFFE
  4584                           tosl	equ	0xFFD
  4585                           stkptr	equ	0xFFC
  4586                           pclatu	equ	0xFFB
  4587                           pclath	equ	0xFFA
  4588                           pcl	equ	0xFF9
  4589                           tblptru	equ	0xFF8
  4590                           tblptrh	equ	0xFF7
  4591                           tblptrl	equ	0xFF6
  4592                           tablat	equ	0xFF5
  4593                           prodh	equ	0xFF4
  4594                           prodl	equ	0xFF3
  4595                           indf0	equ	0xFEF
  4596                           postinc0	equ	0xFEE
  4597                           postdec0	equ	0xFED
  4598                           preinc0	equ	0xFEC
  4599                           plusw0	equ	0xFEB
  4600                           fsr0h	equ	0xFEA
  4601                           fsr0l	equ	0xFE9
  4602                           wreg	equ	0xFE8
  4603                           indf1	equ	0xFE7
  4604                           postinc1	equ	0xFE6
  4605                           postdec1	equ	0xFE5
  4606                           preinc1	equ	0xFE4
  4607                           plusw1	equ	0xFE3
  4608                           fsr1h	equ	0xFE2
  4609                           fsr1l	equ	0xFE1
  4610                           bsr	equ	0xFE0
  4611                           indf2	equ	0xFDF
  4612                           postinc2	equ	0xFDE
  4613                           postdec2	equ	0xFDD
  4614                           preinc2	equ	0xFDC
  4615                           plusw2	equ	0xFDB
  4616                           fsr2h	equ	0xFDA
  4617                           fsr2l	equ	0xFD9
  4618                           status	equ	0xFD8

Data Sizes:
    Strings     37
    Constant    0
    Data        0
    BSS         79
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     93     110
    BANK0           128     44      63
    BANK1           244     80     128

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_27(CODE[3]), STR_23(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_27(CODE[3]), STR_23(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_20(CODE[4]), STR_19(CODE[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_20(CODE[4]), STR_19(CODE[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 80
		 -> print_long@s_num(BANK1[80]), print_int@s_num(COMRAM[80]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_20(CODE[4]), STR_19(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_20(CODE[4]), STR_19(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_20(CODE[4]), STR_19(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 80
		 -> print_long@s_num(BANK1[80]), print_int@s_num(COMRAM[80]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1183_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 80
		 -> print_long@s_num(BANK1[80]), print_int@s_num(COMRAM[80]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 80
		 -> print_long@s_num(BANK1[80]), print_int@s_num(COMRAM[80]), 

    print@chr	PTR unsigned char  size(2) Largest target is 80
		 -> print_long@s_num(BANK1[80]), print_int@s_num(COMRAM[80]), STR_18(CODE[11]), STR_17(CODE[11]), 
		 -> STR_16(CODE[2]), STR_15(CODE[2]), STR_14(CODE[4]), STR_13(CODE[2]), 
		 -> STR_12(CODE[11]), STR_11(CODE[11]), STR_10(CODE[2]), STR_9(CODE[2]), 
		 -> STR_8(CODE[4]), STR_7(CODE[2]), STR_6(CODE[11]), STR_5(CODE[11]), 
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[4]), STR_1(CODE[2]), 

    pin_setup@sp	PTR volatile struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    signalPORT	PTR volatile struct . size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTD(SFR[1]), 

    pin_setup@dp	PTR volatile struct . size(2) Largest target is 1
		 -> PORTC(SFR[1]), 

    dataPORT	PTR volatile struct . size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTC(SFR[1]), 


Critical Paths under _main in COMRAM

    _setCursor->_sendCommand
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _print->_write
    _write->_sendData
    _sendData->_send
    _home->_sendCommand
    _begin->_sendCommand
    _begin->_setRowOffsets
    _displayON->_sendCommand
    _clear->_sendCommand
    _sendCommand->_send
    _send->_write8bits

Critical Paths under _adc_sample in COMRAM

    _adc_sample->___lmul

Critical Paths under _main in BANK0

    _main->_print_long
    _print_long->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _adc_sample in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_print_long

Critical Paths under _adc_sample in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   18207
                              _begin
                              _clear
                               _home
                          _pin_setup
                              _print
                         _print_long
                          _setCursor
 ---------------------------------------------------------------------------------
 (1) _setCursor                                            5     3      2     670
                                             20 COMRAM     5     3      2
                        _sendCommand
 ---------------------------------------------------------------------------------
 (1) _print_long                                          84    80      4   12970
                                             40 BANK0      4     0      4
                                              0 BANK1     80    80      0
                              _print
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8    9849
                                             22 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    9177
                                             14 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           54    48      6    8692
                                             79 COMRAM    14     8      6
                                              0 BANK0     14    14      0
                               _dtoa
                              _fputc
                            _strncmp
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     865
                                             16 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    5863
                                             43 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3417
                                             32 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                             16 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             25 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                             16 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             34 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                             16 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                             16 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _print                                                2     0      2    2200
                                             21 COMRAM     2     0      2
                              _write
 ---------------------------------------------------------------------------------
 (3) _write                                                1     1      0     335
                                             20 COMRAM     1     1      0
                           _sendData
 ---------------------------------------------------------------------------------
 (4) _sendData                                             1     1      0     304
                                             19 COMRAM     1     1      0
                               _send
 ---------------------------------------------------------------------------------
 (1) _pin_setup                                            4     0      4     196
                                             16 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _home                                                 0     0      0     304
                        _sendCommand
 ---------------------------------------------------------------------------------
 (1) _begin                                                4     2      2    1563
                                             20 COMRAM     4     2      2
                              _clear
                          _displayON
                        _sendCommand
                      _setRowOffsets
 ---------------------------------------------------------------------------------
 (2) _setRowOffsets                                        4     1      3     316
                                             16 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (2) _displayON                                            0     0      0     304
                        _sendCommand
 ---------------------------------------------------------------------------------
 (1) _clear                                                0     0      0     304
                        _sendCommand
 ---------------------------------------------------------------------------------
 (2) _sendCommand                                          1     1      0     304
                                             19 COMRAM     1     1      0
                               _send
 ---------------------------------------------------------------------------------
 (3) _send                                                 2     1      1     273
                                             17 COMRAM     2     1      1
                         _write8bits
 ---------------------------------------------------------------------------------
 (4) _write8bits                                           1     1      0      31
                                             16 COMRAM     1     1      0
                        _pulseEnable
 ---------------------------------------------------------------------------------
 (5) _pulseEnable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _adc_sample                                          4     4      0     370
                                             12 COMRAM     4     4      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (11) ___lmul                                             12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _begin
     _clear
       _sendCommand
         _send
           _write8bits
             _pulseEnable
     _displayON
       _sendCommand
         _send
           _write8bits
             _pulseEnable
     _sendCommand
       _send
         _write8bits
           _pulseEnable
     _setRowOffsets
   _clear
     _sendCommand
       _send
         _write8bits
           _pulseEnable
   _home
     _sendCommand
       _send
         _write8bits
           _pulseEnable
   _pin_setup
   _print
     _write
       _sendData
         _send
           _write8bits
             _pulseEnable
   _print_long
     _print
       _write
         _sendData
           _send
             _write8bits
               _pulseEnable
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _strncmp
   _setCursor
     _sendCommand
       _send
         _write8bits
           _pulseEnable

 _adc_sample (ROOT)
   ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F3      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1            F4      0       0       5        0.0%
BANK1               F4     50      80       6       52.5%
BITBANK0            80      0       0       3        0.0%
BANK0               80     2C      3F       4       49.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     5D      6E       1       87.3%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12D       7        0.0%
DATA                 0      0     12D       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Jul 27 00:16:49 2022

                     l84 08B8                       l86 096E                      l213 11D2  
                    l221 13F2                      l134 13B6                      l142 1408  
                    l215 11F2                      l224 137C                      l218 13E4  
                    l154 1322                      l227 13A4                      l139 102A  
                    l172 13C6                      l148 1154                      l157 13FE  
                    l175 1390                      l344 0BB6                      l169 13D6  
                    l179 1278                      l357 0D1A                      l940 0F4A  
                    l908 11A6                      l942 0F84                      l950 02CE  
                    l937 0F08                      l948 02C6                      l975 07AC  
                    l992 12B8                      l968 0504                      l984 10EE  
                    l985 10F6                      l989 12B0                      _abs 127A  
                    _pad 0EC4                      wreg 000FE8                     l1004 0EC2  
                   l1012 1236                     l1021 12EE                     l1015 140A  
                   l1025 0DF8                     ?_abs 0023                     l2300 0BB8  
                   l2220 0E46                     l2212 0DFA                     l2230 136A  
                   l2310 0BFC                     l2302 0BBC                     l2222 0E7C  
                   l2214 0E0C                     l2232 1374                     l2320 0C64  
                   l2312 0C1C                     l2304 0BCA                     l2216 0E1E  
                   l2240 1216                     l2400 0396                     l2226 1356  
                   l2330 0CDA                     l2322 0C92                     l2314 0C3A  
                   l2306 0BEA                     l2218 0E28                     l2234 11F4  
                   l2242 12BA                     l2410 043E                     l2402 039C  
                   l2228 1360                     l2252 1394                     l2260 0A42  
                   l2332 0CFA                     l2324 0CB2                     l2316 0C42  
                   l2308 0BEE                     l2236 1200                     l2244 12C6  
                   l2340 0EE6                     l2420 04A0                     l2412 0458  
                   l2404 03A2                     l2500 0776                     l2254 13A0  
                   l2510 1402                     l2270 0A98                     l2262 0A62  
                   l2326 0CC4                     l2318 0C56                     l2238 1212  
                   l2246 12CA                     l2350 0F2C                     l2342 0EF4  
                   l2422 04A6                     l2430 04DC                     l2414 0472  
                   l2406 0406                     l2502 079A                     l2520 10F8  
                   l2280 0AEC                     l2272 0AA4                     l2264 0A66  
                   l2256 0A30                     l2328 0CCA                     l2360 1294  
                   l2248 12E2                     l2352 0F58                     l2344 0F00  
                   l2336 0EC4                     l2424 04B8                     l2408 0420  
                   l2416 0480                     l2440 0D52                     l2512 1096  
                   l2600 07AE                     l2370 11EC                     l2362 11AA  
                   l2530 13CE                     l2522 10FC                     l2290 0B60  
                   l2282 0AFE                     l2274 0AC2                     l2266 0A74  
                   l2258 0A34                     l2354 0F6C                     l2346 0F14  
                   l2338 0ED2                     l2426 04C4                     l2418 0492  
                   l2450 0DD4                     l2442 0D60                     l2434 0D1C  
                   l2514 109E                     l2610 07DE                     l2602 07B6  
                   l2364 11BA                     l2508 13E8                     l2532 13F4  
                   l2524 1120                     l2284 0B2C                     l2276 0ACA  
                   l2292 0B66                     l2268 0A94                     l2348 0F28  
                   l2428 04CC                     l2380 029E                     l2372 0228  
                   l2444 0D7C                     l2436 0D46                     l2460 0538  
                   l2516 10AC                     l2540 1170                     l2700 09DA  
                   l2620 07F2                     l2612 07E0                     l2604 07CA  
                   l2366 11C8                     l2534 13F6                     l2550 0F8E  
                   l2454 13DA                     l2526 1124                     l2294 0B76  
                   l2286 0B4C                     l2278 0ADE                     l2358 127A  
                   l2390 02F6                     l2382 02A0                     l2374 0248  
                   l2446 0D98                     l2470 05DE                     l2462 054A  
                   l2518 10D2                     l2542 1178                     l2702 09E6  
                   l2710 0A24                     l2630 07FC                     l2622 07F4  
                   l2614 07E4                     l2606 07D8                     l2368 11DC  
                   l2528 13C8                     l2560 0FC8                     l2552 0F9E  
                   l2296 0B96                     l2288 0B4E                     l2392 02FC  
                   l2384 02BA                     l2376 0270                     l2448 0DAA  
                   l2464 054E                     l2456 0506                     l2544 1194  
                   l2536 1156                     l2704 09F2                     l2640 081E  
                   l2632 07FE                     l2624 07F6                     l2616 07EC  
                   l2608 07DC                     l2570 0FF8                     l2562 0FCC  
                   l2554 0FA0                     l2394 0304                     l2386 02D6  
                   l2378 0290                     l2490 0750                     l2474 0616  
                   l2466 0572                     l2458 052A                     l2538 1168  
                   l2706 0A00                     l2650 0862                     l2642 0822  
                   l2634 0800                     l2626 07F8                     l2618 07EE  
                   l2580 101E                     l2572 0FFE                     l2564 0FDC  
                   l2556 0FA4                     l2548 0F88                     l2396 030E  
                   l2388 02E8                     l2484 070A                     l2476 064C  
                   l2468 0596                     l2708 0A14                     l2660 08A8  
                   l2652 086E                     l2644 082E                     l2636 0802  
                   l2628 07FA                     l1942 1380                     l2582 1022  
                   l2574 1008                     l2566 0FE6                     l2558 0FB8  
                   l2398 0314                     l2486 072E                     l2494 075C  
                   l2478 0682                     l2590 123A                     l2670 08F8  
                   l2662 08C6                     l2654 087A                     l2646 0842  
                   l2638 0810                     l1944 1384                     l2576 1012  
                   l2568 0FEE                     l2584 13B8                     l2496 076A  
                   l2488 073C                     l2592 1256                     l2680 093C  
                   l2672 0904                     l2664 08D4                     l2656 0886  
                   l2648 084E                     l1946 1388                     l2578 1016  
                   l2586 13BE                     l2594 1262                     l2690 098E  
                   l2682 094A                     l2674 0918                     l2666 08D8  
                   l2658 0894                     l1948 138C                     l2588 12F0  
                   l2692 099A                     l2684 095E                     l2676 0924  
                   l2668 08E4                     l1966 13A6                     l2694 09AE  
                   l2686 097C                     l2678 0930                     ?_pad 0021  
                   l2696 09BA                     l2688 098A                     l2698 09CE  
                   STR_1 0212                     STR_2 0218                     STR_3 0222  
                   STR_4 0224                     STR_5 0201                     STR_6 0201  
                   STR_7 0212                     STR_8 0214                     STR_9 0222  
                   u2000 0FC8                     u2001 0FC4                     u2010 1256  
                   u2011 1252                     u2020 0810                     u2021 080C  
                   u2030 081E                     u2031 081A                     u2040 08C6  
                   u2041 08C2                     u2050 08D4                     u2107 0FE8  
                   u2051 08D0                     u1500 0A74                     u2060 097C  
                   u2117 0FFA                     u1501 0A70                     u2061 0978  
                   u1430 0E0C                     u2070 098A                     u2127 13D0  
                   u1511 0A9E                     u1431 0E08                     u2071 0986  
                   u1520 0AC2                     u1600 0C92                     u1440 0E1E  
                   u2137 1376                     u1521 0ABE                     u1601 0C8E  
                   u1441 0E1A                     u1530 0AEC                     u1610 0CDA  
                   u1450 0E46                     u1531 0AE8                     u1611 0CD6  
                   u1451 0E42                     u1540 0B2C                     u1460 0E7C  
                   u1620 0ED2                     u1700 025A                     u1541 0B28  
                   u1461 0E78                     u1621 0ECE                     u1550 0B76  
                   u1470 1236                     u1630 0EF4                     u1710 0270  
                   u2087 13C0                     u1551 0B72                     u1471 1232  
                   u1631 0EF0                     u1711 026C                     u1560 0BCA  
                   u1480 12E2                     u1640 0F4A                     u1800 0480  
                   u1720 029E                     u2097 0FD2                     u1561 0BC6  
                   u1481 12DE                     u1641 0F46                     u1801 047C  
                   u1721 029A                     u1490 0A42                     u1570 0BFC  
                   u1650 0F58                     u1810 0492                     u1730 02BA  
                   u1491 0A3E                     u1571 0BF8                     u1651 0F54  
                   u1811 048E                     u1731 02B6                     u1580 0C3A  
                   u1660 1294                     u1820 04A0                     u1740 02E8  
                   u1900 0572                     u1581 0C36                     u1661 1290  
                   u1821 049C                     u1741 02E4                     u1901 056E  
                   u1670 11BA                     u1590 0C64                     u1830 04B8  
                   u1750 02F6                     u1910 0596                     u1671 11B6  
                   u1591 0C60                     u1831 04B4                     u1751 02F2  
                   u1911 0592                     u1680 11EC                     u1760 0420  
                   u1840 0D46                     u1920 064C                     u1681 11E8  
                   u1761 041C                     u1841 0D42                     u1921 0648  
                   u1770 043E                     u1690 0258                     u1850 0D7C  
                   u1930 0682                     u1771 043A                     u1691 0252  
                   u1851 0D78                     u1931 067E                     u1780 0458  
                   u1860 0D98                     u1940 072E                     u1781 0454  
                   u1861 0D94                     u1941 072A                     u1790 0472  
                   u1870 0DAA                     u1950 10EE                     u1791 046E  
                   u1871 0DA6                     u1951 10EA                     u1960 111C  
                   u1880 0DD4                     u1881 0DD0                     u1970 1144  
                   u1890 052A                     u1891 0526                     u1980 1154  
                   u1981 1150                     u1990 0F9E                     u1991 0F9A  
                   u1967 1112                     u1977 113A                     _POT1 00BA  
                   _POT2 00B8                     abs@a 0023                     _dbuf 0160  
                   _main 07AE                     _dtoa 0228                     _home 13B8  
                   _send 11A8                     _prec 0066                     _nout 00B4  
                   pad@i 0028                     pad@p 0025                     fsr1h 000FE2  
                   fsr2h 000FDA                     indf1 000FE7                     indf2 000FDF  
                   fsr1l 000FE1                     pad@w 002A                     fsr2l 000FD9  
                   btemp 006F                     start 0172             ___param_bank 000000  
                  ??_abs 0025                    ??_pad 0027          __end_of___aodiv 0BB8  
                  ?_main 0001                    ?_dtoa 002C          __end_of___aomod 0D1C  
                  ?_home 0001                    ?_send 0012                    STR_10 0224  
                  STR_11 0201                    STR_12 0201                    STR_20 020C  
                  STR_13 0212                    STR_14 0210                    STR_15 0222  
                  STR_23 020D                    STR_16 0224                    STR_17 0201  
                  STR_25 021C                    STR_18 0201                    STR_27 021C  
                  STR_19 021F                    i2l101 016E                    i2l241 1084  
                  i2l242 1094             vfpfcnvrt@fmt 0052                    _PORTC 000F82  
                  _PORTD 000F83                    _TRISC 000F94                    _TRISD 000F95  
    ___lmul@multiplicand 0005                    _begin 0F86                    _clear 13C8  
                  _flags 0068                    _fputc 0DFA                    _fputs 11F4  
                  _print 10F8                    pad@fp 0021                    _width 00B6  
                  _putch 140A                    dtoa@d 002E                    dtoa@i 004E  
                  dtoa@n 0046                    dtoa@p 0040                    dtoa@s 0044  
                  dtoa@w 0042                    _write 1400                    tablat 000FF5  
                  ttemp5 0070                    ttemp6 0073                    ttemp7 0077  
                  status 000FD8                    wtemp8 0070          __end_of_sprintf 11A8  
        __end_of_strncmp 0DFA          __initialization 1324             __end_of_main 0A30  
           __end_of_dtoa 0506             __end_of_home 13C8             __end_of_send 11F4  
          print_long@num 00A8             ?_sendCommand 0001                   ??_main 005E  
                 ??_dtoa 0036                   ??_home 0015                   ??_send 0013  
          __activetblptr 000002                   ?_begin 0015                   ?_clear 0001  
                 _ADCON1 000FC1    __end_of_setRowOffsets 1392                   ?_fputc 0011  
                 ?_fputs 001A                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 ?_print 0016                   ?_putch 0001                   ?_write 0001  
           __displaymode 006B                   i2l2020 102C                   i2l2022 103C  
                 i2l2024 104A                   i2l2026 105A                   i2l2028 1064  
                 i2l2150 003E                   i2l2142 000A                   i2l2160 00CA  
                 i2l2152 0056                   i2l2144 0018                   i2l2162 00DA  
                 i2l2154 0066                   i2l2146 0026                   i2l2164 0108  
                 i2l2156 009C                   i2l2148 0028                   i2l2166 0122  
                 i2l2158 00B2                   i2l2168 013A                   _TOTAL1 0158  
                 _TOTAL2 0154                   _TOTAL3 0150             vfprintf@cfmt 0094  
                 ___lmul 102C                ??___aodiv 0021                ??___aomod 0021  
                 clear_0 132A                   clear_1 1336                   clear_2 1342  
                 pad@buf 0023         __end_of_sendData 13E6                   dtoa@fp 002C  
                 _strlen 12BA                   fputc@c 0011                   fputs@c 001E  
                 fputs@i 001F                   fputs@s 001A             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
                 putch@c 0001         __end_of_vfprintf 10F8                ??_sprintf 005E  
              ??_strncmp 0017               __accesstop 0080  __end_of__initialization 1348  
          sendData@value 0014            ___rparam_used 000001             ?_pulseEnable 0001  
         __pcstackCOMRAM 0001            __end_of_begin 102C            __end_of_clear 13D8  
          __end_of_fputc 0EC4            __end_of_fputs 1238               _adc_sample 0008  
          __end_of_print 1156            __end_of_putch 140C            __end_of_write 140A  
                ??_begin 0017                  ??_clear 0015       __size_of_displayON 000C  
                ??_fputc 0015                  ??_fputs 001E                  ??_print 0018  
                ??_putch 0011                  ??_write 0015               __pbssBANK0 00AC  
             __pbssBANK1 0150               __pnvCOMRAM 006D                  ?___lmul 0001  
     __size_of_setCursor 0042       __size_of_pin_setup 0012           ___lmul@product 0009  
                ?_strlen 0011     __size_of_sendCommand 000E       __size_of_vfpfcnvrt 02A8  
            pin_setup@dp 0011              pin_setup@sp 0013               begin@lines 0015  
              ?_sendData 0001                  __Hparam 0000                  __Lparam 0000  
                ___aodiv 0A30        __end_of_displayON 1400                  ___aomod 0BB8  
        __size_of___lmul 006A              ?_adc_sample 0001                ?_vfprintf 008E  
           __psmallconst 0200                  __pcinit 1324                  __ramtop 0200  
                _halfer1 00B0                  _halfer2 00AC                  __ptext0 07AE  
                __ptext1 1238                  __ptext2 12F0                  __ptext3 1156  
                __ptext4 1096                  __ptext5 0506                  __ptext6 0D1C  
                __ptext7 0228                  __ptext8 0EC4                  __ptext9 12BA  
        __size_of_strlen 0036             __size_of_abs 0040             __size_of_pad 00C2  
        __displaycontrol 006C                  _sprintf 1156                  _strncmp 0D1C  
   end_of_initialization 1348        __end_of_setCursor 127A        __end_of_pin_setup 13B8  
                fputc@fp 0013            __Lmediumconst 0000                  fputs@fp 001C  
             ??_sendData 0014               _signalPORT 006D        __end_of_vfpfcnvrt 07AE  
                postdec2 000FDD                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE     __size_of_pulseEnable 0028               ??_vfprintf 005E  
                strlen@a 0013                  strlen@s 0011                _PORTDbits 000F83  
             _print_long 12F0                _TRISAbits 000F92          write8bits@value 0011  
           begin@dotsize 0016      __size_of_adc_sample 016A         sendCommand@value 0014  
             _write8bits 1392           __end_of___lmul 1096   __size_of_setRowOffsets 0014  
            vfpfcnvrt@ap 0054              vfpfcnvrt@fp 0050              vfpfcnvrt@ll 0056  
         __end_of_strlen 12F0      start_initialization 1324          print_long@s_num 0100  
            __end_of_abs 12BA              __end_of_pad 0F86              vfprintf@fmt 0090  
               ??___lmul 0009                 ??_strlen 0013              ?_print_long 00A8  
            __pbssCOMRAM 005E            __pcstackBANK0 0080            __pcstackBANK1 0100  
       ___aodiv@dividend 0011            _setRowOffsets 137E                __pnvBANK0 00BC  
              _dtoa$1263 003E        __size_of_sendData 000E                __pintcode 0008  
            ?_write8bits 0001                 ?___aodiv 0011                 ?___aomod 0011  
       ___aodiv@quotient 0023             ??_adc_sample 000D                __numlines 006A  
          ??_sendCommand 0014                _displayON 13F4        __size_of_vfprintf 0062  
              begin@cols 0018              __smallconst 0200           __size_of_begin 00A6  
            __rowOffsets 015C           __size_of_clear 0010             setCursor@col 0019  
           setCursor@row 0015           ?_setRowOffsets 0011                 ?_sprintf 0096  
         __size_of_fputc 00CA           __size_of_fputs 0044                 ?_strncmp 0011  
         __size_of_print 005E           __size_of_putch 0002           __size_of_write 000A  
     __end_of_adc_sample 0172                _setCursor 1238                 _IPR1bits 000F9F  
               _PIE1bits 000F9D                _pin_setup 13A6      __size_of_print_long 0034  
               i2u131_40 104A                 i2u131_41 1046                 i2u132_40 1084  
               i2u140_40 0026                 i2u132_41 1080                 i2u140_41 0022  
               i2u141_40 003E                 i2u141_41 003A                 i2u142_40 00B2  
               i2u142_41 00AE                 i2u139_40 0018                 i2u139_41 0014  
               _PIR1bits 000F9E                 _RCONbits 000FD0                _vfpfcnvrt 0506  
             ?_displayON 0001               _ADCON0bits 000FC2               _ADCON2bits 000FC0  
    __end_of_sendCommand 13F4        ___lmul@multiplier 0001      __size_of_write8bits 0014  
             ?_setCursor 0015               ?_pin_setup 0011                 __Hrparam 0000  
          ??_pulseEnable 0011               vfprintf@ap 0092                 __Lrparam 0000  
             vfprintf@fp 008E         __size_of___aodiv 0188         __size_of___aomod 0164  
             ?_vfpfcnvrt 0050          ___aodiv@divisor 0019          ___aodiv@counter 0021  
               _dataPORT 00BC               sprintf@fmt 0098                send@value 0013  
        ??_setRowOffsets 0014                 __ptext10 11F4                 __ptext11 0DFA  
               __ptext20 13B8                 __ptext12 140A                 __ptext21 0F86  
               __ptext13 127A                 __ptext30 102C                 __ptext22 137E  
               __ptext14 0BB8                 __ptext23 13F4                 __ptext15 0A30  
               __ptext24 13C8                 __ptext16 10F8                 __ptext25 13E6  
               __ptext17 1400                 __ptext26 11A8                 __ptext18 13D8  
               __ptext27 1392                 __ptext19 13A6                 __ptext28 1356  
       __size_of_sprintf 0052         __size_of_strncmp 00DE                 _new_POT1 0062  
               _new_POT2 005E            __size_of_main 0282            __size_of_dtoa 02DE  
          __size_of_home 0010            __size_of_send 004C                 _sendData 13D8  
               int$flags 006F         __displayfunction 00BE                 _vfprintf 1096  
            _sendCommand 13E6      __end_of_pulseEnable 137E              ??_displayON 0015  
       ___aomod@dividend 0011             ??_print_long 005E               _INTCONbits 000FF2  
               intlevel2 0000                sprintf@ap 00A0                 send@mode 0012  
      setRowOffsets@row0 0014        setRowOffsets@row1 0011        setRowOffsets@row2 0012  
      setRowOffsets@row3 0013              ??_setCursor 0017              ??_pin_setup 0015  
              strncmp@_l 0011                strncmp@_r 0013       __end_of_print_long 1324  
           ??_write8bits 0011                 print@chr 0016          ___aomod@divisor 0019  
            ??_vfpfcnvrt 0080          ___aomod@counter 0021                 sprintf@f 00A2  
               sprintf@s 0096                 strncmp@l 0018                 strncmp@n 0015  
               strncmp@r 001A                 write@chr 0015             ___aodiv@sign 0022  
     __end_of_write8bits 13A6             ___aomod@sign 0022              _pulseEnable 1356  
